{
  "code": "export var DP;\r\n(function (DP) {\r\n    let Basic;\r\n    (function (Basic) {\r\n        Basic.appGuid = \"c641df72-fb97-2418-e576-d92133e0f2de\";\r\n        Basic.companyName = \"苏州番茄互娱信息科技有限公司\";\r\n        Basic.productName = \"甩锅给队友\";\r\n        Basic.packageName = \"com.tomatojoy.sggdy.toutiao\";\r\n        Basic.versionName = \"1.0.7\";\r\n        Basic.versionCode = 10;\r\n        Basic.channel = \"ZJTD_AppRt\";\r\n    })(Basic = DP.Basic || (DP.Basic = {}));\r\n    let XIAOMI;\r\n    (function (XIAOMI) {\r\n        let QG;\r\n        (function (QG) {\r\n            QG.insertId = null;\r\n            QG.videoId = null;\r\n        })(QG = XIAOMI.QG || (XIAOMI.QG = {}));\r\n    })(XIAOMI = DP.XIAOMI || (DP.XIAOMI = {}));\r\n    let WX;\r\n    (function (WX) {\r\n        WX.appId = null;\r\n        WX.bannerId = null;\r\n        WX.insertId = null;\r\n        WX.videoId = null;\r\n    })(WX = DP.WX || (DP.WX = {}));\r\n    let VIVO;\r\n    (function (VIVO) {\r\n        let QG;\r\n        (function (QG) {\r\n            QG.bannerId = null;\r\n            QG.insertId = null;\r\n            QG.videoId = null;\r\n            QG.nativeId = null;\r\n            QG.nativeCustomInsert = null;\r\n        })(QG = VIVO.QG || (VIVO.QG = {}));\r\n    })(VIVO = DP.VIVO || (DP.VIVO = {}));\r\n    let TT;\r\n    (function (TT) {\r\n        TT.appId = \"tt302d4690af074936\";\r\n        TT.bannerId = \"oghoafieoor3dha9q5\";\r\n        TT.videoId = \"1e3c8djbbcjcj3jvek\";\r\n    })(TT = DP.TT || (DP.TT = {}));\r\n    let ReYun;\r\n    (function (ReYun) {\r\n        ReYun.appId = \"cfbb7ea98581fd468a304a564d8a326f\";\r\n    })(ReYun = DP.ReYun || (DP.ReYun = {}));\r\n    let QQ;\r\n    (function (QQ) {\r\n        QQ.appId = null;\r\n        QQ.bannerId = null;\r\n        QQ.insertId = null;\r\n        QQ.videoId = null;\r\n    })(QQ = DP.QQ || (DP.QQ = {}));\r\n    let OPPO;\r\n    (function (OPPO) {\r\n        let QG;\r\n        (function (QG) {\r\n            QG.appId = null;\r\n            QG.bannerId = null;\r\n            QG.insertId = null;\r\n            QG.videoId = null;\r\n            QG.nativeId = null;\r\n            QG.nativeCustomInsert = null;\r\n        })(QG = OPPO.QG || (OPPO.QG = {}));\r\n    })(OPPO = DP.OPPO || (DP.OPPO = {}));\r\n    let HBS;\r\n    (function (HBS) {\r\n        HBS.appId = null;\r\n    })(HBS = DP.HBS || (DP.HBS = {}));\r\n    let Adwending;\r\n    (function (Adwending) {\r\n        Adwending.username = null;\r\n        Adwending.gameid = 0;\r\n    })(Adwending = DP.Adwending || (DP.Adwending = {}));\r\n})(DP || (DP = {}));\r\nwindow[\"DP\"] = DP;\r\nexport var TJ;\r\n(function (TJ) {\r\n    var Define;\r\n    (function (Define) {\r\n        let Channel;\r\n        (function (Channel) {\r\n            let Android;\r\n            (function (Android) {\r\n                Android.GooglePlay = \"GooglePlay\";\r\n                Android.MiGuTV = \"MiGuTV\";\r\n                Android._233 = \"233\";\r\n                Android.wdj = \"wdj\";\r\n                Android.aiqiyi = \"aiqiyi\";\r\n                Android.mailaing3 = \"mailaing3\";\r\n                Android.mintegral = \"mintegral\";\r\n                Android.tongyong2 = \"tongyong2\";\r\n                Android.egame = \"egame\";\r\n                Android.mailiang = \"mailiang\";\r\n                Android.agg = \"agg\";\r\n                Android.test = \"test\";\r\n                Android.baidu = \"baidu\";\r\n                Android.tianzi = \"tianzi\";\r\n                Android._4399 = \"4399\";\r\n                Android.nby = \"nby\";\r\n                Android.wifi = \"wifi\";\r\n                Android.baidu2 = \"baidu2\";\r\n                Android.tianzi1 = \"tianzi1\";\r\n                Android._43992 = \"43992\";\r\n                Android.haoyou = \"haoyou\";\r\n                Android.toutiao = \"toutiao\";\r\n                Android.tongyong = \"tongyong\";\r\n                Android.xiaoqi = \"xiaoqi\";\r\n                Android.qingning = \"qingning\";\r\n                Android.coolpad = \"coolpad\";\r\n                Android.jinli = \"jinli\";\r\n                Android.zhongxing = \"zhongxing\";\r\n                Android.samsung = \"samsung\";\r\n                Android.taptap = \"taptap\";\r\n                Android.yyb = \"yyb\";\r\n                Android.jiuyou = \"jiuyou\";\r\n                Android.yyh = \"yyh\";\r\n                Android.qihoo = \"qihoo\";\r\n                Android.lenovo = \"lenovo\";\r\n                Android.huawei = \"huawei\";\r\n                Android.meizu = \"meizu\";\r\n                Android.xiaomi = \"xiaomi\";\r\n                Android.vivo = \"vivo\";\r\n                Android.oppo = \"oppo\";\r\n            })(Android = Channel.Android || (Channel.Android = {}));\r\n            let iOS;\r\n            (function (iOS) {\r\n                iOS.AppStore_iOS = \"AppStore_iOS\";\r\n            })(iOS = Channel.iOS || (Channel.iOS = {}));\r\n            let AppRt;\r\n            (function (AppRt) {\r\n                AppRt.HUAWEI_AppRt = \"HUAWEI_AppRt\";\r\n                AppRt._4399_AppRt = \"4399_AppRt\";\r\n                AppRt.WX_AppRt = \"WX_AppRt\";\r\n                AppRt.XIAOMI_AppRt = \"XIAOMI_AppRt\";\r\n                AppRt.VIVO_AppRt = \"VIVO_AppRt\";\r\n                AppRt.OPPO_AppRt = \"OPPO_AppRt\";\r\n                AppRt.QTT_AppRt = \"QTT_AppRt\";\r\n                AppRt.ZJTD_AppRt = \"ZJTD_AppRt\";\r\n                AppRt.UC_AppRt = \"UC_AppRt\";\r\n                AppRt.SQ_AppRt = \"SQ_AppRt\";\r\n                AppRt.SY_AppRt = \"SY_AppRt\";\r\n            })(AppRt = Channel.AppRt || (Channel.AppRt = {}));\r\n        })(Channel = Define.Channel || (Define.Channel = {}));\r\n    })(Define = TJ.Define || (TJ.Define = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Define;\r\n    (function (Define) {\r\n        let Event;\r\n        (function (Event) {\r\n            Event[Event[\"Click\"] = 0] = \"Click\";\r\n            Event[Event[\"Close\"] = 1] = \"Close\";\r\n            Event[Event[\"Expose\"] = 2] = \"Expose\";\r\n            Event[Event[\"NoAds\"] = 3] = \"NoAds\";\r\n            Event[Event[\"Reward\"] = 4] = \"Reward\";\r\n            Event[Event[\"NoReward\"] = 5] = \"NoReward\";\r\n            Event[Event[\"Success\"] = 6] = \"Success\";\r\n            Event[Event[\"Failure\"] = 7] = \"Failure\";\r\n            Event[Event[\"Error\"] = 8] = \"Error\";\r\n            Event[Event[\"Cancel\"] = 9] = \"Cancel\";\r\n            Event[Event[\"Complete\"] = 10] = \"Complete\";\r\n            Event[Event[\"Statistic\"] = 11] = \"Statistic\";\r\n        })(Event = Define.Event || (Define.Event = {}));\r\n    })(Define = TJ.Define || (TJ.Define = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Define;\r\n    (function (Define) {\r\n        let Platform;\r\n        (function (Platform) {\r\n            Platform[Platform[\"Unknown\"] = 0] = \"Unknown\";\r\n            Platform[Platform[\"Android\"] = 1] = \"Android\";\r\n            Platform[Platform[\"iOS\"] = 2] = \"iOS\";\r\n            Platform[Platform[\"AppRt\"] = 3] = \"AppRt\";\r\n        })(Platform = Define.Platform || (Define.Platform = {}));\r\n    })(Define = TJ.Define || (TJ.Define = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Engine;\r\n    (function (Engine) {\r\n        let Android;\r\n        (function (Android) {\r\n            class Java {\r\n                static Send(...params) {\r\n                    if (this.javaClass == null) {\r\n                        if (window['PlatformClass'] != null) {\r\n                            this.javaClass = window['PlatformClass'].createClass(\"tj.Java\");\r\n                        }\r\n                    }\r\n                    if (this.javaClass != null) {\r\n                        return this.javaClass.call(...params);\r\n                    }\r\n                    return \"\";\r\n                }\r\n                static Set(className, fieldName, value, obj) {\r\n                    Java.Send(\"Set\", className, fieldName, value, obj);\r\n                }\r\n                static Get(className, fieldName, obj) {\r\n                    return Java.Send(\"Get\", className, fieldName, obj);\r\n                }\r\n                static Call(className, methodName, values, obj) {\r\n                    return Java.Send(\"Call\", className, methodName, values, obj);\r\n                }\r\n                static New(className, values) {\r\n                    return Java.Send(\"New\", className, values);\r\n                }\r\n                static Class(obj) {\r\n                    return Java.Send(\"Class\", obj);\r\n                }\r\n                static GetInt(obj) {\r\n                    return Java.Send(\"GetInt\", \"\" + obj);\r\n                }\r\n                static GetFloat(obj) {\r\n                    return Java.Send(\"GetFloat\", \"\" + obj);\r\n                }\r\n                static GetBoolean(obj) {\r\n                    return Java.Send(\"GetBoolean\", \"\" + obj);\r\n                }\r\n                static GetString(obj) {\r\n                    return Java.Send(\"GetString\", \"\" + obj);\r\n                }\r\n                static SetValue(value, javaSignature) {\r\n                    if (typeof value == 'number') {\r\n                        return Java.Send(\"SetNumber\", value, javaSignature);\r\n                    }\r\n                    return Java.Send(\"SetValue\", value);\r\n                }\r\n            }\r\n            Android.Java = Java;\r\n        })(Android = Engine.Android || (Engine.Android = {}));\r\n    })(Engine = TJ.Engine || (TJ.Engine = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Engine;\r\n    (function (Engine) {\r\n        let iOS;\r\n        (function (iOS) {\r\n            class Objc {\r\n                static Send(...params) {\r\n                    if (this.objcClass == null) {\r\n                        if (window['PlatformClass'] != null) {\r\n                            this.objcClass = window['PlatformClass'].createClass(\"TJ_Objc\");\r\n                        }\r\n                    }\r\n                    if (this.objcClass != null) {\r\n                        return this.objcClass.call(...params);\r\n                    }\r\n                    return \"\";\r\n                }\r\n                static Set(className, fieldName, value, obj) {\r\n                    Objc.Send(\"Set\", \"(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\", className, fieldName, value, obj);\r\n                }\r\n                static Get(className, fieldName, obj) {\r\n                    return Objc.Send(\"Get\", \"(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\", className, fieldName, obj);\r\n                }\r\n                static Call(className, methodName, values, obj) {\r\n                    return Objc.Send(\"Call_className:Call_methodName:Call_values:Call_obj:\", className, methodName, values, obj);\r\n                }\r\n                static New(className) {\r\n                    return Objc.Send(\"New_className:\", className);\r\n                }\r\n                static Class(obj) {\r\n                    return Objc.Send(\"Class_obj:\", obj);\r\n                }\r\n                static GetInt(obj) {\r\n                    return Objc.Send(\"GetObj:\", obj);\r\n                }\r\n                static GetFloat(obj) {\r\n                    return Objc.Send(\"GetObj:\", obj);\r\n                }\r\n                static GetBoolean(obj) {\r\n                    return Objc.Send(\"GetObj:\", obj);\r\n                }\r\n                static GetString(obj) {\r\n                    return Objc.Send(\"GetObj:\", obj);\r\n                }\r\n                static SetValue(value) {\r\n                    return Objc.Send(\"SetObj:\", value);\r\n                }\r\n            }\r\n            iOS.Objc = Objc;\r\n        })(iOS = Engine.iOS || (Engine.iOS = {}));\r\n    })(Engine = TJ.Engine || (TJ.Engine = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Engine;\r\n    (function (Engine) {\r\n        class LocalStorage {\r\n            static get keys() {\r\n                return Object.keys(Laya.LocalStorage);\r\n            }\r\n            static Get(key) {\r\n                if (key == null)\r\n                    return null;\r\n                let value = Laya.LocalStorage.getItem(key);\r\n                if (value == '')\r\n                    return null;\r\n                return value;\r\n            }\r\n            static Set(key, value) {\r\n                if (key != null) {\r\n                    if (value != null) {\r\n                        Laya.LocalStorage.setItem(key, value);\r\n                    }\r\n                    else {\r\n                        Laya.LocalStorage.removeItem(key);\r\n                    }\r\n                }\r\n            }\r\n            static Clear() {\r\n                Laya.LocalStorage.clear();\r\n            }\r\n        }\r\n        Engine.LocalStorage = LocalStorage;\r\n    })(Engine = TJ.Engine || (TJ.Engine = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Engine;\r\n    (function (Engine) {\r\n        class RuntimeInfo {\r\n            static get windowSize() {\r\n                return { width: Laya.Browser.clientWidth, height: Laya.Browser.clientHeight };\r\n            }\r\n            static get platform() {\r\n                if (Laya.Browser.onQGMiniGame ||\r\n                    Laya.Browser.onVVMiniGame ||\r\n                    Laya.Browser.onQQMiniGame ||\r\n                    Laya.Browser.onWeiXin) {\r\n                    return TJ.Define.Platform.AppRt;\r\n                }\r\n                if (Laya.Browser.onAndroid) {\r\n                    return TJ.Define.Platform.Android;\r\n                }\r\n                if (Laya.Browser.onIOS) {\r\n                    return TJ.Define.Platform.iOS;\r\n                }\r\n                if (Laya.Browser.onPC ||\r\n                    Laya.Browser.onMobile) {\r\n                    return TJ.Define.Platform.AppRt;\r\n                }\r\n                return TJ.Define.Platform.Unknown;\r\n            }\r\n        }\r\n        Engine.RuntimeInfo = RuntimeInfo;\r\n    })(Engine = TJ.Engine || (TJ.Engine = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Common;\r\n    (function (Common) {\r\n        class MD5 {\r\n            constructor() {\r\n                this.hexcase = 0;\r\n                this.b64pad = \"\";\r\n            }\r\n            hex_md5(s) { return this.rstr2hex(this.rstr_md5(this.str2rstr_utf8(s))); }\r\n            b64_md5(s) { return this.rstr2b64(this.rstr_md5(this.str2rstr_utf8(s))); }\r\n            any_md5(s, e) { return this.rstr2any(this.rstr_md5(this.str2rstr_utf8(s)), e); }\r\n            hex_hmac_md5(k, d) { return this.rstr2hex(this.rstr_hmac_md5(this.str2rstr_utf8(k), this.str2rstr_utf8(d))); }\r\n            b64_hmac_md5(k, d) { return this.rstr2b64(this.rstr_hmac_md5(this.str2rstr_utf8(k), this.str2rstr_utf8(d))); }\r\n            any_hmac_md5(k, d, e) { return this.rstr2any(this.rstr_hmac_md5(this.str2rstr_utf8(k), this.str2rstr_utf8(d)), e); }\r\n            rstr_md5(s) {\r\n                return this.binl2rstr(this.binl_md5(this.rstr2binl(s), s.length * 8));\r\n            }\r\n            rstr_hmac_md5(key, data) {\r\n                let bkey = this.rstr2binl(key);\r\n                if (bkey.length > 16)\r\n                    bkey = this.binl_md5(bkey, key.length * 8);\r\n                let ipad = Array(16), opad = Array(16);\r\n                for (let i = 0; i < 16; i++) {\r\n                    ipad[i] = bkey[i] ^ 0x36363636;\r\n                    opad[i] = bkey[i] ^ 0x5C5C5C5C;\r\n                }\r\n                let hash = this.binl_md5(ipad.concat(this.rstr2binl(data)), 512 + data.length * 8);\r\n                return this.binl2rstr(this.binl_md5(opad.concat(hash), 512 + 128));\r\n            }\r\n            rstr2hex(input) {\r\n                try {\r\n                    this.hexcase;\r\n                }\r\n                catch (e) {\r\n                    this.hexcase = 0;\r\n                }\r\n                let hex_tab = this.hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\r\n                let output = \"\";\r\n                let x;\r\n                for (let i = 0; i < input.length; i++) {\r\n                    x = input.charCodeAt(i);\r\n                    output += hex_tab.charAt((x >>> 4) & 0x0F)\r\n                        + hex_tab.charAt(x & 0x0F);\r\n                }\r\n                return output;\r\n            }\r\n            rstr2b64(input) {\r\n                try {\r\n                    this.b64pad;\r\n                }\r\n                catch (e) {\r\n                    this.b64pad = '';\r\n                }\r\n                let tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n                let output = \"\";\r\n                let len = input.length;\r\n                for (let i = 0; i < len; i += 3) {\r\n                    let triplet = (input.charCodeAt(i) << 16)\r\n                        | (i + 1 < len ? input.charCodeAt(i + 1) << 8 : 0)\r\n                        | (i + 2 < len ? input.charCodeAt(i + 2) : 0);\r\n                    for (let j = 0; j < 4; j++) {\r\n                        if (i * 8 + j * 6 > input.length * 8)\r\n                            output += this.b64pad;\r\n                        else\r\n                            output += tab.charAt((triplet >>> 6 * (3 - j)) & 0x3F);\r\n                    }\r\n                }\r\n                return output;\r\n            }\r\n            rstr2any(input, encoding) {\r\n                let divisor = encoding.length;\r\n                let i, j, q, x, quotient;\r\n                let dividend = Array(Math.ceil(input.length / 2));\r\n                for (i = 0; i < dividend.length; i++) {\r\n                    dividend[i] = (input.charCodeAt(i * 2) << 8) | input.charCodeAt(i * 2 + 1);\r\n                }\r\n                let full_length = Math.ceil(input.length * 8 /\r\n                    (Math.log(encoding.length) / Math.log(2)));\r\n                let remainders = Array(full_length);\r\n                for (j = 0; j < full_length; j++) {\r\n                    quotient = Array();\r\n                    x = 0;\r\n                    for (i = 0; i < dividend.length; i++) {\r\n                        x = (x << 16) + dividend[i];\r\n                        q = Math.floor(x / divisor);\r\n                        x -= q * divisor;\r\n                        if (quotient.length > 0 || q > 0)\r\n                            quotient[quotient.length] = q;\r\n                    }\r\n                    remainders[j] = x;\r\n                    dividend = quotient;\r\n                }\r\n                let output = \"\";\r\n                for (i = remainders.length - 1; i >= 0; i--)\r\n                    output += encoding.charAt(remainders[i]);\r\n                return output;\r\n            }\r\n            str2rstr_utf8(input) {\r\n                let output = \"\";\r\n                let i = -1;\r\n                let x, y;\r\n                while (++i < input.length) {\r\n                    x = input.charCodeAt(i);\r\n                    y = i + 1 < input.length ? input.charCodeAt(i + 1) : 0;\r\n                    if (0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF) {\r\n                        x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);\r\n                        i++;\r\n                    }\r\n                    if (x <= 0x7F)\r\n                        output += String.fromCharCode(x);\r\n                    else if (x <= 0x7FF)\r\n                        output += String.fromCharCode(0xC0 | ((x >>> 6) & 0x1F), 0x80 | (x & 0x3F));\r\n                    else if (x <= 0xFFFF)\r\n                        output += String.fromCharCode(0xE0 | ((x >>> 12) & 0x0F), 0x80 | ((x >>> 6) & 0x3F), 0x80 | (x & 0x3F));\r\n                    else if (x <= 0x1FFFFF)\r\n                        output += String.fromCharCode(0xF0 | ((x >>> 18) & 0x07), 0x80 | ((x >>> 12) & 0x3F), 0x80 | ((x >>> 6) & 0x3F), 0x80 | (x & 0x3F));\r\n                }\r\n                return output;\r\n            }\r\n            str2rstr_utf16le(input) {\r\n                let output = \"\";\r\n                for (let i = 0; i < input.length; i++)\r\n                    output += String.fromCharCode(input.charCodeAt(i) & 0xFF, (input.charCodeAt(i) >>> 8) & 0xFF);\r\n                return output;\r\n            }\r\n            str2rstr_utf16be(input) {\r\n                let output = \"\";\r\n                for (let i = 0; i < input.length; i++)\r\n                    output += String.fromCharCode((input.charCodeAt(i) >>> 8) & 0xFF, input.charCodeAt(i) & 0xFF);\r\n                return output;\r\n            }\r\n            rstr2binl(input) {\r\n                let output = Array(input.length >> 2);\r\n                for (let i = 0; i < output.length; i++)\r\n                    output[i] = 0;\r\n                for (let i = 0; i < input.length * 8; i += 8)\r\n                    output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (i % 32);\r\n                return output;\r\n            }\r\n            binl2rstr(input) {\r\n                let output = \"\";\r\n                for (let i = 0; i < input.length * 32; i += 8)\r\n                    output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF);\r\n                return output;\r\n            }\r\n            binl_md5(x, len) {\r\n                x[len >> 5] |= 0x80 << ((len) % 32);\r\n                x[(((len + 64) >>> 9) << 4) + 14] = len;\r\n                let a = 1732584193;\r\n                let b = -271733879;\r\n                let c = -1732584194;\r\n                let d = 271733878;\r\n                for (let i = 0; i < x.length; i += 16) {\r\n                    let olda = a;\r\n                    let oldb = b;\r\n                    let oldc = c;\r\n                    let oldd = d;\r\n                    a = this.md5_ff(a, b, c, d, x[i + 0], 7, -680876936);\r\n                    d = this.md5_ff(d, a, b, c, x[i + 1], 12, -389564586);\r\n                    c = this.md5_ff(c, d, a, b, x[i + 2], 17, 606105819);\r\n                    b = this.md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);\r\n                    a = this.md5_ff(a, b, c, d, x[i + 4], 7, -176418897);\r\n                    d = this.md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);\r\n                    c = this.md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);\r\n                    b = this.md5_ff(b, c, d, a, x[i + 7], 22, -45705983);\r\n                    a = this.md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);\r\n                    d = this.md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);\r\n                    c = this.md5_ff(c, d, a, b, x[i + 10], 17, -42063);\r\n                    b = this.md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);\r\n                    a = this.md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);\r\n                    d = this.md5_ff(d, a, b, c, x[i + 13], 12, -40341101);\r\n                    c = this.md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);\r\n                    b = this.md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);\r\n                    a = this.md5_gg(a, b, c, d, x[i + 1], 5, -165796510);\r\n                    d = this.md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);\r\n                    c = this.md5_gg(c, d, a, b, x[i + 11], 14, 643717713);\r\n                    b = this.md5_gg(b, c, d, a, x[i + 0], 20, -373897302);\r\n                    a = this.md5_gg(a, b, c, d, x[i + 5], 5, -701558691);\r\n                    d = this.md5_gg(d, a, b, c, x[i + 10], 9, 38016083);\r\n                    c = this.md5_gg(c, d, a, b, x[i + 15], 14, -660478335);\r\n                    b = this.md5_gg(b, c, d, a, x[i + 4], 20, -405537848);\r\n                    a = this.md5_gg(a, b, c, d, x[i + 9], 5, 568446438);\r\n                    d = this.md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);\r\n                    c = this.md5_gg(c, d, a, b, x[i + 3], 14, -187363961);\r\n                    b = this.md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);\r\n                    a = this.md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);\r\n                    d = this.md5_gg(d, a, b, c, x[i + 2], 9, -51403784);\r\n                    c = this.md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);\r\n                    b = this.md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);\r\n                    a = this.md5_hh(a, b, c, d, x[i + 5], 4, -378558);\r\n                    d = this.md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);\r\n                    c = this.md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);\r\n                    b = this.md5_hh(b, c, d, a, x[i + 14], 23, -35309556);\r\n                    a = this.md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);\r\n                    d = this.md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);\r\n                    c = this.md5_hh(c, d, a, b, x[i + 7], 16, -155497632);\r\n                    b = this.md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);\r\n                    a = this.md5_hh(a, b, c, d, x[i + 13], 4, 681279174);\r\n                    d = this.md5_hh(d, a, b, c, x[i + 0], 11, -358537222);\r\n                    c = this.md5_hh(c, d, a, b, x[i + 3], 16, -722521979);\r\n                    b = this.md5_hh(b, c, d, a, x[i + 6], 23, 76029189);\r\n                    a = this.md5_hh(a, b, c, d, x[i + 9], 4, -640364487);\r\n                    d = this.md5_hh(d, a, b, c, x[i + 12], 11, -421815835);\r\n                    c = this.md5_hh(c, d, a, b, x[i + 15], 16, 530742520);\r\n                    b = this.md5_hh(b, c, d, a, x[i + 2], 23, -995338651);\r\n                    a = this.md5_ii(a, b, c, d, x[i + 0], 6, -198630844);\r\n                    d = this.md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);\r\n                    c = this.md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);\r\n                    b = this.md5_ii(b, c, d, a, x[i + 5], 21, -57434055);\r\n                    a = this.md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);\r\n                    d = this.md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);\r\n                    c = this.md5_ii(c, d, a, b, x[i + 10], 15, -1051523);\r\n                    b = this.md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);\r\n                    a = this.md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);\r\n                    d = this.md5_ii(d, a, b, c, x[i + 15], 10, -30611744);\r\n                    c = this.md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);\r\n                    b = this.md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);\r\n                    a = this.md5_ii(a, b, c, d, x[i + 4], 6, -145523070);\r\n                    d = this.md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);\r\n                    c = this.md5_ii(c, d, a, b, x[i + 2], 15, 718787259);\r\n                    b = this.md5_ii(b, c, d, a, x[i + 9], 21, -343485551);\r\n                    a = this.safe_add(a, olda);\r\n                    b = this.safe_add(b, oldb);\r\n                    c = this.safe_add(c, oldc);\r\n                    d = this.safe_add(d, oldd);\r\n                }\r\n                return [a, b, c, d];\r\n            }\r\n            md5_cmn(q, a, b, x, s, t) {\r\n                return this.safe_add(this.bit_rol(this.safe_add(this.safe_add(a, q), this.safe_add(x, t)), s), b);\r\n            }\r\n            md5_ff(a, b, c, d, x, s, t) {\r\n                return this.md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\r\n            }\r\n            md5_gg(a, b, c, d, x, s, t) {\r\n                return this.md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\r\n            }\r\n            md5_hh(a, b, c, d, x, s, t) {\r\n                return this.md5_cmn(b ^ c ^ d, a, b, x, s, t);\r\n            }\r\n            md5_ii(a, b, c, d, x, s, t) {\r\n                return this.md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\r\n            }\r\n            safe_add(x, y) {\r\n                let lsw = (x & 0xFFFF) + (y & 0xFFFF);\r\n                let msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n                return (msw << 16) | (lsw & 0xFFFF);\r\n            }\r\n            bit_rol(num, cnt) {\r\n                return (num << cnt) | (num >>> (32 - cnt));\r\n            }\r\n        }\r\n        Common.MD5 = MD5;\r\n    })(Common = TJ.Common || (TJ.Common = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Common;\r\n    (function (Common) {\r\n        class Guid {\r\n            static New() {\r\n                let date = new Date();\r\n                let str = date.getTime().toString(16);\r\n                while (str.length < 32) {\r\n                    str += Math.floor(Math.random() * 16).toString(16);\r\n                }\r\n                let md5 = new Common.MD5();\r\n                return md5.hex_md5(str);\r\n            }\r\n        }\r\n        Common.Guid = Guid;\r\n    })(Common = TJ.Common || (TJ.Common = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Common;\r\n    (function (Common) {\r\n        class Num_ {\r\n            constructor(value) {\r\n                this._value = value;\r\n            }\r\n            get value() {\r\n                return this._value;\r\n            }\r\n            toString() {\r\n                return \"\" + this.value;\r\n            }\r\n        }\r\n        class Int_ extends Num_ {\r\n            get value() {\r\n                return Math.floor(this._value);\r\n            }\r\n            get javaSignature() {\r\n                return \"I\";\r\n            }\r\n        }\r\n        Common.Int_ = Int_;\r\n        class Long_ extends Num_ {\r\n            get value() {\r\n                return Math.floor(this._value);\r\n            }\r\n            get javaSignature() {\r\n                return \"J\";\r\n            }\r\n        }\r\n        Common.Long_ = Long_;\r\n        class Float_ extends Num_ {\r\n            get javaSignature() {\r\n                return \"F\";\r\n            }\r\n        }\r\n        Common.Float_ = Float_;\r\n        class Bool_ {\r\n            constructor(value) {\r\n                this._value = value;\r\n            }\r\n            get value() {\r\n                return this._value;\r\n            }\r\n            toString() {\r\n                return \"\" + this.value;\r\n            }\r\n            get javaSignature() {\r\n                return \"Z\";\r\n            }\r\n        }\r\n        Common.Bool_ = Bool_;\r\n        class String_ {\r\n            constructor(value) {\r\n                this._value = value;\r\n            }\r\n            get value() {\r\n                return this._value;\r\n            }\r\n            toString() {\r\n                return \"\" + this.value;\r\n            }\r\n            get javaSignature() {\r\n                return \"Ljava/lang/String;\";\r\n            }\r\n            static Format(format, ...args) {\r\n                if (format != null) {\r\n                    for (let index = 0; index < args.length; index++) {\r\n                        format = format.replace(`{${index}}`, args[index]);\r\n                    }\r\n                }\r\n                return format;\r\n            }\r\n            static IsNullOrEmpty(value) {\r\n                if (typeof value != \"string\")\r\n                    return true;\r\n                if (value == null)\r\n                    return true;\r\n                if (value.length < 1)\r\n                    return true;\r\n                return false;\r\n            }\r\n        }\r\n        Common.String_ = String_;\r\n        class Date_ {\r\n            static get nowSeconds() {\r\n                return Date.now() / 1000.0;\r\n            }\r\n            static Format(date, fmt) {\r\n                let opt = {\r\n                    \"y+\": date.getFullYear().toString(),\r\n                    \"M+\": (date.getMonth() + 1).toString(),\r\n                    \"d+\": date.getDate().toString(),\r\n                    \"H+\": date.getHours().toString(),\r\n                    \"m+\": date.getMinutes().toString(),\r\n                    \"s+\": date.getSeconds().toString(),\r\n                    \"S+\": date.getMilliseconds().toString()\r\n                };\r\n                for (let k in opt) {\r\n                    let ret = new RegExp(\"(\" + k + \")\").exec(fmt);\r\n                    if (ret) {\r\n                        fmt = fmt.replace(ret[1], (ret[1].length == 1) ? (opt[k]) : (opt[k].padStart(ret[1].length, \"0\")));\r\n                    }\r\n                    ;\r\n                }\r\n                ;\r\n                return fmt;\r\n            }\r\n        }\r\n        Common.Date_ = Date_;\r\n    })(Common = TJ.Common || (TJ.Common = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Common;\r\n    (function (Common) {\r\n        class Action {\r\n            constructor(...func) {\r\n                this.invocationList = [];\r\n                for (let item of func) {\r\n                    if (typeof item == 'function') {\r\n                        this.Add(item);\r\n                    }\r\n                }\r\n            }\r\n            GetInvocationList() {\r\n                return this.invocationList;\r\n            }\r\n            Add(func) {\r\n                if (func != null) {\r\n                    if (func instanceof Action) {\r\n                        for (let item of func.invocationList) {\r\n                            this.Add(item);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.invocationList.push(func);\r\n                    }\r\n                }\r\n                return this;\r\n            }\r\n            Remove(func) {\r\n                if (func != null) {\r\n                    let id;\r\n                    if (func instanceof Action) {\r\n                        for (let item of func.invocationList) {\r\n                            this.Remove(item);\r\n                        }\r\n                    }\r\n                    else {\r\n                        id = this.invocationList.indexOf(func);\r\n                        if (id >= 0) {\r\n                            this.invocationList.splice(id, 1);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            Clear() {\r\n                this.invocationList = [];\r\n            }\r\n            Invoke(...param) {\r\n                for (let item of this.invocationList) {\r\n                    if (item != null) {\r\n                        try {\r\n                            item(...param);\r\n                        }\r\n                        catch (error) {\r\n                            console.log(error);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Common.Action = Action;\r\n    })(Common = TJ.Common || (TJ.Common = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Common;\r\n    (function (Common) {\r\n        var Android;\r\n        (function (Android) {\r\n            class Java {\r\n                static SerializeObjects(objs) {\r\n                    let values = [];\r\n                    for (let item of objs) {\r\n                        values.push(\"\" + item);\r\n                    }\r\n                    return JSON.stringify(values);\r\n                }\r\n                static Set(className, fieldName, value, obj) {\r\n                    TJ.Engine.Android.Java.Set(className, fieldName, \"\" + value, \"\" + obj);\r\n                }\r\n                static Get(className, fieldName, obj) {\r\n                    let k = TJ.Engine.Android.Java.Get(className, fieldName, \"\" + obj);\r\n                    return Object_.Get(k);\r\n                }\r\n                static Call(className, methodName, values, obj) {\r\n                    let k = TJ.Engine.Android.Java.Call(className, methodName, this.SerializeObjects(values), \"\" + obj);\r\n                    return Object_.Get(k);\r\n                }\r\n                static New(className, values) {\r\n                    let k = TJ.Engine.Android.Java.New(className, this.SerializeObjects(values));\r\n                    return Object_.Get(k);\r\n                }\r\n                static Class(obj) {\r\n                    return TJ.Engine.Android.Java.Class(\"\" + obj);\r\n                }\r\n                static GetInt(obj) {\r\n                    return TJ.Engine.Android.Java.GetInt(\"\" + obj);\r\n                }\r\n                static GetFloat(obj) {\r\n                    return TJ.Engine.Android.Java.GetFloat(\"\" + obj);\r\n                }\r\n                static GetBoolean(obj) {\r\n                    return TJ.Engine.Android.Java.GetBoolean(\"\" + obj);\r\n                }\r\n                static GetString(obj) {\r\n                    return TJ.Engine.Android.Java.GetString(\"\" + obj);\r\n                }\r\n                static SetValue(value) {\r\n                    let k = TJ.Engine.Android.Java.SetValue(value.value, value.javaSignature);\r\n                    return Object_.Get(k);\r\n                }\r\n            }\r\n            Android.Java = Java;\r\n            class Object_ {\r\n                constructor(obj) {\r\n                    this.objectIndex = obj;\r\n                }\r\n                toString() {\r\n                    return this.objectIndex;\r\n                }\r\n                static Get(obj) {\r\n                    if (typeof obj == 'string') {\r\n                        return new Object_(obj);\r\n                    }\r\n                    else {\r\n                        return Java.SetValue(obj);\r\n                    }\r\n                }\r\n                GetValue(type) {\r\n                    if (type == null) {\r\n                        return null;\r\n                    }\r\n                    let obj;\r\n                    if (type.prototype == Common.Int_.prototype) {\r\n                        obj = new Common.Int_(Java.GetInt(this));\r\n                    }\r\n                    if (type.prototype == Common.Float_.prototype) {\r\n                        obj = new Common.Float_(Java.GetFloat(this));\r\n                    }\r\n                    if (type.prototype == Common.Bool_.prototype) {\r\n                        obj = new Common.Bool_(Java.GetBoolean(this));\r\n                    }\r\n                    if (type.prototype == Common.String_.prototype) {\r\n                        obj = new Common.String_(Java.GetString(this));\r\n                    }\r\n                    return obj;\r\n                }\r\n            }\r\n            Android.Object_ = Object_;\r\n            class JavaClass {\r\n                constructor(className) {\r\n                    this.className = className;\r\n                }\r\n                SetStatic(fieldName, value) {\r\n                    Java.Set(this.className, fieldName, JavaObject.SetValue(value), null);\r\n                }\r\n                GetStatic(type, fieldName) {\r\n                    let obj = Java.Get(this.className, fieldName, null);\r\n                    return JavaObject.GetValue(type, obj);\r\n                }\r\n                CallStatic(...s) {\r\n                    let a = s.shift();\r\n                    if (typeof a == 'string') {\r\n                        Java.Call(this.className, a, JavaObject.SetValues(...s), null);\r\n                    }\r\n                    else {\r\n                        let b = s.shift();\r\n                        let obj = Java.Call(this.className, b, JavaObject.SetValues(...s), null);\r\n                        return JavaObject.GetValue(a, obj);\r\n                    }\r\n                }\r\n                New(...values) {\r\n                    return Java.New(this.className, JavaObject.SetValues(...values));\r\n                }\r\n            }\r\n            Android.JavaClass = JavaClass;\r\n            class JavaObject {\r\n                constructor(obj, clazz) {\r\n                    this.javaClass = clazz;\r\n                    this.object = obj;\r\n                }\r\n                toString() {\r\n                    return \"\" + this.object;\r\n                }\r\n                static New(className, ...values) {\r\n                    let ajc = new JavaClass(className);\r\n                    let obj = ajc.New(...values);\r\n                    return new JavaObject(obj, ajc);\r\n                }\r\n                static Get(obj) {\r\n                    let ajc = new JavaClass(Java.Class(obj));\r\n                    return new JavaObject(obj, ajc);\r\n                }\r\n                Set(fieldName, value) {\r\n                    let v;\r\n                    if (value instanceof JavaObject) {\r\n                        v = value.object;\r\n                    }\r\n                    else {\r\n                        v = Object_.Get(value);\r\n                    }\r\n                    Java.Set(this.javaClass.className, fieldName, v, this.object);\r\n                }\r\n                Get(type, fieldName) {\r\n                    let obj = Java.Get(this.javaClass.className, fieldName, this.object);\r\n                    return JavaObject.GetValue(type, obj);\r\n                }\r\n                Call(...s) {\r\n                    let a = s.shift();\r\n                    if (typeof a == 'string') {\r\n                        Java.Call(this.javaClass.className, a, JavaObject.SetValues(...s), this.object);\r\n                    }\r\n                    else {\r\n                        let b = s.shift();\r\n                        let obj = Java.Call(this.javaClass.className, b, JavaObject.SetValues(...s), this.object);\r\n                        return JavaObject.GetValue(a, obj);\r\n                    }\r\n                }\r\n                static GetValue(type, obj) {\r\n                    let res;\r\n                    if (type.prototype == JavaObject.prototype) {\r\n                        res = JavaObject.Get(obj);\r\n                    }\r\n                    else {\r\n                        res = obj.GetValue(type);\r\n                    }\r\n                    return res;\r\n                }\r\n                static SetValue(value) {\r\n                    if (value instanceof JavaObject) {\r\n                        return value.object;\r\n                    }\r\n                    else {\r\n                        return Object_.Get(value);\r\n                    }\r\n                }\r\n                static SetValues(...value) {\r\n                    let values = [];\r\n                    for (let item of value) {\r\n                        values.push(JavaObject.SetValue(item));\r\n                    }\r\n                    return values;\r\n                }\r\n            }\r\n            Android.JavaObject = JavaObject;\r\n        })(Android = Common.Android || (Common.Android = {}));\r\n    })(Common = TJ.Common || (TJ.Common = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Common;\r\n    (function (Common) {\r\n        let externCallbacks = [];\r\n        setInterval(() => {\r\n            while (externCallbacks.length > 0) {\r\n                let obj = externCallbacks.shift();\r\n                CallbackManager.Get(obj.guid).Run(TJ.Define.Event[obj.key], obj.json);\r\n            }\r\n        }, 500);\r\n        window[\"ExternCallback\"] = (guid, key, json) => {\r\n            console.log(\"ExternCallback = \" + guid + \" - \" + key + \" - \" + json);\r\n            let obj = {};\r\n            obj.guid = guid;\r\n            obj.key = key;\r\n            obj.json = json;\r\n            externCallbacks.push(obj);\r\n        };\r\n        class CallbackManager {\r\n            static Set(cbi) {\r\n                let guid = Common.Guid.New();\r\n                this.callbacks[guid] = cbi;\r\n                return guid;\r\n            }\r\n            static Get(guid) {\r\n                let cbi = this.callbacks[guid];\r\n                if (cbi == null) {\r\n                    cbi = new CallbackInfo();\r\n                }\r\n                return cbi;\r\n            }\r\n        }\r\n        CallbackManager.callbacks = {};\r\n        Common.CallbackManager = CallbackManager;\r\n        class CallbackInfo {\r\n            constructor() {\r\n                this.callbacks = {};\r\n            }\r\n            Clone() {\r\n                let cbi = new CallbackInfo();\r\n                for (let key of Object.keys(this.callbacks)) {\r\n                    cbi.callbacks[key] = this.callbacks[key];\r\n                }\r\n                return cbi;\r\n            }\r\n            Get(key) {\r\n                if (key == null)\r\n                    key = '';\r\n                let act = this.callbacks[key];\r\n                if (act == null)\r\n                    act = new Common.Action();\r\n                return act;\r\n            }\r\n            Set(key, value) {\r\n                if (typeof value == 'function') {\r\n                    value = new Common.Action(value);\r\n                }\r\n                this.callbacks[key] = value;\r\n            }\r\n            Add(key, value) {\r\n                this.Set(key, this.Get(key).Add(value));\r\n            }\r\n            Run(key, ...args) {\r\n                let cb = this.Get(key);\r\n                if (cb != null) {\r\n                    for (let item of cb.GetInvocationList()) {\r\n                        try {\r\n                            item(...args);\r\n                        }\r\n                        catch (error) {\r\n                            console.error(error);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Common.CallbackInfo = CallbackInfo;\r\n    })(Common = TJ.Common || (TJ.Common = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Common;\r\n    (function (Common) {\r\n        let Component;\r\n        (function (Component) {\r\n            class Interface {\r\n                constructor() {\r\n                    this.isInit = false;\r\n                }\r\n                DoInit() {\r\n                    if (!this.isInit) {\r\n                        this.isInit = true;\r\n                        try {\r\n                            this.OnInit();\r\n                        }\r\n                        catch (error) {\r\n                            console.log(error);\r\n                        }\r\n                    }\r\n                }\r\n                OnInit() {\r\n                }\r\n            }\r\n            Component.Interface = Interface;\r\n            class Manager {\r\n                static AddComponent(type) {\r\n                    let obj = new type;\r\n                    this.components.push(obj);\r\n                    return obj;\r\n                }\r\n                static GetComponent(type) {\r\n                    for (let item of this.components) {\r\n                        if (item == type.prototype || item instanceof type) {\r\n                            return item;\r\n                        }\r\n                    }\r\n                    return null;\r\n                }\r\n                static GetComponents(type) {\r\n                    let cs = [];\r\n                    for (let item of this.components) {\r\n                        if (item == type.prototype || item instanceof type) {\r\n                            cs.push(item);\r\n                        }\r\n                    }\r\n                    return cs;\r\n                }\r\n                static GetComponentsWithInit(type) {\r\n                    let cs = this.GetComponents(type);\r\n                    for (let item of cs) {\r\n                        item.DoInit();\r\n                    }\r\n                    return cs;\r\n                }\r\n            }\r\n            Manager.components = [];\r\n            Component.Manager = Manager;\r\n        })(Component = Common.Component || (Common.Component = {}));\r\n    })(Common = TJ.Common || (TJ.Common = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Common;\r\n    (function (Common) {\r\n        var iOS;\r\n        (function (iOS) {\r\n            class Objc {\r\n                static SerializeObjects(objs) {\r\n                    let values = [];\r\n                    for (let item of objs) {\r\n                        values.push(\"\" + item);\r\n                    }\r\n                    return JSON.stringify(values);\r\n                }\r\n                static Set(className, fieldName, value, obj) {\r\n                    TJ.Engine.iOS.Objc.Set(className, fieldName, \"\" + value, \"\" + obj);\r\n                }\r\n                static Get(className, fieldName, obj) {\r\n                    let k = TJ.Engine.iOS.Objc.Get(className, fieldName, \"\" + obj);\r\n                    return Object_.Get(k);\r\n                }\r\n                static Call(className, methodName, values, obj) {\r\n                    let k = TJ.Engine.iOS.Objc.Call(className, methodName, this.SerializeObjects(values), \"\" + obj);\r\n                    return Object_.Get(k);\r\n                }\r\n                static New(className) {\r\n                    let k = TJ.Engine.iOS.Objc.New(className);\r\n                    return Object_.Get(k);\r\n                }\r\n                static Class(obj) {\r\n                    return TJ.Engine.iOS.Objc.Class(\"\" + obj);\r\n                }\r\n                static GetInt(obj) {\r\n                    return TJ.Engine.iOS.Objc.GetInt(\"\" + obj);\r\n                }\r\n                static GetFloat(obj) {\r\n                    return TJ.Engine.iOS.Objc.GetFloat(\"\" + obj);\r\n                }\r\n                static GetBoolean(obj) {\r\n                    return TJ.Engine.iOS.Objc.GetBoolean(\"\" + obj);\r\n                }\r\n                static GetString(obj) {\r\n                    return TJ.Engine.iOS.Objc.GetString(\"\" + obj);\r\n                }\r\n                static SetValue(value) {\r\n                    let k = TJ.Engine.iOS.Objc.SetValue(value.value);\r\n                    return Object_.Get(k);\r\n                }\r\n            }\r\n            iOS.Objc = Objc;\r\n            class Object_ {\r\n                constructor(obj) {\r\n                    this.objectIndex = obj;\r\n                }\r\n                toString() {\r\n                    return this.objectIndex;\r\n                }\r\n                static Get(obj) {\r\n                    if (typeof obj == 'string') {\r\n                        return new Object_(obj);\r\n                    }\r\n                    else {\r\n                        return Objc.SetValue(obj);\r\n                    }\r\n                }\r\n                GetValue(type) {\r\n                    if (type == null) {\r\n                        return null;\r\n                    }\r\n                    let obj;\r\n                    if (type.prototype == Common.Int_.prototype) {\r\n                        obj = new Common.Int_(Objc.GetInt(this));\r\n                    }\r\n                    if (type.prototype == Common.Float_.prototype) {\r\n                        obj = new Common.Float_(Objc.GetFloat(this));\r\n                    }\r\n                    if (type.prototype == Common.Bool_.prototype) {\r\n                        obj = new Common.Bool_(Objc.GetBoolean(this));\r\n                    }\r\n                    if (type.prototype == Common.String_.prototype) {\r\n                        obj = new Common.String_(Objc.GetString(this));\r\n                    }\r\n                    return obj;\r\n                }\r\n            }\r\n            iOS.Object_ = Object_;\r\n            class ObjcClass {\r\n                constructor(className) {\r\n                    this.className = className;\r\n                }\r\n                SetStatic(fieldName, value) {\r\n                    Objc.Set(this.className, fieldName, ObjcObject.SetValue(value), null);\r\n                }\r\n                GetStatic(type, fieldName) {\r\n                    let obj = Objc.Get(this.className, fieldName, null);\r\n                    return ObjcObject.GetValue(type, obj);\r\n                }\r\n                CallStatic(...s) {\r\n                    let a = s.shift();\r\n                    if (typeof a == 'string') {\r\n                        Objc.Call(this.className, a, ObjcObject.SetValues(...s), null);\r\n                    }\r\n                    else {\r\n                        let b = s.shift();\r\n                        let obj = Objc.Call(this.className, b, ObjcObject.SetValues(...s), null);\r\n                        return ObjcObject.GetValue(a, obj);\r\n                    }\r\n                }\r\n                New(...values) {\r\n                    return Objc.New(this.className);\r\n                }\r\n            }\r\n            iOS.ObjcClass = ObjcClass;\r\n            class ObjcObject {\r\n                constructor(obj, clazz) {\r\n                    this.objcClass = clazz;\r\n                    this.object = obj;\r\n                }\r\n                toString() {\r\n                    return \"\" + this.object;\r\n                }\r\n                static New(className, ...values) {\r\n                    let ioc = new ObjcClass(className);\r\n                    let obj = ioc.New(...values);\r\n                    return new ObjcObject(obj, ioc);\r\n                }\r\n                static Get(obj) {\r\n                    let ioc = new ObjcClass(Objc.Class(obj));\r\n                    return new ObjcObject(obj, ioc);\r\n                }\r\n                Set(fieldName, value) {\r\n                    let v;\r\n                    if (value instanceof ObjcObject) {\r\n                        v = value.object;\r\n                    }\r\n                    else {\r\n                        v = Object_.Get(value);\r\n                    }\r\n                    Objc.Set(this.objcClass.className, fieldName, v, this.object);\r\n                }\r\n                Get(type, fieldName) {\r\n                    let obj = Objc.Get(this.objcClass.className, fieldName, this.object);\r\n                    return ObjcObject.GetValue(type, obj);\r\n                }\r\n                Call(...s) {\r\n                    let a = s.shift();\r\n                    if (typeof a == 'string') {\r\n                        Objc.Call(this.objcClass.className, a, ObjcObject.SetValues(...s), this.object);\r\n                    }\r\n                    else {\r\n                        let b = s.shift();\r\n                        let obj = Objc.Call(this.objcClass.className, b, ObjcObject.SetValues(...s), this.object);\r\n                        return ObjcObject.GetValue(a, obj);\r\n                    }\r\n                }\r\n                static GetValue(type, obj) {\r\n                    let res;\r\n                    if (type.prototype == ObjcObject.prototype) {\r\n                        res = ObjcObject.Get(obj);\r\n                    }\r\n                    else {\r\n                        res = obj.GetValue(type);\r\n                    }\r\n                    return res;\r\n                }\r\n                static SetValue(value) {\r\n                    if (value instanceof ObjcObject) {\r\n                        return value.object;\r\n                    }\r\n                    else {\r\n                        return Object_.Get(value);\r\n                    }\r\n                }\r\n                static SetValues(...value) {\r\n                    let values = [];\r\n                    for (let item of value) {\r\n                        values.push(ObjcObject.SetValue(item));\r\n                    }\r\n                    return values;\r\n                }\r\n            }\r\n            iOS.ObjcObject = ObjcObject;\r\n            class SwiftClass extends ObjcClass {\r\n                constructor(className) {\r\n                    className = \"test.\" + className;\r\n                    super(className);\r\n                }\r\n            }\r\n            iOS.SwiftClass = SwiftClass;\r\n            class SwiftObject {\r\n                static New(className, ...values) {\r\n                    className = \"test.\" + className;\r\n                    return ObjcObject.New(className, ...values);\r\n                }\r\n            }\r\n            iOS.SwiftObject = SwiftObject;\r\n        })(iOS = Common.iOS || (Common.iOS = {}));\r\n    })(Common = TJ.Common || (TJ.Common = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Common;\r\n    (function (Common) {\r\n        var Prefs;\r\n        (function (Prefs) {\r\n            class RawData {\r\n                constructor() {\r\n                    this.value = null;\r\n                    this.time = 0;\r\n                }\r\n            }\r\n            Prefs.RawData = RawData;\r\n            let Raw;\r\n            (function (Raw) {\r\n                let keyTag = \"<Prefs>\";\r\n                let intTag = \"<Int>\";\r\n                let floatTag = \"<Float>\";\r\n                let stringTag = \"<String>\";\r\n                let boolTag = \"<Bool>\";\r\n                function Tags() {\r\n                    let tags = [];\r\n                    tags.push(intTag);\r\n                    tags.push(floatTag);\r\n                    tags.push(stringTag);\r\n                    tags.push(boolTag);\r\n                    return tags;\r\n                }\r\n                function Keys() {\r\n                    let keys = [];\r\n                    for (let key of TJ.Engine.LocalStorage.keys) {\r\n                        if (key.search(keyTag) != -1) {\r\n                            keys.push(key);\r\n                        }\r\n                    }\r\n                    return keys;\r\n                }\r\n                function GetRaw(key) {\r\n                    return TJ.Engine.LocalStorage.Get(key);\r\n                }\r\n                Raw.GetRaw = GetRaw;\r\n                function SetRaw(key, value) {\r\n                    TJ.Engine.LocalStorage.Set(key, value);\r\n                    Raw.changeKey = key;\r\n                    if (Raw.changeKeys == null)\r\n                        Raw.changeKeys = [];\r\n                    Raw.changeKeys.push(Raw.changeKey);\r\n                }\r\n                Raw.SetRaw = SetRaw;\r\n                function GetRawData(key) {\r\n                    let data = null;\r\n                    let json = GetRaw(key);\r\n                    if (json != null) {\r\n                        data = JSON.parse(json);\r\n                    }\r\n                    if (data == null) {\r\n                        data = new RawData();\r\n                    }\r\n                    return data;\r\n                }\r\n                Raw.GetRawData = GetRawData;\r\n                function SetRawData(key, data) {\r\n                    if (data != null) {\r\n                        let loc = GetRawData(key);\r\n                        if (loc.time < data.time) {\r\n                            let json = JSON.stringify(data);\r\n                            SetRaw(key, json);\r\n                        }\r\n                        else {\r\n                            return loc;\r\n                        }\r\n                    }\r\n                    else {\r\n                        SetRaw(key, null);\r\n                    }\r\n                    return null;\r\n                }\r\n                Raw.SetRawData = SetRawData;\r\n                function RawGet(key) {\r\n                    return GetRawData(key).value;\r\n                }\r\n                Raw.RawGet = RawGet;\r\n                function RawSet(key, value) {\r\n                    if (value != null) {\r\n                        let data = new RawData();\r\n                        data.time = Date.now();\r\n                        data.value = value;\r\n                        data = SetRawData(key, data);\r\n                        if (data != null) {\r\n                            return data.value;\r\n                        }\r\n                    }\r\n                    else {\r\n                        SetRawData(key, null);\r\n                    }\r\n                    return null;\r\n                }\r\n                Raw.RawSet = RawSet;\r\n                function Get(key) {\r\n                    return RawGet(keyTag + key);\r\n                }\r\n                Raw.Get = Get;\r\n                function Set(key, value) {\r\n                    RawSet(keyTag + key, value);\r\n                }\r\n                Raw.Set = Set;\r\n                function GetInt(key, defaultValue = 0) {\r\n                    let value = Get(intTag + key);\r\n                    if (value == null) {\r\n                        value = defaultValue;\r\n                    }\r\n                    return value;\r\n                }\r\n                Raw.GetInt = GetInt;\r\n                function SetInt(key, value) {\r\n                    Set(intTag + key, new Common.Int_(value).value);\r\n                }\r\n                Raw.SetInt = SetInt;\r\n                function GetFloat(key, defaultValue = 0) {\r\n                    let value = Get(floatTag + key);\r\n                    if (value == null) {\r\n                        value = defaultValue;\r\n                    }\r\n                    return value;\r\n                }\r\n                Raw.GetFloat = GetFloat;\r\n                function SetFloat(key, value) {\r\n                    Set(floatTag + key, new Common.Float_(value).value);\r\n                }\r\n                Raw.SetFloat = SetFloat;\r\n                function GetString(key, defaultValue = null) {\r\n                    let value = Get(stringTag + key);\r\n                    if (value == null) {\r\n                        value = defaultValue;\r\n                    }\r\n                    return value;\r\n                }\r\n                Raw.GetString = GetString;\r\n                function SetString(key, value) {\r\n                    Set(stringTag + key, new Common.String_(value).value);\r\n                }\r\n                Raw.SetString = SetString;\r\n                function GetBool(key, defaultValue = false) {\r\n                    let value = Get(boolTag + key);\r\n                    if (value == null) {\r\n                        value = defaultValue;\r\n                    }\r\n                    return value;\r\n                }\r\n                Raw.GetBool = GetBool;\r\n                function SetBool(key, value) {\r\n                    Set(boolTag + key, new Common.Bool_(value).value);\r\n                }\r\n                Raw.SetBool = SetBool;\r\n                function DeleteAll(tag = null) {\r\n                    Raw.changeKeys = null;\r\n                    for (let key of Keys()) {\r\n                        if (tag != null) {\r\n                            if (key.search(tag) != -1) {\r\n                                SetRawData(key, null);\r\n                            }\r\n                        }\r\n                        else {\r\n                            SetRawData(key, null);\r\n                        }\r\n                    }\r\n                }\r\n                Raw.DeleteAll = DeleteAll;\r\n                function DeleteKey(key) {\r\n                    Raw.changeKeys = null;\r\n                    let keys = [];\r\n                    for (let tag of Tags()) {\r\n                        keys.push(tag + key);\r\n                    }\r\n                    for (let key of keys) {\r\n                        Set(key, null);\r\n                    }\r\n                }\r\n                Raw.DeleteKey = DeleteKey;\r\n                function HasKey(key) {\r\n                    for (let tag of Tags()) {\r\n                        if (Get(tag + key) != null) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    return false;\r\n                }\r\n                Raw.HasKey = HasKey;\r\n            })(Raw = Prefs.Raw || (Prefs.Raw = {}));\r\n        })(Prefs = Common.Prefs || (Common.Prefs = {}));\r\n    })(Common = TJ.Common || (TJ.Common = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Common;\r\n    (function (Common) {\r\n        var Prefs;\r\n        (function (Prefs) {\r\n            var Player;\r\n            (function (Player) {\r\n                let keyTag = \"<Player>\";\r\n                function Get(key) {\r\n                    return Prefs.Raw.Get(keyTag + key);\r\n                }\r\n                Player.Get = Get;\r\n                function Set(key, value) {\r\n                    Prefs.Raw.Set(keyTag + key, value);\r\n                }\r\n                Player.Set = Set;\r\n                function GetInt(key, defaultValue = 0) {\r\n                    return Prefs.Raw.GetInt(keyTag + key, defaultValue);\r\n                }\r\n                Player.GetInt = GetInt;\r\n                function SetInt(key, value) {\r\n                    Prefs.Raw.SetInt(keyTag + key, value);\r\n                }\r\n                Player.SetInt = SetInt;\r\n                function GetFloat(key, defaultValue = 0) {\r\n                    return Prefs.Raw.GetFloat(keyTag + key, defaultValue);\r\n                }\r\n                Player.GetFloat = GetFloat;\r\n                function SetFloat(key, value) {\r\n                    Prefs.Raw.SetFloat(keyTag + key, value);\r\n                }\r\n                Player.SetFloat = SetFloat;\r\n                function GetString(key, defaultValue = null) {\r\n                    return Prefs.Raw.GetString(keyTag + key, defaultValue);\r\n                }\r\n                Player.GetString = GetString;\r\n                function SetString(key, value) {\r\n                    Prefs.Raw.SetString(keyTag + key, value);\r\n                }\r\n                Player.SetString = SetString;\r\n                function GetBool(key, defaultValue = false) {\r\n                    return Prefs.Raw.GetBool(keyTag + key, defaultValue);\r\n                }\r\n                Player.GetBool = GetBool;\r\n                function SetBool(key, value) {\r\n                    Prefs.Raw.SetBool(keyTag + key, value);\r\n                }\r\n                Player.SetBool = SetBool;\r\n                function DeleteAll() {\r\n                    Prefs.Raw.DeleteAll(keyTag);\r\n                }\r\n                Player.DeleteAll = DeleteAll;\r\n                function DeleteKey(key) {\r\n                    Prefs.Raw.DeleteKey(keyTag + key);\r\n                }\r\n                Player.DeleteKey = DeleteKey;\r\n                function HasKey(key) {\r\n                    return Prefs.Raw.HasKey(keyTag + key);\r\n                }\r\n                Player.HasKey = HasKey;\r\n            })(Player = Prefs.Player || (Prefs.Player = {}));\r\n        })(Prefs = Common.Prefs || (Common.Prefs = {}));\r\n    })(Common = TJ.Common || (TJ.Common = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Common;\r\n    (function (Common) {\r\n        var Prefs;\r\n        (function (Prefs) {\r\n            var System;\r\n            (function (System) {\r\n                let keyTag = \"<System>\";\r\n                function Get(key) {\r\n                    return Prefs.Raw.Get(keyTag + key);\r\n                }\r\n                System.Get = Get;\r\n                function Set(key, value) {\r\n                    Prefs.Raw.Set(keyTag + key, value);\r\n                }\r\n                System.Set = Set;\r\n                function GetInt(key, defaultValue = 0) {\r\n                    return Prefs.Raw.GetInt(keyTag + key, defaultValue);\r\n                }\r\n                System.GetInt = GetInt;\r\n                function SetInt(key, value) {\r\n                    Prefs.Raw.SetInt(keyTag + key, value);\r\n                }\r\n                System.SetInt = SetInt;\r\n                function GetFloat(key, defaultValue = 0) {\r\n                    return Prefs.Raw.GetFloat(keyTag + key, defaultValue);\r\n                }\r\n                System.GetFloat = GetFloat;\r\n                function SetFloat(key, value) {\r\n                    Prefs.Raw.SetFloat(keyTag + key, value);\r\n                }\r\n                System.SetFloat = SetFloat;\r\n                function GetString(key, defaultValue = null) {\r\n                    return Prefs.Raw.GetString(keyTag + key, defaultValue);\r\n                }\r\n                System.GetString = GetString;\r\n                function SetString(key, value) {\r\n                    Prefs.Raw.SetString(keyTag + key, value);\r\n                }\r\n                System.SetString = SetString;\r\n                function GetBool(key, defaultValue = false) {\r\n                    return Prefs.Raw.GetBool(keyTag + key, defaultValue);\r\n                }\r\n                System.GetBool = GetBool;\r\n                function SetBool(key, value) {\r\n                    Prefs.Raw.SetBool(keyTag + key, value);\r\n                }\r\n                System.SetBool = SetBool;\r\n                function DeleteAll() {\r\n                    Prefs.Raw.DeleteAll(keyTag);\r\n                }\r\n                System.DeleteAll = DeleteAll;\r\n                function DeleteKey(key) {\r\n                    Prefs.Raw.DeleteKey(keyTag + key);\r\n                }\r\n                System.DeleteKey = DeleteKey;\r\n                function HasKey(key) {\r\n                    return Prefs.Raw.HasKey(keyTag + key);\r\n                }\r\n                System.HasKey = HasKey;\r\n            })(System = Prefs.System || (Prefs.System = {}));\r\n        })(Prefs = Common.Prefs || (Common.Prefs = {}));\r\n    })(Common = TJ.Common || (TJ.Common = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Common;\r\n    (function (Common) {\r\n        var PriorityInit;\r\n        (function (PriorityInit) {\r\n            let initList = [];\r\n            function Add(p, f) {\r\n                let obj = { p: p, f: f };\r\n                initList.push(obj);\r\n            }\r\n            PriorityInit.Add = Add;\r\n            window.setTimeout(() => {\r\n                initList.sort((a, b) => { return a.p - b.p; });\r\n                for (let item of initList) {\r\n                    try {\r\n                        item.f();\r\n                    }\r\n                    catch (e) {\r\n                        console.log(e);\r\n                    }\r\n                }\r\n            }, 0);\r\n        })(PriorityInit = Common.PriorityInit || (Common.PriorityInit = {}));\r\n    })(Common = TJ.Common || (TJ.Common = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Common;\r\n    (function (Common) {\r\n        class SystemInfo {\r\n            static get clientGuid() {\r\n                let key = \"SystemInfo.clientGuid\";\r\n                if (this._clientGuid == null) {\r\n                    this._clientGuid = Common.Prefs.System.GetString(key);\r\n                }\r\n                if (this._clientGuid == null) {\r\n                    this._clientGuid = Common.Guid.New();\r\n                    Common.Prefs.System.SetString(key, this._clientGuid);\r\n                }\r\n                return this._clientGuid;\r\n            }\r\n            static get userGuid() {\r\n                let key = \"SystemInfo.userGuid\";\r\n                if (this._userGuid == null) {\r\n                    this._userGuid = Common.Prefs.System.GetString(key);\r\n                }\r\n                return this._userGuid;\r\n            }\r\n            static set userGuid(value) {\r\n                let key = \"SystemInfo.userGuid\";\r\n                this._userGuid = value;\r\n                Common.Prefs.System.SetString(key, this._userGuid);\r\n            }\r\n        }\r\n        SystemInfo.startupGuid = Common.Guid.New();\r\n        SystemInfo.startupTime = Common.Date_.nowSeconds;\r\n        SystemInfo.foreground = true;\r\n        SystemInfo.foregroundTime = 0;\r\n        Common.SystemInfo = SystemInfo;\r\n        console.log(\"startupGuid = \" + SystemInfo.startupGuid);\r\n        setInterval(() => { if (SystemInfo.foreground)\r\n            SystemInfo.foregroundTime += 0.1; }, 100);\r\n    })(Common = TJ.Common || (TJ.Common = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Common;\r\n    (function (Common) {\r\n        class Url {\r\n            static GetArgs(url = null) {\r\n                if (url == null) {\r\n                    url = \"\" + window.location;\r\n                }\r\n                let i = url.indexOf(\"?\");\r\n                if (i > 0) {\r\n                    url = url.substring(i);\r\n                }\r\n                let ss = url.split(\"&\");\r\n                let args = {};\r\n                for (let s of ss) {\r\n                    let kv = s.split(\"=\");\r\n                    if (kv.length > 1) {\r\n                        args[kv[0]] = kv[1];\r\n                    }\r\n                }\r\n                return args;\r\n            }\r\n        }\r\n        Common.Url = Url;\r\n    })(Common = TJ.Common || (TJ.Common = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Common;\r\n    (function (Common) {\r\n        class WWW {\r\n            constructor(url, form = null) {\r\n                this._form = null;\r\n                this._url = null;\r\n                this._promise = null;\r\n                this._resolve = null;\r\n                this._error = null;\r\n                this._text = null;\r\n                this.guid = Common.Guid.New();\r\n                this.logSend = true;\r\n                this.logError = true;\r\n                this.logText = false;\r\n                this._url = url;\r\n                this._form = form;\r\n                this._promise = new Promise(resolve => { this._resolve = resolve; });\r\n            }\r\n            get logTag() {\r\n                return \"WWW : \" + this.guid + \" ->\";\r\n            }\r\n            get error() {\r\n                return this._error;\r\n            }\r\n            LogError() {\r\n                if (this.logError && this.error != null) {\r\n                    console.log(this.logTag + \" error -> \" + this.error);\r\n                }\r\n            }\r\n            get text() {\r\n                return this._text;\r\n            }\r\n            LogText() {\r\n                if (this.logText && this.text != null) {\r\n                    console.log(this.logTag + \" text -> \" + this.text);\r\n                }\r\n            }\r\n            Send(method = null, format = null) {\r\n                if (method == null)\r\n                    method = \"get\";\r\n                let url = this._url;\r\n                let data = null;\r\n                switch (format) {\r\n                    case \"form\":\r\n                        let keys = Object.keys(this._form);\r\n                        for (let i = 0; i < keys.length; i++) {\r\n                            let key = keys[i];\r\n                            if (i == 0) {\r\n                                data = key + \"=\" + this._form[key];\r\n                            }\r\n                            else {\r\n                                data += \"&\" + key + \"=\" + this._form[key];\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"json\":\r\n                        data = JSON.stringify(this._form);\r\n                        break;\r\n                }\r\n                switch (method) {\r\n                    case \"get\":\r\n                        if (data != null) {\r\n                            url += \"?\" + data;\r\n                        }\r\n                        break;\r\n                    case \"post\":\r\n                        break;\r\n                }\r\n                if (this.logSend)\r\n                    console.log(this.logTag + \" \" + url + \" <\" + method + \"> \" + data);\r\n                this.DoSend(url, method, data);\r\n                return this._promise;\r\n            }\r\n            DoSend(url, method, data) {\r\n                let xhr = new XMLHttpRequest();\r\n                xhr.onreadystatechange = () => {\r\n                    if (xhr.readyState == 4) {\r\n                        if (xhr.status == 200) {\r\n                            this._text = xhr.responseText;\r\n                        }\r\n                        else {\r\n                            this._error = xhr.status + \" - \" + xhr.responseText;\r\n                        }\r\n                        this._resolve();\r\n                        this.LogError();\r\n                        this.LogText();\r\n                    }\r\n                };\r\n                xhr.open(method, url, true);\r\n                xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n                switch (method) {\r\n                    case \"get\":\r\n                        xhr.send();\r\n                        break;\r\n                    case \"post\":\r\n                        xhr.send(data);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        Common.WWW = WWW;\r\n    })(Common = TJ.Common || (TJ.Common = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var API;\r\n    (function (API) {\r\n        var AdService;\r\n        (function (AdService) {\r\n            class IAdService extends TJ.Common.Component.Interface {\r\n                ShowBanner(param) { }\r\n                RemoveBanner(param) { }\r\n                NormalReady(param) { return false; }\r\n                ShowNormal(param) { }\r\n                RewardReady(param) { return false; }\r\n                LoadNative(param) { return null; }\r\n                ShowReward(param) { }\r\n                Exist() { return false; }\r\n            }\r\n            AdService.IAdService = IAdService;\r\n            class Param {\r\n                constructor() {\r\n                    this.cbi = new TJ.Common.CallbackInfo();\r\n                    this.id = null;\r\n                    this.place = 0;\r\n                    this.extraAd = true;\r\n                    this.template = true;\r\n                    this.video = true;\r\n                    this.refresh = false;\r\n                    this.onNative = null;\r\n                }\r\n                ToJson() {\r\n                    let args = {};\r\n                    args.cbi = TJ.Common.CallbackManager.Set(this.cbi);\r\n                    args.id = this.id;\r\n                    args.place = this.place;\r\n                    args.extraAd = this.extraAd;\r\n                    args.template = this.template;\r\n                    args.video = this.video;\r\n                    return JSON.stringify(args);\r\n                }\r\n            }\r\n            AdService.Param = Param;\r\n            let Place;\r\n            (function (Place) {\r\n                Place[Place[\"LEFT\"] = 3] = \"LEFT\";\r\n                Place[Place[\"RIGHT\"] = 5] = \"RIGHT\";\r\n                Place[Place[\"CENTER\"] = 17] = \"CENTER\";\r\n                Place[Place[\"TOP\"] = 48] = \"TOP\";\r\n                Place[Place[\"BOTTOM\"] = 80] = \"BOTTOM\";\r\n            })(Place = AdService.Place || (AdService.Place = {}));\r\n            function ShowBanner(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IAdService)) {\r\n                    try {\r\n                        item.ShowBanner(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            AdService.ShowBanner = ShowBanner;\r\n            function RemoveBanner(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IAdService)) {\r\n                    try {\r\n                        item.RemoveBanner(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            AdService.RemoveBanner = RemoveBanner;\r\n            function NormalReady(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IAdService)) {\r\n                    try {\r\n                        if (item.NormalReady(param))\r\n                            return true;\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n            AdService.NormalReady = NormalReady;\r\n            function ShowNormal(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IAdService)) {\r\n                    try {\r\n                        item.ShowNormal(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            AdService.ShowNormal = ShowNormal;\r\n            function RewardReady(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IAdService)) {\r\n                    try {\r\n                        if (item.RewardReady(param))\r\n                            return true;\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n            AdService.RewardReady = RewardReady;\r\n            function ShowReward(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IAdService)) {\r\n                    try {\r\n                        item.ShowReward(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            AdService.ShowReward = ShowReward;\r\n            class NativeItem {\r\n                OnShow() { }\r\n                OnClick() { }\r\n            }\r\n            AdService.NativeItem = NativeItem;\r\n            function LoadNative(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IAdService)) {\r\n                    try {\r\n                        let nad = item.LoadNative(param);\r\n                        if (nad != null) {\r\n                            return nad;\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n            AdService.LoadNative = LoadNative;\r\n            function Exist() {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IAdService)) {\r\n                    try {\r\n                        if (item.Exist())\r\n                            return true;\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n            AdService.Exist = Exist;\r\n        })(AdService = API.AdService || (API.AdService = {}));\r\n    })(API = TJ.API || (TJ.API = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var API;\r\n    (function (API) {\r\n        var Analytics;\r\n        (function (Analytics) {\r\n            class IAnalytics extends TJ.Common.Component.Interface {\r\n                Event(param) { }\r\n                EventBegin(param) { }\r\n                EventEnd(param) { }\r\n                PageBegin(param) { }\r\n                PageEnd(param) { }\r\n                LevelStart(param) { }\r\n                LevelFinish(param) { }\r\n                LevelFail(param) { }\r\n                Pay(param) { }\r\n                Buy(param) { }\r\n                Use(param) { }\r\n                Bonus(param) { }\r\n            }\r\n            Analytics.IAnalytics = IAnalytics;\r\n            class Param {\r\n                constructor() {\r\n                    this.dic = {};\r\n                }\r\n                ToJson() {\r\n                    return JSON.stringify(this);\r\n                }\r\n            }\r\n            Analytics.Param = Param;\r\n            function Event(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IAnalytics)) {\r\n                    try {\r\n                        item.Event(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            Analytics.Event = Event;\r\n            function EventBegin(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IAnalytics)) {\r\n                    try {\r\n                        item.EventBegin(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            Analytics.EventBegin = EventBegin;\r\n            function EventEnd(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IAnalytics)) {\r\n                    try {\r\n                        item.EventEnd(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            Analytics.EventEnd = EventEnd;\r\n            function PageBegin(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IAnalytics)) {\r\n                    try {\r\n                        item.PageBegin(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            Analytics.PageBegin = PageBegin;\r\n            function PageEnd(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IAnalytics)) {\r\n                    try {\r\n                        item.PageEnd(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            Analytics.PageEnd = PageEnd;\r\n            function LevelStart(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IAnalytics)) {\r\n                    try {\r\n                        item.LevelStart(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            Analytics.LevelStart = LevelStart;\r\n            function LevelFinish(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IAnalytics)) {\r\n                    try {\r\n                        item.LevelFinish(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            Analytics.LevelFinish = LevelFinish;\r\n            function LevelFail(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IAnalytics)) {\r\n                    try {\r\n                        item.LevelFail(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            Analytics.LevelFail = LevelFail;\r\n            function Pay(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IAnalytics)) {\r\n                    try {\r\n                        item.Pay(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            Analytics.Pay = Pay;\r\n            function Buy(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IAnalytics)) {\r\n                    try {\r\n                        item.Buy(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            Analytics.Buy = Buy;\r\n            function Use(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IAnalytics)) {\r\n                    try {\r\n                        item.Use(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            Analytics.Use = Use;\r\n            function Bonus(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IAnalytics)) {\r\n                    try {\r\n                        item.Bonus(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            Analytics.Bonus = Bonus;\r\n        })(Analytics = API.Analytics || (API.Analytics = {}));\r\n    })(API = TJ.API || (TJ.API = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var API;\r\n    (function (API) {\r\n        var AppCtl;\r\n        (function (AppCtl) {\r\n            class IAppCtl extends TJ.Common.Component.Interface {\r\n                Review() { }\r\n                Quit() { }\r\n                UserAgreement() { }\r\n                PrivacyPolicy() { }\r\n            }\r\n            AppCtl.IAppCtl = IAppCtl;\r\n            function Review() {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IAppCtl)) {\r\n                    try {\r\n                        item.Review();\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            AppCtl.Review = Review;\r\n            function Quit() {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IAppCtl)) {\r\n                    try {\r\n                        item.Quit();\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            AppCtl.Quit = Quit;\r\n            function UserAgreement() {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IAppCtl)) {\r\n                    try {\r\n                        item.UserAgreement();\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            AppCtl.UserAgreement = UserAgreement;\r\n            function PrivacyPolicy() {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IAppCtl)) {\r\n                    try {\r\n                        item.PrivacyPolicy();\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            AppCtl.PrivacyPolicy = PrivacyPolicy;\r\n        })(AppCtl = API.AppCtl || (API.AppCtl = {}));\r\n    })(API = TJ.API || (TJ.API = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var API;\r\n    (function (API) {\r\n        var AppInfo;\r\n        (function (AppInfo) {\r\n            class IAppInfo extends TJ.Common.Component.Interface {\r\n                AppGuid() { return null; }\r\n                ProductName() { return null; }\r\n                PackageName() { return null; }\r\n                VersionName() { return null; }\r\n                VersionCode() { return 0; }\r\n                Channel() { return null; }\r\n            }\r\n            AppInfo.IAppInfo = IAppInfo;\r\n            let appGuid;\r\n            function AppGuid() {\r\n                if (appGuid == null) {\r\n                    for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IAppInfo)) {\r\n                        try {\r\n                            appGuid = item.AppGuid();\r\n                            if (appGuid != null)\r\n                                return appGuid;\r\n                        }\r\n                        catch (e) {\r\n                            console.log(JSON.stringify(e));\r\n                        }\r\n                    }\r\n                }\r\n                return appGuid;\r\n            }\r\n            AppInfo.AppGuid = AppGuid;\r\n            function ProductName() {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IAppInfo)) {\r\n                    try {\r\n                        let res = item.ProductName();\r\n                        if (res != null)\r\n                            return res;\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n                return \"\";\r\n            }\r\n            AppInfo.ProductName = ProductName;\r\n            function PackageName() {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IAppInfo)) {\r\n                    try {\r\n                        let res = item.PackageName();\r\n                        if (res != null)\r\n                            return res;\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n                return \"\";\r\n            }\r\n            AppInfo.PackageName = PackageName;\r\n            function VersionName() {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IAppInfo)) {\r\n                    try {\r\n                        let res = item.VersionName();\r\n                        if (res != null)\r\n                            return res;\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n                return \"\";\r\n            }\r\n            AppInfo.VersionName = VersionName;\r\n            function VersionCode() {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IAppInfo)) {\r\n                    try {\r\n                        let res = item.VersionCode();\r\n                        if (res != null)\r\n                            return res;\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n                return 0;\r\n            }\r\n            AppInfo.VersionCode = VersionCode;\r\n            function Channel() {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IAppInfo)) {\r\n                    try {\r\n                        let res = item.Channel();\r\n                        if (res != null)\r\n                            return res;\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n                return \"\";\r\n            }\r\n            AppInfo.Channel = Channel;\r\n        })(AppInfo = API.AppInfo || (API.AppInfo = {}));\r\n    })(API = TJ.API || (TJ.API = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var API;\r\n    (function (API) {\r\n        var Billing;\r\n        (function (Billing) {\r\n            class IBilling extends TJ.Common.Component.Interface {\r\n                Purchase(param) { }\r\n                QueryAll(param) { }\r\n                Consume(param) { }\r\n                Exist() { return false; }\r\n            }\r\n            Billing.IBilling = IBilling;\r\n            class Param {\r\n                constructor() {\r\n                    this.cbi = new TJ.Common.CallbackInfo();\r\n                    this.product = new Product();\r\n                    this.order = new Order();\r\n                }\r\n                ToJson() {\r\n                    let args = {};\r\n                    args.cbi = TJ.Common.CallbackManager.Set(this.cbi);\r\n                    args.product = this.product;\r\n                    args.order = {};\r\n                    args.order.id = this.order.id;\r\n                    args.order.date = \"\" + this.order.date.getTime();\r\n                    return JSON.stringify(args);\r\n                }\r\n            }\r\n            Billing.Param = Param;\r\n            class Product {\r\n            }\r\n            Billing.Product = Product;\r\n            class Order {\r\n                constructor() {\r\n                    this.date = new Date();\r\n                }\r\n            }\r\n            Billing.Order = Order;\r\n            function Purchase(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IBilling)) {\r\n                    try {\r\n                        item.Purchase(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            Billing.Purchase = Purchase;\r\n            function QueryAll(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IBilling)) {\r\n                    try {\r\n                        item.QueryAll(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            Billing.QueryAll = QueryAll;\r\n            function Consume(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IBilling)) {\r\n                    try {\r\n                        item.Consume(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            Billing.Consume = Consume;\r\n            function Exist() {\r\n                let res = false;\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IBilling)) {\r\n                    try {\r\n                        res = item.Exist();\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n                return res;\r\n            }\r\n            Billing.Exist = Exist;\r\n        })(Billing = API.Billing || (API.Billing = {}));\r\n    })(API = TJ.API || (TJ.API = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var API;\r\n    (function (API) {\r\n        var Promo;\r\n        (function (Promo) {\r\n            class IPromo extends TJ.Common.Component.Interface {\r\n                Pop(param) { }\r\n            }\r\n            Promo.IPromo = IPromo;\r\n            class Param {\r\n                constructor() {\r\n                    this.cbi = new TJ.Common.CallbackInfo();\r\n                }\r\n            }\r\n            Promo.Param = Param;\r\n            function Pop(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IPromo)) {\r\n                    try {\r\n                        item.Pop(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            Promo.Pop = Pop;\r\n        })(Promo = API.Promo || (API.Promo = {}));\r\n    })(API = TJ.API || (TJ.API = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var API;\r\n    (function (API) {\r\n        var TA;\r\n        (function (TA) {\r\n            class ITA extends TJ.Common.Component.Interface {\r\n                PromoEvent(param) { }\r\n                PromoEvents(params) { }\r\n                Event_LifeCycle_Load(param) { }\r\n                Event_LifeCycle_Start(param) { }\r\n                Event_LifeCycle_Destroy(param) { }\r\n                Event_LifeCycle_Enable(param) { }\r\n                Event_LifeCycle_Disable(param) { }\r\n                Event_Page_Enter(param) { }\r\n                Event_Page_Show(param) { }\r\n                Event_Page_Leave(param) { }\r\n                Event_Button_Show(param) { }\r\n                Event_Button_Click(param) { }\r\n                Event_Level_Start(param) { }\r\n                Event_Level_Finish(param) { }\r\n                Event_Level_Fail(param) { }\r\n            }\r\n            TA.ITA = ITA;\r\n            class Param {\r\n                constructor() {\r\n                    this.id = \"\";\r\n                    this.source = \"\";\r\n                    this.type = \"\";\r\n                    this.style = \"\";\r\n                    this.icon = \"\";\r\n                }\r\n            }\r\n            TA.Param = Param;\r\n            function PromoEvent(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(ITA)) {\r\n                    try {\r\n                        item.PromoEvent(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            TA.PromoEvent = PromoEvent;\r\n            function PromoEvents(params) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(ITA)) {\r\n                    try {\r\n                        item.PromoEvents(params);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            TA.PromoEvents = PromoEvents;\r\n            function Event_LifeCycle_Load(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(ITA)) {\r\n                    try {\r\n                        item.Event_LifeCycle_Load(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            TA.Event_LifeCycle_Load = Event_LifeCycle_Load;\r\n            function Event_LifeCycle_Start(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(ITA)) {\r\n                    try {\r\n                        item.Event_LifeCycle_Start(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            TA.Event_LifeCycle_Start = Event_LifeCycle_Start;\r\n            function Event_LifeCycle_Destroy(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(ITA)) {\r\n                    try {\r\n                        item.Event_LifeCycle_Destroy(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            TA.Event_LifeCycle_Destroy = Event_LifeCycle_Destroy;\r\n            function Event_LifeCycle_Enable(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(ITA)) {\r\n                    try {\r\n                        item.Event_LifeCycle_Enable(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            TA.Event_LifeCycle_Enable = Event_LifeCycle_Enable;\r\n            function Event_LifeCycle_Disable(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(ITA)) {\r\n                    try {\r\n                        item.Event_LifeCycle_Disable(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            TA.Event_LifeCycle_Disable = Event_LifeCycle_Disable;\r\n            function Event_Page_Enter(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(ITA)) {\r\n                    try {\r\n                        item.Event_Page_Enter(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            TA.Event_Page_Enter = Event_Page_Enter;\r\n            function Event_Page_Show(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(ITA)) {\r\n                    try {\r\n                        item.Event_Page_Show(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            TA.Event_Page_Show = Event_Page_Show;\r\n            function Event_Page_Leave(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(ITA)) {\r\n                    try {\r\n                        item.Event_Page_Leave(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            TA.Event_Page_Leave = Event_Page_Leave;\r\n            function Event_Button_Show(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(ITA)) {\r\n                    try {\r\n                        item.Event_Button_Show(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            TA.Event_Button_Show = Event_Button_Show;\r\n            function Event_Button_Click(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(ITA)) {\r\n                    try {\r\n                        item.Event_Button_Click(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            TA.Event_Button_Click = Event_Button_Click;\r\n            function Event_Level_Start(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(ITA)) {\r\n                    try {\r\n                        item.Event_Level_Start(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            TA.Event_Level_Start = Event_Level_Start;\r\n            function Event_Level_Finish(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(ITA)) {\r\n                    try {\r\n                        item.Event_Level_Finish(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            TA.Event_Level_Finish = Event_Level_Finish;\r\n            function Event_Level_Fail(param) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(ITA)) {\r\n                    try {\r\n                        item.Event_Level_Fail(param);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            TA.Event_Level_Fail = Event_Level_Fail;\r\n        })(TA = API.TA || (API.TA = {}));\r\n    })(API = TJ.API || (TJ.API = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var API;\r\n    (function (API) {\r\n        var Vibrate;\r\n        (function (Vibrate) {\r\n            class IVibrate extends TJ.Common.Component.Interface {\r\n                Short() { }\r\n                Long() { }\r\n                Time(seconds) { }\r\n            }\r\n            Vibrate.IVibrate = IVibrate;\r\n            function Short() {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IVibrate)) {\r\n                    try {\r\n                        item.Short();\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            Vibrate.Short = Short;\r\n            function Long() {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IVibrate)) {\r\n                    try {\r\n                        item.Long();\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            Vibrate.Long = Long;\r\n            function Time(seconds) {\r\n                for (let item of TJ.Common.Component.Manager.GetComponentsWithInit(IVibrate)) {\r\n                    try {\r\n                        item.Time(seconds);\r\n                    }\r\n                    catch (e) {\r\n                        console.log(JSON.stringify(e));\r\n                    }\r\n                }\r\n            }\r\n            Vibrate.Time = Time;\r\n        })(Vibrate = API.Vibrate || (API.Vibrate = {}));\r\n    })(API = TJ.API || (TJ.API = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Develop;\r\n    (function (Develop) {\r\n        var ReYun;\r\n        (function (ReYun) {\r\n            let Raw;\r\n            (function (Raw) {\r\n                let url = \"https://log.reyun.com/receive/rest/\";\r\n                Raw.log = true;\r\n                async function Request(api, data) {\r\n                    let www = new TJ.Common.WWW(url + api, data);\r\n                    www.logText = Raw.log;\r\n                    www.logSend = Raw.log;\r\n                    await www.Send(\"post\", \"json\");\r\n                }\r\n                function Install(appid, deviceid, channelid) {\r\n                    let data = {};\r\n                    let context = {};\r\n                    context[\"deviceid\"] = deviceid;\r\n                    context[\"channelid\"] = channelid;\r\n                    data[\"appid\"] = appid;\r\n                    data[\"context\"] = context;\r\n                    Request(\"install\", data);\r\n                }\r\n                Raw.Install = Install;\r\n                function Startup(appid, deviceid, channelid) {\r\n                    let data = {};\r\n                    let context = {};\r\n                    context[\"deviceid\"] = deviceid;\r\n                    context[\"channelid\"] = channelid;\r\n                    data[\"appid\"] = appid;\r\n                    data[\"context\"] = context;\r\n                    Request(\"startup\", data);\r\n                }\r\n                Raw.Startup = Startup;\r\n                function Register(appid, deviceid, channelid, who) {\r\n                    let data = {};\r\n                    let context = {};\r\n                    context[\"deviceid\"] = deviceid;\r\n                    context[\"channelid\"] = channelid;\r\n                    data[\"appid\"] = appid;\r\n                    data[\"context\"] = context;\r\n                    data[\"who\"] = who;\r\n                    Request(\"register\", data);\r\n                }\r\n                Raw.Register = Register;\r\n                function Loggedin(appid, deviceid, channelid, who) {\r\n                    let data = {};\r\n                    let context = {};\r\n                    context[\"deviceid\"] = deviceid;\r\n                    context[\"channelid\"] = channelid;\r\n                    data[\"appid\"] = appid;\r\n                    data[\"context\"] = context;\r\n                    data[\"who\"] = who;\r\n                    Request(\"loggedin\", data);\r\n                }\r\n                Raw.Loggedin = Loggedin;\r\n                function Payment(appid, deviceid, channelid, who, currencyAmount, currencytype, iapamount, iapname, paymenttype, transactionid, virtualcoinamount) {\r\n                    let data = {};\r\n                    let context = {};\r\n                    context[\"deviceid\"] = deviceid;\r\n                    context[\"channelid\"] = channelid;\r\n                    data[\"appid\"] = appid;\r\n                    data[\"context\"] = context;\r\n                    data[\"who\"] = who;\r\n                    context[\"currencyAmount\"] = currencyAmount;\r\n                    context[\"currencytype\"] = currencytype;\r\n                    context[\"iapamount\"] = iapamount;\r\n                    context[\"iapname\"] = iapname;\r\n                    context[\"paymenttype\"] = paymenttype;\r\n                    context[\"transactionid\"] = transactionid;\r\n                    context[\"virtualcoinamount\"] = virtualcoinamount;\r\n                    Request(\"payment\", data);\r\n                }\r\n                Raw.Payment = Payment;\r\n                function Economy(appid, deviceid, channelid, who, itemamount, itemname, itemtotalprice) {\r\n                    let data = {};\r\n                    let context = {};\r\n                    context[\"deviceid\"] = deviceid;\r\n                    context[\"channelid\"] = channelid;\r\n                    data[\"appid\"] = appid;\r\n                    data[\"context\"] = context;\r\n                    data[\"who\"] = who;\r\n                    context[\"itemamount\"] = itemamount;\r\n                    context[\"itemname\"] = itemname;\r\n                    context[\"itemtotalprice\"] = itemtotalprice;\r\n                    Request(\"economy\", data);\r\n                }\r\n                Raw.Economy = Economy;\r\n                function Quest(appid, deviceid, channelid, who, questid, queststatus, questtype) {\r\n                    let data = {};\r\n                    let context = {};\r\n                    context[\"deviceid\"] = deviceid;\r\n                    context[\"channelid\"] = channelid;\r\n                    data[\"appid\"] = appid;\r\n                    data[\"context\"] = context;\r\n                    data[\"who\"] = who;\r\n                    context[\"questid\"] = questid;\r\n                    context[\"queststatus\"] = queststatus;\r\n                    context[\"questtype\"] = questtype;\r\n                    Request(\"quest\", data);\r\n                }\r\n                Raw.Quest = Quest;\r\n                function Event(appid, deviceid, channelid, who, what) {\r\n                    let data = {};\r\n                    let context = {};\r\n                    context[\"deviceid\"] = deviceid;\r\n                    context[\"channelid\"] = channelid;\r\n                    data[\"appid\"] = appid;\r\n                    data[\"context\"] = context;\r\n                    data[\"who\"] = who;\r\n                    data[\"what\"] = what;\r\n                    Request(\"event\", data);\r\n                }\r\n                Raw.Event = Event;\r\n                function Heartbeat(appid, deviceid, channelid, who) {\r\n                    let data = {};\r\n                    let context = {};\r\n                    context[\"deviceid\"] = deviceid;\r\n                    context[\"channelid\"] = channelid;\r\n                    data[\"appid\"] = appid;\r\n                    data[\"context\"] = context;\r\n                    data[\"who\"] = who;\r\n                    Request(\"heartbeat\", data);\r\n                }\r\n                Raw.Heartbeat = Heartbeat;\r\n            })(Raw = ReYun.Raw || (ReYun.Raw = {}));\r\n            class Data {\r\n                constructor() {\r\n                    this.log = true;\r\n                }\r\n            }\r\n            ReYun.Data = Data;\r\n            function Install(data) {\r\n                if (data == null)\r\n                    return;\r\n                Raw.log = data.log;\r\n                Raw.Install(data.appid, TJ.Common.SystemInfo.clientGuid, data.channelid);\r\n            }\r\n            ReYun.Install = Install;\r\n            function Startup(data) {\r\n                if (data == null)\r\n                    return;\r\n                Raw.log = data.log;\r\n                Raw.Startup(data.appid, TJ.Common.SystemInfo.clientGuid, data.channelid);\r\n            }\r\n            ReYun.Startup = Startup;\r\n            function Register(data) {\r\n                if (data == null)\r\n                    return;\r\n                Raw.log = data.log;\r\n                Raw.Register(data.appid, TJ.Common.SystemInfo.clientGuid, data.channelid, data.who);\r\n            }\r\n            ReYun.Register = Register;\r\n            function Loggedin(data) {\r\n                if (data == null)\r\n                    return;\r\n                Raw.log = data.log;\r\n                Raw.Loggedin(data.appid, TJ.Common.SystemInfo.clientGuid, data.channelid, data.who);\r\n            }\r\n            ReYun.Loggedin = Loggedin;\r\n            function Payment(data, currencyAmount, currencytype, iapamount, iapname, paymenttype, transactionid, virtualcoinamount) {\r\n                if (data == null)\r\n                    return;\r\n                Raw.log = data.log;\r\n                Raw.Payment(data.appid, TJ.Common.SystemInfo.clientGuid, data.channelid, data.who, currencyAmount, currencytype, iapamount, iapname, paymenttype, transactionid, virtualcoinamount);\r\n            }\r\n            ReYun.Payment = Payment;\r\n            function Economy(data, itemamount, itemname, itemtotalprice) {\r\n                if (data == null)\r\n                    return;\r\n                Raw.log = data.log;\r\n                Raw.Economy(data.appid, TJ.Common.SystemInfo.clientGuid, data.channelid, data.who, itemamount, itemname, itemtotalprice);\r\n            }\r\n            ReYun.Economy = Economy;\r\n            function Quest(data, questid, queststatus, questtype) {\r\n                if (data == null)\r\n                    return;\r\n                Raw.log = data.log;\r\n                Raw.Quest(data.appid, TJ.Common.SystemInfo.clientGuid, data.channelid, data.who, questid, queststatus, questtype);\r\n            }\r\n            ReYun.Quest = Quest;\r\n            function Event(data, what) {\r\n                if (data == null)\r\n                    return;\r\n                Raw.log = data.log;\r\n                Raw.Event(data.appid, TJ.Common.SystemInfo.clientGuid, data.channelid, data.who, what);\r\n            }\r\n            ReYun.Event = Event;\r\n            function Heartbeat(data) {\r\n                if (data == null)\r\n                    return;\r\n                Raw.log = data.log;\r\n                Raw.Heartbeat(data.appid, TJ.Common.SystemInfo.clientGuid, data.channelid, data.who);\r\n            }\r\n            ReYun.Heartbeat = Heartbeat;\r\n        })(ReYun = Develop.ReYun || (Develop.ReYun = {}));\r\n    })(Develop = TJ.Develop || (TJ.Develop = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Develop;\r\n    (function (Develop) {\r\n        var Yun;\r\n        (function (Yun) {\r\n            var Storage;\r\n            (function (Storage) {\r\n                var Player;\r\n                (function (Player) {\r\n                    let apiUrl = \"https://yxapi.tomatojoy.cn/player\";\r\n                    class Result {\r\n                    }\r\n                    async function GetData() {\r\n                        let req = {};\r\n                        req.A = \"Player.GetData\";\r\n                        let p = {};\r\n                        p.userguid = TJ.Common.SystemInfo.userGuid;\r\n                        req.P = JSON.stringify(p);\r\n                        let www = new TJ.Common.WWW(apiUrl, req);\r\n                        await www.Send(\"post\", \"form\");\r\n                        if (www.error == null) {\r\n                            let res = JSON.parse(www.text);\r\n                            if (res.E == null) {\r\n                                return res.P;\r\n                            }\r\n                            else {\r\n                                console.log(\"E = \" + res.E);\r\n                            }\r\n                        }\r\n                        return {};\r\n                    }\r\n                    Player.GetData = GetData;\r\n                    async function SaveData(data) {\r\n                        if (TJ.Common.SystemInfo.userGuid == null)\r\n                            return;\r\n                        let req = {};\r\n                        req.A = \"Player.SaveData\";\r\n                        let p = {};\r\n                        p.userguid = TJ.Common.SystemInfo.userGuid;\r\n                        p.data = data;\r\n                        req.P = JSON.stringify(p);\r\n                        let www = new TJ.Common.WWW(apiUrl, req);\r\n                        await www.Send(\"post\", \"form\");\r\n                        if (www.error == null) {\r\n                            let res = JSON.parse(www.text);\r\n                            if (res.E == null) {\r\n                            }\r\n                            else {\r\n                                console.log(\"E = \" + res.E);\r\n                            }\r\n                        }\r\n                    }\r\n                    Player.SaveData = SaveData;\r\n                    async function ClearData(keys) {\r\n                        if (TJ.Common.SystemInfo.userGuid == null)\r\n                            return;\r\n                        let req = {};\r\n                        req.A = \"Player.ClearData\";\r\n                        let p = {};\r\n                        p.userguid = TJ.Common.SystemInfo.userGuid;\r\n                        p.keys = keys;\r\n                        req.P = JSON.stringify(p);\r\n                        let www = new TJ.Common.WWW(apiUrl, req);\r\n                        await www.Send(\"post\", \"form\");\r\n                        if (www.error == null) {\r\n                            let res = JSON.parse(www.text);\r\n                            if (res.E == null) {\r\n                            }\r\n                            else {\r\n                                console.log(\"E = \" + res.E);\r\n                            }\r\n                        }\r\n                    }\r\n                    Player.ClearData = ClearData;\r\n                })(Player = Storage.Player || (Storage.Player = {}));\r\n            })(Storage = Yun.Storage || (Yun.Storage = {}));\r\n        })(Yun = Develop.Yun || (Develop.Yun = {}));\r\n    })(Develop = TJ.Develop || (TJ.Develop = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Develop;\r\n    (function (Develop) {\r\n        var Yun;\r\n        (function (Yun) {\r\n            var Config;\r\n            (function (Config) {\r\n                async function GameCfg() {\r\n                    let www = new TJ.Common.WWW(\"https://h5.tomatojoy.cn/res/\" + TJ.API.AppInfo.AppGuid() + \"/config/game.json\");\r\n                    await www.Send();\r\n                    if (www.error == null && www.text != null) {\r\n                        return JSON.parse(www.text);\r\n                    }\r\n                    return null;\r\n                }\r\n                Config.GameCfg = GameCfg;\r\n            })(Config = Yun.Config || (Yun.Config = {}));\r\n        })(Yun = Develop.Yun || (Develop.Yun = {}));\r\n    })(Develop = TJ.Develop || (TJ.Develop = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Develop;\r\n    (function (Develop) {\r\n        var Yun;\r\n        (function (Yun) {\r\n            var Location;\r\n            (function (Location) {\r\n                TJ.Common.PriorityInit.Add(0, () => {\r\n                    setInterval(() => { Sync(); }, 1000 * 60 * 10);\r\n                    Sync();\r\n                });\r\n                Location.ip = null;\r\n                Location.country = null;\r\n                Location.province = null;\r\n                Location.city = null;\r\n                let server_time = 0;\r\n                function NowTime() {\r\n                    return Date.now() - syncTime + server_time;\r\n                }\r\n                Location.NowTime = NowTime;\r\n                let syncTime = 0;\r\n                let syncResolve;\r\n                Location.syncPromise = new Promise((r) => { syncResolve = r; });\r\n                async function Sync() {\r\n                    let apiUrl = \"https://yxapi.tomatojoy.cn/getIp\";\r\n                    let www = new TJ.Common.WWW(apiUrl);\r\n                    www.logText = true;\r\n                    await www.Send();\r\n                    if (www.error == null) {\r\n                        let res = JSON.parse(www.text);\r\n                        if (res.code == 200) {\r\n                            Location.ip = res.data.ip;\r\n                            Location.country = res.data.country;\r\n                            Location.province = res.data.province;\r\n                            Location.city = res.data.city;\r\n                            server_time = res.data.server_time * 1000;\r\n                            syncTime = Date.now();\r\n                            syncResolve();\r\n                        }\r\n                    }\r\n                }\r\n                Location.Sync = Sync;\r\n            })(Location = Yun.Location || (Yun.Location = {}));\r\n        })(Yun = Develop.Yun || (Develop.Yun = {}));\r\n    })(Develop = TJ.Develop || (TJ.Develop = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Develop;\r\n    (function (Develop) {\r\n        var Yun;\r\n        (function (Yun) {\r\n            var Prefs;\r\n            (function (Prefs) {\r\n                var Player;\r\n                (function (Player) {\r\n                    function Get(key) {\r\n                        return TJ.Common.Prefs.Player.Get(key);\r\n                    }\r\n                    Player.Get = Get;\r\n                    function Set(key, value) {\r\n                        TJ.Common.Prefs.Player.Set(key, value);\r\n                        UploadData();\r\n                    }\r\n                    Player.Set = Set;\r\n                    function GetInt(key, defaultValue = 0) {\r\n                        return TJ.Common.Prefs.Player.GetInt(key, defaultValue);\r\n                    }\r\n                    Player.GetInt = GetInt;\r\n                    function SetInt(key, value) {\r\n                        TJ.Common.Prefs.Player.SetInt(key, value);\r\n                        UploadData();\r\n                    }\r\n                    Player.SetInt = SetInt;\r\n                    function GetFloat(key, defaultValue = 0) {\r\n                        return TJ.Common.Prefs.Player.GetFloat(key, defaultValue);\r\n                    }\r\n                    Player.GetFloat = GetFloat;\r\n                    function SetFloat(key, value) {\r\n                        TJ.Common.Prefs.Player.SetFloat(key, value);\r\n                        UploadData();\r\n                    }\r\n                    Player.SetFloat = SetFloat;\r\n                    function GetString(key, defaultValue = null) {\r\n                        return TJ.Common.Prefs.Player.GetString(key, defaultValue);\r\n                    }\r\n                    Player.GetString = GetString;\r\n                    function SetString(key, value) {\r\n                        TJ.Common.Prefs.Player.SetString(key, value);\r\n                        UploadData();\r\n                    }\r\n                    Player.SetString = SetString;\r\n                    function GetBool(key, defaultValue = false) {\r\n                        return TJ.Common.Prefs.Player.GetBool(key, defaultValue);\r\n                    }\r\n                    Player.GetBool = GetBool;\r\n                    function SetBool(key, value) {\r\n                        TJ.Common.Prefs.Player.SetBool(key, value);\r\n                        UploadData();\r\n                    }\r\n                    Player.SetBool = SetBool;\r\n                    function DeleteAll() {\r\n                        TJ.Common.Prefs.Player.DeleteAll();\r\n                        Yun.Storage.Player.ClearData(TJ.Common.Prefs.Raw.changeKeys);\r\n                    }\r\n                    Player.DeleteAll = DeleteAll;\r\n                    function DeleteKey(key) {\r\n                        TJ.Common.Prefs.Player.DeleteKey(key);\r\n                        Yun.Storage.Player.ClearData(TJ.Common.Prefs.Raw.changeKeys);\r\n                    }\r\n                    Player.DeleteKey = DeleteKey;\r\n                    function HasKey(key) {\r\n                        return TJ.Common.Prefs.Player.HasKey(key);\r\n                    }\r\n                    Player.HasKey = HasKey;\r\n                    function UploadData(key = null) {\r\n                        if (key == null)\r\n                            key = TJ.Common.Prefs.Raw.changeKey;\r\n                        let data = {};\r\n                        data[key] = TJ.Common.Prefs.Raw.GetRaw(key);\r\n                        if (data[key] != null)\r\n                            Yun.Storage.Player.SaveData(data);\r\n                    }\r\n                    Player.UploadData = UploadData;\r\n                    async function Sync() {\r\n                        let storage = await Yun.Storage.Player.GetData();\r\n                        for (let key in storage) {\r\n                            let json = storage[key];\r\n                            if (json != null) {\r\n                                let data = JSON.parse(json);\r\n                                data = TJ.Common.Prefs.Raw.SetRawData(key, data);\r\n                                if (data != null) {\r\n                                    UploadData(key);\r\n                                }\r\n                            }\r\n                            else {\r\n                                UploadData(key);\r\n                            }\r\n                        }\r\n                    }\r\n                    Player.Sync = Sync;\r\n                })(Player = Prefs.Player || (Prefs.Player = {}));\r\n            })(Prefs = Yun.Prefs || (Yun.Prefs = {}));\r\n        })(Yun = Develop.Yun || (Develop.Yun = {}));\r\n    })(Develop = TJ.Develop || (TJ.Develop = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Develop;\r\n    (function (Develop) {\r\n        var Yun;\r\n        (function (Yun) {\r\n            var Promo;\r\n            (function (Promo) {\r\n                class Data {\r\n                    constructor() {\r\n                        this.loaded = false;\r\n                        this.showed = false;\r\n                        this.clicked = false;\r\n                        this.opened = false;\r\n                    }\r\n                    static get dataUrl() {\r\n                        return \"https://h5.tomatojoy.cn/res/\" + TJ.API.AppInfo.AppGuid() + \"/promo/config.json\";\r\n                    }\r\n                    static async LoadList(style = null) {\r\n                        if (this.www == null) {\r\n                            this.www = new TJ.Common.WWW(this.dataUrl);\r\n                        }\r\n                        if (this.www.text == null) {\r\n                            if (this.send == null) {\r\n                                this.send = this.www.Send();\r\n                            }\r\n                            await this.send;\r\n                            this.send = null;\r\n                        }\r\n                        let list = [];\r\n                        if (this.www.text != null) {\r\n                            let promos = JSON.parse(this.www.text);\r\n                            if (promos != null) {\r\n                                for (let pd of promos) {\r\n                                    if (style == null || pd.promoStyle == null || pd.promoStyle[style] != false) {\r\n                                        let temp = new Data();\r\n                                        temp.style = style;\r\n                                        for (let key in pd) {\r\n                                            temp[key] = pd[key];\r\n                                        }\r\n                                        list.push(temp);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        return list;\r\n                    }\r\n                    get icon() {\r\n                        return \"https://h5.tomatojoy.cn/png/\" + this.iconMD5 + \".png\";\r\n                    }\r\n                    static ReportAwake(style = null) {\r\n                        this.Event(style, \"Awake\");\r\n                    }\r\n                    static ReportStart(style = null) {\r\n                        this.Event(style, \"Start\");\r\n                    }\r\n                    ReportLoad() {\r\n                        if (!this.loaded) {\r\n                            this.loaded = true;\r\n                            this.Event(\"Load\");\r\n                        }\r\n                    }\r\n                    ReportShow() {\r\n                        if (!this.showed) {\r\n                            this.showed = true;\r\n                            this.Event(\"Show\");\r\n                        }\r\n                    }\r\n                    ReportClick() {\r\n                        if (!this.clicked) {\r\n                            this.clicked = true;\r\n                            this.Event(\"Click\");\r\n                        }\r\n                    }\r\n                    ReportOpen() {\r\n                        if (!this.opened) {\r\n                            this.opened = true;\r\n                            this.Event(\"Open\");\r\n                        }\r\n                    }\r\n                    Event(event) {\r\n                        Develop.ReYun.Event(Data.reyunData, \"[promo]-\" + Data.formatLogApp + \"-\" + this.formatLogPromo + \"-\" + Data.FormatLogEvent(event));\r\n                        Develop.ReYun.Event(Data.reyunData, \"[icon]-\" + Data.formatLogApp + \"-\" + this.formatLogIcon + \"-\" + Data.FormatLogEvent(event));\r\n                        Develop.ReYun.Event(Data.reyunData, \"[app]-\" + Data.formatLogApp + \"-\" + Data.FormatLogEvent(event));\r\n                        Develop.ReYun.Event(Data.reyunData, \"[global-icon]-\" + this.formatLogIcon + \"-\" + Data.FormatLogEvent(event));\r\n                    }\r\n                    static Event(style, event) {\r\n                        Develop.ReYun.Event(Data.reyunData, Data.formatLogApp + \"-\" + Data.FormatLogStyle(style) + \"-\" + Data.FormatLogEvent(event));\r\n                    }\r\n                    Load() {\r\n                        if (this.iconList.length > 0) {\r\n                            let i = Math.random() * this.iconList.length;\r\n                            i = Math.floor(i);\r\n                            this.iconMD5 = this.iconList[i];\r\n                        }\r\n                        else {\r\n                            this.iconMD5 = null;\r\n                        }\r\n                        this.loaded = false;\r\n                        this.showed = false;\r\n                        this.clicked = false;\r\n                        this.opened = false;\r\n                        this.ReportLoad();\r\n                    }\r\n                    Click() {\r\n                        this.ReportClick();\r\n                        let param = new TJ.API.Promo.Param();\r\n                        param.appId = this.appId;\r\n                        param.appPackage = this.appPackageName;\r\n                        param.storePackage = this.channelPackageName;\r\n                        param.extraData = { \"TJ_Promo\": this.promoGuid, \"TJ_App\": TJ.API.AppInfo.AppGuid() };\r\n                        param.uri = TJ.Common.String_.Format(this.channelRule, this.appPackageName);\r\n                        param.cbi.Add(TJ.Define.Event.Success, () => { this.ReportOpen(); });\r\n                        TJ.API.Promo.Pop(param);\r\n                    }\r\n                    static get formatLogApp() {\r\n                        let app = TJ.API.AppInfo.AppGuid();\r\n                        if (app == null)\r\n                            app = '';\r\n                        return \"app{\" + app + \"}\";\r\n                    }\r\n                    static FormatLogStyle(style) {\r\n                        if (style == null)\r\n                            style = '';\r\n                        return \"style{\" + style + \"}\";\r\n                    }\r\n                    get formatLogStyle() {\r\n                        return Data.FormatLogStyle(this.style);\r\n                    }\r\n                    get formatLogPromo() {\r\n                        let promo = this.promoGuid;\r\n                        if (promo == null)\r\n                            promo = '';\r\n                        return \"promo{\" + promo + \"}\";\r\n                    }\r\n                    get formatLogIcon() {\r\n                        let icon = this.iconMD5;\r\n                        if (icon == null)\r\n                            icon = '';\r\n                        return \"icon{\" + icon + \"}\";\r\n                    }\r\n                    static FormatLogEvent(event) {\r\n                        if (event == null)\r\n                            event = '';\r\n                        return \"event{\" + event + \"}\";\r\n                    }\r\n                    static get reyunData() {\r\n                        let data = new Develop.ReYun.Data();\r\n                        data.appid = \"2af775abf83e6493fdeb60700734f21d\";\r\n                        data.channelid = TJ.API.AppInfo.AppGuid();\r\n                        data.who = TJ.Common.SystemInfo.clientGuid;\r\n                        data.log = false;\r\n                        return data;\r\n                    }\r\n                }\r\n                Promo.Data = Data;\r\n                window.setTimeout(() => {\r\n                    Develop.ReYun.Install(Data.reyunData);\r\n                    Develop.ReYun.Startup(Data.reyunData);\r\n                    Develop.ReYun.Event(Data.reyunData, \"TJ.Init\");\r\n                }, 0);\r\n            })(Promo = Yun.Promo || (Yun.Promo = {}));\r\n        })(Yun = Develop.Yun || (Develop.Yun = {}));\r\n    })(Develop = TJ.Develop || (TJ.Develop = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Develop;\r\n    (function (Develop) {\r\n        var Yun;\r\n        (function (Yun) {\r\n            var Promo;\r\n            (function (Promo) {\r\n                class List {\r\n                    constructor() {\r\n                        this.datas = [];\r\n                        this.loaded = [];\r\n                    }\r\n                    Add(data) {\r\n                        if (data == null)\r\n                            return;\r\n                        let i = this.datas.indexOf(data);\r\n                        if (i < 0)\r\n                            this.datas.push(data);\r\n                    }\r\n                    Remove(data) {\r\n                        if (data == null)\r\n                            return;\r\n                        let i = this.datas.indexOf(data);\r\n                        if (i >= 0)\r\n                            this.datas.splice(i, 1);\r\n                    }\r\n                    get count() {\r\n                        return this.datas.length;\r\n                    }\r\n                    Load(reuse = false) {\r\n                        let data;\r\n                        let list = [];\r\n                        for (let item of this.datas) {\r\n                            let i = this.loaded.indexOf(item);\r\n                            if (i < 0)\r\n                                list.push(item);\r\n                        }\r\n                        if (list.length > 0) {\r\n                            let ratios = [];\r\n                            for (let item of list) {\r\n                                ratios.push(item.weight);\r\n                            }\r\n                            let i = List.Random(ratios);\r\n                            data = list[i];\r\n                        }\r\n                        if (data != null) {\r\n                            data.Load();\r\n                            if (!reuse) {\r\n                                let i = this.loaded.indexOf(data);\r\n                                if (i < 0)\r\n                                    this.loaded.push(data);\r\n                            }\r\n                        }\r\n                        return data;\r\n                    }\r\n                    Unload(data) {\r\n                        if (data == null)\r\n                            return;\r\n                        let i = this.loaded.indexOf(data);\r\n                        if (i >= 0)\r\n                            this.loaded.splice(i, 1);\r\n                    }\r\n                    static Random(ratios) {\r\n                        if (ratios != null) {\r\n                            let max = 0, sum = 0;\r\n                            for (let item of ratios) {\r\n                                max += item;\r\n                            }\r\n                            let ratio = Math.random() * max;\r\n                            for (let i = 0; i < ratios.length; i++) {\r\n                                sum += ratios[i];\r\n                                if (sum > ratio)\r\n                                    return i;\r\n                            }\r\n                        }\r\n                        return 0;\r\n                    }\r\n                    static async Get(style = null) {\r\n                        let list = new List();\r\n                        for (let pd of await Promo.Data.LoadList(style)) {\r\n                            list.Add(pd);\r\n                        }\r\n                        return list;\r\n                    }\r\n                }\r\n                Promo.List = List;\r\n            })(Promo = Yun.Promo || (Yun.Promo = {}));\r\n        })(Yun = Develop.Yun || (Develop.Yun = {}));\r\n    })(Develop = TJ.Develop || (TJ.Develop = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Develop;\r\n    (function (Develop) {\r\n        var Yun;\r\n        (function (Yun) {\r\n            var Rank;\r\n            (function (Rank) {\r\n                let apiUrl = \"https://yxapi.tomatojoy.cn/player\";\r\n                class UserInfo {\r\n                }\r\n                class ResultRankListData {\r\n                }\r\n                class ResultParamData {\r\n                }\r\n                class ResultParam {\r\n                }\r\n                class Result {\r\n                }\r\n                class RankData {\r\n                    constructor() {\r\n                        this.score = 0;\r\n                        this.rank = 0;\r\n                    }\r\n                }\r\n                Rank.RankData = RankData;\r\n                function ResultRankListData2RankData(data) {\r\n                    let rankData = new RankData();\r\n                    if (data != null) {\r\n                        rankData.userguid = data.userguid;\r\n                        rankData.score = data.score;\r\n                        rankData.userName = data.userInfo.userName;\r\n                        rankData.avatar = data.userInfo.avatar;\r\n                    }\r\n                    return rankData;\r\n                }\r\n                let selfRanks = {};\r\n                function GetSelfRank(rankguid) {\r\n                    if (selfRanks[rankguid] != null) {\r\n                        return selfRanks[rankguid];\r\n                    }\r\n                    return new RankData();\r\n                }\r\n                Rank.GetSelfRank = GetSelfRank;\r\n                async function GetRankList(rankguid) {\r\n                    let list = [];\r\n                    let req = {};\r\n                    req.A = \"Rank.GetRankList\";\r\n                    let p = {};\r\n                    p.rankguid = rankguid;\r\n                    p.userguid = TJ.Common.SystemInfo.userGuid;\r\n                    if (p.userguid == null)\r\n                        p.userguid = \"\";\r\n                    req.P = JSON.stringify(p);\r\n                    let www = new TJ.Common.WWW(apiUrl, req);\r\n                    www.logText = true;\r\n                    await www.Send(\"post\", \"form\");\r\n                    if (www.error == null) {\r\n                        let res = JSON.parse(www.text);\r\n                        if (res.E == null) {\r\n                            if (res.P.data != null) {\r\n                                let size = 0;\r\n                                selfRanks[rankguid] = null;\r\n                                if (res.P.data.list != null) {\r\n                                    size = res.P.data.list.length;\r\n                                    for (let i = 0; i < res.P.data.list.length; i++) {\r\n                                        let rd = ResultRankListData2RankData(res.P.data.list[i]);\r\n                                        list.push(rd);\r\n                                        if (rd.userguid == TJ.Common.SystemInfo.userGuid) {\r\n                                            selfRanks[rankguid] = rd;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (res.P.data.self != null) {\r\n                                    let rd = ResultRankListData2RankData(res.P.data.self);\r\n                                    if (selfRanks[rankguid] != null) {\r\n                                        selfRanks[rankguid].score = rd.score;\r\n                                        selfRanks[rankguid].userName = rd.userName;\r\n                                        selfRanks[rankguid].avatar = rd.avatar;\r\n                                    }\r\n                                    else {\r\n                                        selfRanks[rankguid] = rd;\r\n                                        list.push(rd);\r\n                                    }\r\n                                }\r\n                                list.sort((a, b) => {\r\n                                    if (a.score > b.score) {\r\n                                        return res.P.data.sortType;\r\n                                    }\r\n                                    else if (a.score < b.score) {\r\n                                        return -res.P.data.sortType;\r\n                                    }\r\n                                    return 0;\r\n                                });\r\n                                if (size > 0 && list.length > size) {\r\n                                    list.splice(size, list.length - size);\r\n                                }\r\n                                for (let i = 0; i < list.length; i++) {\r\n                                    list[i].rank = i + 1;\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            console.log(\"E = \" + res.E);\r\n                        }\r\n                    }\r\n                    return list;\r\n                }\r\n                Rank.GetRankList = GetRankList;\r\n                async function ReportScore(rankguid, score) {\r\n                    let req = {};\r\n                    req.A = \"Rank.ReportScore\";\r\n                    let p = {};\r\n                    p.rankguid = rankguid;\r\n                    p.userguid = TJ.Common.SystemInfo.userGuid;\r\n                    p.score = score;\r\n                    req.P = JSON.stringify(p);\r\n                    let www = new TJ.Common.WWW(apiUrl, req);\r\n                    www.logText = true;\r\n                    await www.Send(\"post\", \"form\");\r\n                }\r\n                Rank.ReportScore = ReportScore;\r\n            })(Rank = Yun.Rank || (Yun.Rank = {}));\r\n        })(Yun = Develop.Yun || (Develop.Yun = {}));\r\n    })(Develop = TJ.Develop || (TJ.Develop = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var Android;\r\n        (function (Android) {\r\n            var Extern;\r\n            (function (Extern) {\r\n                var ADS;\r\n                (function (ADS) {\r\n                    class ExApi {\r\n                        static Debug(fn, ...ps) {\r\n                            console.log(\"call TJ.Android.ADS.ExApi.\" + fn + \" -> \" + ps);\r\n                        }\r\n                        static ShowBanner(json) {\r\n                            this.Debug(\"ShowBanner\", json);\r\n                            this.jc.CallStatic(\"ShowBanner\", new TJ.Common.String_(json));\r\n                        }\r\n                        static RemoveBanner(json) {\r\n                            this.Debug(\"RemoveBanner\", json);\r\n                            this.jc.CallStatic(\"RemoveBanner\", new TJ.Common.String_(json));\r\n                        }\r\n                        static NormalReady(json) {\r\n                            this.Debug(\"NormalReady\", json);\r\n                            return this.jc.CallStatic(TJ.Common.Bool_, \"NormalReady\", new TJ.Common.String_(json)).value;\r\n                        }\r\n                        static ShowNormal(json) {\r\n                            this.Debug(\"ShowNormal\", json);\r\n                            this.jc.CallStatic(\"ShowNormal\", new TJ.Common.String_(json));\r\n                        }\r\n                        static RewardReady(json) {\r\n                            this.Debug(\"RewardReady\", json);\r\n                            return this.jc.CallStatic(TJ.Common.Bool_, \"RewardReady\", new TJ.Common.String_(json)).value;\r\n                        }\r\n                        static ShowReward(json) {\r\n                            this.Debug(\"ShowReward\", json);\r\n                            this.jc.CallStatic(\"ShowReward\", new TJ.Common.String_(json));\r\n                        }\r\n                        static Exist() {\r\n                            this.Debug(\"Exist\");\r\n                            return this.jc.CallStatic(TJ.Common.Bool_, \"Exist\").value;\r\n                        }\r\n                    }\r\n                    ExApi.jc = new TJ.Common.Android.JavaClass(\"tj.ADS.ExApi\");\r\n                    ADS.ExApi = ExApi;\r\n                })(ADS = Extern.ADS || (Extern.ADS = {}));\r\n            })(Extern = Android.Extern || (Android.Extern = {}));\r\n        })(Android = Platform.Android || (Platform.Android = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var Android;\r\n        (function (Android) {\r\n            var Extern;\r\n            (function (Extern) {\r\n                var APP;\r\n                (function (APP) {\r\n                    class Api {\r\n                        static Debug(fn, ...ps) {\r\n                            console.log(\"call TJ.Android.APP.Api.\" + fn + \" -> \" + ps);\r\n                        }\r\n                        static AppGuid() {\r\n                            this.Debug(\"AppGuid\");\r\n                            return this.jc.CallStatic(TJ.Common.String_, \"AppGuid\").value;\r\n                        }\r\n                    }\r\n                    Api.jc = new TJ.Common.Android.JavaClass(\"tj.APP.Api\");\r\n                    APP.Api = Api;\r\n                    class ExApi {\r\n                        static Debug(fn, ...ps) {\r\n                            console.log(\"call TJ.Android.APP.ExApi.\" + fn + \" -> \" + ps);\r\n                        }\r\n                        static Quit() {\r\n                            this.Debug(\"Quit\");\r\n                            this.jc.CallStatic(\"Quit\");\r\n                        }\r\n                        static ProductName() {\r\n                            this.Debug(\"ProductName\");\r\n                            return this.jc.CallStatic(TJ.Common.String_, \"ProductName\").value;\r\n                        }\r\n                        static PackageName() {\r\n                            this.Debug(\"PackageName\");\r\n                            return this.jc.CallStatic(TJ.Common.String_, \"PackageName\").value;\r\n                        }\r\n                        static VersionName() {\r\n                            this.Debug(\"VersionName\");\r\n                            return this.jc.CallStatic(TJ.Common.String_, \"VersionName\").value;\r\n                        }\r\n                        static VersionCode() {\r\n                            this.Debug(\"VersionCode\");\r\n                            return this.jc.CallStatic(TJ.Common.Int_, \"VersionCode\").value;\r\n                        }\r\n                        static Channel() {\r\n                            this.Debug(\"Channel\");\r\n                            return this.jc.CallStatic(TJ.Common.String_, \"Channel\").value;\r\n                        }\r\n                        static UserAgreement() {\r\n                            this.Debug(\"UserAgreement\");\r\n                            this.jc.CallStatic(\"UserAgreement\");\r\n                        }\r\n                        static PrivacyPolicy() {\r\n                            this.Debug(\"PrivacyPolicy\");\r\n                            this.jc.CallStatic(\"PrivacyPolicy\");\r\n                        }\r\n                    }\r\n                    ExApi.jc = new TJ.Common.Android.JavaClass(\"tj.APP.ExApi\");\r\n                    APP.ExApi = ExApi;\r\n                })(APP = Extern.APP || (Extern.APP = {}));\r\n            })(Extern = Android.Extern || (Android.Extern = {}));\r\n        })(Android = Platform.Android || (Platform.Android = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var Android;\r\n        (function (Android) {\r\n            var Extern;\r\n            (function (Extern) {\r\n                var GSA;\r\n                (function (GSA) {\r\n                    class ExApi {\r\n                        static Debug(fn, ...ps) {\r\n                            console.log(\"call TJ.Android.GSA.ExApi.\" + fn + \" -> \" + ps);\r\n                        }\r\n                        static Event(json) {\r\n                            this.Debug(\"Event\", json);\r\n                            this.jc.CallStatic(\"Event\", new TJ.Common.String_(json));\r\n                        }\r\n                        static EventBegin(json) {\r\n                            this.Debug(\"EventBegin\", json);\r\n                            this.jc.CallStatic(\"EventBegin\", new TJ.Common.String_(json));\r\n                        }\r\n                        static EventEnd(json) {\r\n                            this.Debug(\"EventEnd\", json);\r\n                            this.jc.CallStatic(\"EventEnd\", new TJ.Common.String_(json));\r\n                        }\r\n                        static PageBegin(json) {\r\n                            this.Debug(\"PageBegin\", json);\r\n                            this.jc.CallStatic(\"PageBegin\", new TJ.Common.String_(json));\r\n                        }\r\n                        static PageEnd(json) {\r\n                            this.Debug(\"PageEnd\", json);\r\n                            this.jc.CallStatic(\"PageEnd\", new TJ.Common.String_(json));\r\n                        }\r\n                        static LevelStart(json) {\r\n                            this.Debug(\"LevelStart\", json);\r\n                            this.jc.CallStatic(\"LevelStart\", new TJ.Common.String_(json));\r\n                        }\r\n                        static LevelFinish(json) {\r\n                            this.Debug(\"LevelFinish\", json);\r\n                            this.jc.CallStatic(\"LevelFinish\", new TJ.Common.String_(json));\r\n                        }\r\n                        static LevelFail(json) {\r\n                            this.Debug(\"LevelFail\", json);\r\n                            this.jc.CallStatic(\"LevelFail\", new TJ.Common.String_(json));\r\n                        }\r\n                        static Pay(json) {\r\n                            this.Debug(\"Pay\", json);\r\n                            this.jc.CallStatic(\"Pay\", new TJ.Common.String_(json));\r\n                        }\r\n                        static Buy(json) {\r\n                            this.Debug(\"Buy\", json);\r\n                            this.jc.CallStatic(\"Buy\", new TJ.Common.String_(json));\r\n                        }\r\n                        static Use(json) {\r\n                            this.Debug(\"Use\", json);\r\n                            this.jc.CallStatic(\"Use\", new TJ.Common.String_(json));\r\n                        }\r\n                        static Bonus(json) {\r\n                            this.Debug(\"Bonus\", json);\r\n                            this.jc.CallStatic(\"Bonus\", new TJ.Common.String_(json));\r\n                        }\r\n                    }\r\n                    ExApi.jc = new TJ.Common.Android.JavaClass(\"tj.GSA.ExApi\");\r\n                    GSA.ExApi = ExApi;\r\n                })(GSA = Extern.GSA || (Extern.GSA = {}));\r\n            })(Extern = Android.Extern || (Android.Extern = {}));\r\n        })(Android = Platform.Android || (Platform.Android = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var Android;\r\n        (function (Android) {\r\n            var Extern;\r\n            (function (Extern) {\r\n                var IAP;\r\n                (function (IAP) {\r\n                    class ExApi {\r\n                        static Debug(fn, ...ps) {\r\n                            console.log(\"call TJ.Android.IAP.ExApi.\" + fn + \" -> \" + ps);\r\n                        }\r\n                        static Purchase(json) {\r\n                            this.Debug(\"Purchase\", json);\r\n                            this.jc.CallStatic(\"Purchase\", new TJ.Common.String_(json));\r\n                        }\r\n                        static QueryAll(json) {\r\n                            this.Debug(\"QueryAll\", json);\r\n                            this.jc.CallStatic(\"QueryAll\", new TJ.Common.String_(json));\r\n                        }\r\n                        static Consume(json) {\r\n                            this.Debug(\"Consume\", json);\r\n                            this.jc.CallStatic(\"Consume\", new TJ.Common.String_(json));\r\n                        }\r\n                        static Exist() {\r\n                            this.Debug(\"Exist\");\r\n                            return this.jc.CallStatic(TJ.Common.Bool_, \"Exist\").value;\r\n                        }\r\n                    }\r\n                    ExApi.jc = new TJ.Common.Android.JavaClass(\"tj.IAP.ExApi\");\r\n                    IAP.ExApi = ExApi;\r\n                })(IAP = Extern.IAP || (Extern.IAP = {}));\r\n            })(Extern = Android.Extern || (Android.Extern = {}));\r\n        })(Android = Platform.Android || (Platform.Android = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var Android;\r\n        (function (Android) {\r\n            var Extern;\r\n            (function (Extern) {\r\n                var oppo;\r\n                (function (oppo) {\r\n                    var mobad;\r\n                    (function (mobad) {\r\n                        class Act {\r\n                            static Debug(fn, ...ps) {\r\n                                console.log(\"call TJ.Platform.Android.Extern.oppo.mobad.\" + fn + \" -> \" + ps);\r\n                            }\r\n                            static GetNativeCustom() {\r\n                                this.Debug(\"GetNativeCustom\");\r\n                                return this.jc.CallStatic(TJ.Common.String_, \"GetNativeCustom\").value;\r\n                            }\r\n                            static ShowNativeCustom(guid) {\r\n                                this.Debug(\"ShowNativeCustom\", guid);\r\n                                this.jc.CallStatic(\"ShowNativeCustom\", new TJ.Common.String_(guid));\r\n                            }\r\n                            static ClickNativeCustom(guid) {\r\n                                this.Debug(\"ClickNativeCustom\", guid);\r\n                                this.jc.CallStatic(\"ClickNativeCustom\", new TJ.Common.String_(guid));\r\n                            }\r\n                        }\r\n                        Act.jc = new TJ.Common.Android.JavaClass(\"tj.sdk.oppo.mobad.Act\");\r\n                        mobad.Act = Act;\r\n                    })(mobad = oppo.mobad || (oppo.mobad = {}));\r\n                })(oppo = Extern.oppo || (Extern.oppo = {}));\r\n            })(Extern = Android.Extern || (Android.Extern = {}));\r\n        })(Android = Platform.Android || (Platform.Android = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var Android;\r\n        (function (Android) {\r\n            var Extern;\r\n            (function (Extern) {\r\n                var Tools;\r\n                (function (Tools) {\r\n                    class App {\r\n                        static Debug(fn, ...ps) {\r\n                            console.log(\"call TJ.Android.Tools.App.\" + fn + \" -> \" + ps);\r\n                        }\r\n                        static StartUri(uri, pkg) {\r\n                            this.Debug(\"StartUri\", uri, pkg);\r\n                            this.jc.CallStatic(\"StartUri\", new TJ.Common.String_(uri), new TJ.Common.String_(pkg));\r\n                        }\r\n                    }\r\n                    App.jc = new TJ.Common.Android.JavaClass(\"tj.tools.App\");\r\n                    Tools.App = App;\r\n                })(Tools = Extern.Tools || (Extern.Tools = {}));\r\n            })(Extern = Android.Extern || (Android.Extern = {}));\r\n        })(Android = Platform.Android || (Platform.Android = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var Android;\r\n        (function (Android) {\r\n            var SDK;\r\n            (function (SDK) {\r\n                var AdService;\r\n                (function (AdService) {\r\n                    TJ.Common.PriorityInit.Add(0, () => {\r\n                        switch (TJ.Engine.RuntimeInfo.platform) {\r\n                            case TJ.Define.Platform.Android:\r\n                                TJ.Common.Component.Manager.AddComponent(OAdService).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    class OAdService extends TJ.API.AdService.IAdService {\r\n                        ShowBanner(param) {\r\n                            Android.Extern.ADS.ExApi.ShowBanner(param.ToJson());\r\n                        }\r\n                        RemoveBanner(param) {\r\n                            Android.Extern.ADS.ExApi.RemoveBanner(param.ToJson());\r\n                        }\r\n                        NormalReady(param) {\r\n                            return Android.Extern.ADS.ExApi.NormalReady(param.ToJson());\r\n                        }\r\n                        ShowNormal(param) {\r\n                            Android.Extern.ADS.ExApi.ShowNormal(param.ToJson());\r\n                        }\r\n                        RewardReady(param) {\r\n                            return Android.Extern.ADS.ExApi.RewardReady(param.ToJson());\r\n                        }\r\n                        ShowReward(param) {\r\n                            Android.Extern.ADS.ExApi.ShowReward(param.ToJson());\r\n                        }\r\n                        Exist() {\r\n                            return Android.Extern.ADS.ExApi.Exist();\r\n                        }\r\n                    }\r\n                })(AdService = SDK.AdService || (SDK.AdService = {}));\r\n            })(SDK = Android.SDK || (Android.SDK = {}));\r\n        })(Android = Platform.Android || (Platform.Android = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var Android;\r\n        (function (Android) {\r\n            var SDK;\r\n            (function (SDK) {\r\n                var Analytics;\r\n                (function (Analytics) {\r\n                    TJ.Common.PriorityInit.Add(0, () => {\r\n                        switch (TJ.Engine.RuntimeInfo.platform) {\r\n                            case TJ.Define.Platform.Android:\r\n                                TJ.Common.Component.Manager.AddComponent(OAnalytics).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    class OAnalytics extends TJ.API.Analytics.IAnalytics {\r\n                        Event(param) {\r\n                            Android.Extern.GSA.ExApi.Event(param.ToJson());\r\n                        }\r\n                        EventBegin(param) {\r\n                            Android.Extern.GSA.ExApi.EventBegin(param.ToJson());\r\n                        }\r\n                        EventEnd(param) {\r\n                            Android.Extern.GSA.ExApi.EventEnd(param.ToJson());\r\n                        }\r\n                        PageBegin(param) {\r\n                            Android.Extern.GSA.ExApi.PageBegin(param.ToJson());\r\n                        }\r\n                        PageEnd(param) {\r\n                            Android.Extern.GSA.ExApi.PageEnd(param.ToJson());\r\n                        }\r\n                        LevelStart(param) {\r\n                            Android.Extern.GSA.ExApi.LevelStart(param.ToJson());\r\n                        }\r\n                        LevelFinish(param) {\r\n                            Android.Extern.GSA.ExApi.LevelFinish(param.ToJson());\r\n                        }\r\n                        LevelFail(param) {\r\n                            Android.Extern.GSA.ExApi.LevelFail(param.ToJson());\r\n                        }\r\n                        Pay(param) {\r\n                            Android.Extern.GSA.ExApi.Pay(param.ToJson());\r\n                        }\r\n                        Buy(param) {\r\n                            Android.Extern.GSA.ExApi.Buy(param.ToJson());\r\n                        }\r\n                        Use(param) {\r\n                            Android.Extern.GSA.ExApi.Use(param.ToJson());\r\n                        }\r\n                        Bonus(param) {\r\n                            Android.Extern.GSA.ExApi.Bonus(param.ToJson());\r\n                        }\r\n                    }\r\n                })(Analytics = SDK.Analytics || (SDK.Analytics = {}));\r\n            })(SDK = Android.SDK || (Android.SDK = {}));\r\n        })(Android = Platform.Android || (Platform.Android = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var Android;\r\n        (function (Android) {\r\n            var SDK;\r\n            (function (SDK) {\r\n                var AppCtl;\r\n                (function (AppCtl) {\r\n                    TJ.Common.PriorityInit.Add(0, () => {\r\n                        switch (TJ.Engine.RuntimeInfo.platform) {\r\n                            case TJ.Define.Platform.Android:\r\n                                TJ.Common.Component.Manager.AddComponent(OAppCtl).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    class OAppCtl extends TJ.API.AppCtl.IAppCtl {\r\n                        UserAgreement() {\r\n                            Android.Extern.APP.ExApi.UserAgreement();\r\n                        }\r\n                        PrivacyPolicy() {\r\n                            Android.Extern.APP.ExApi.PrivacyPolicy();\r\n                        }\r\n                        Review() {\r\n                            let market = null;\r\n                            switch (Android.Extern.APP.ExApi.Channel()) {\r\n                                case TJ.Define.Channel.Android.GooglePlay:\r\n                                    market = \"com.android.vending\";\r\n                                    break;\r\n                                case TJ.Define.Channel.Android.oppo:\r\n                                    market = \"com.oppo.market\";\r\n                                    break;\r\n                                case TJ.Define.Channel.Android.huawei:\r\n                                    market = \"com.huawei.appmarket\";\r\n                                    break;\r\n                                case TJ.Define.Channel.Android.vivo:\r\n                                    market = \"com.bbk.appstore\";\r\n                                    break;\r\n                                case TJ.Define.Channel.Android.meizu:\r\n                                    market = \"com.meizu.flyme.gamecenter\";\r\n                                    break;\r\n                                case TJ.Define.Channel.Android.jinli:\r\n                                    market = \"com.gionee.aora.market\";\r\n                                    break;\r\n                                case TJ.Define.Channel.Android.lenovo:\r\n                                    market = \"com.lenovo.leos.appstore\";\r\n                                    break;\r\n                                case TJ.Define.Channel.Android.coolpad:\r\n                                    market = \"com.yulong.android.coolmart\";\r\n                                    break;\r\n                                case TJ.Define.Channel.Android.yyb:\r\n                                    market = \"com.tencent.android.qqdownloader\";\r\n                                    break;\r\n                                case TJ.Define.Channel.Android.qihoo:\r\n                                    market = \"com.qihoo.appstore\";\r\n                                    break;\r\n                                case TJ.Define.Channel.Android.xiaomi:\r\n                                    market = \"com.xiaomi.market\";\r\n                                    break;\r\n                                case \"xiaomiGame\":\r\n                                    market = \"com.xiaomi.gamecenter\";\r\n                                    break;\r\n                                case TJ.Define.Channel.Android._4399:\r\n                                case TJ.Define.Channel.Android._43992:\r\n                                    market = \"com.m4399.gamecenter\";\r\n                                    break;\r\n                                case TJ.Define.Channel.Android.jiuyou:\r\n                                    market = \"cn.ninegame.gamemanager\";\r\n                                    break;\r\n                                case TJ.Define.Channel.Android.baidu:\r\n                                case TJ.Define.Channel.Android.baidu2:\r\n                                    market = \"com.baidu.appsearch\";\r\n                                    break;\r\n                                case TJ.Define.Channel.Android.nby:\r\n                                    market = \"cn.nubia.neostore\";\r\n                                    break;\r\n                                case TJ.Define.Channel.Android.samsung:\r\n                                    market = \"com.sec.android.app.samsungapps\";\r\n                                    break;\r\n                                case TJ.Define.Channel.Android.taptap:\r\n                                    market = \"com.taptap\";\r\n                                    break;\r\n                                case TJ.Define.Channel.Android.haoyou:\r\n                                    market = \"com.xmcy.hykb\";\r\n                                    break;\r\n                                case TJ.Define.Channel.Android.xiaoqi:\r\n                                    market = \"com.smwl.x7center\";\r\n                                    break;\r\n                                case \"youyi\":\r\n                                    market = \"com.eoemobile.netmarket\";\r\n                                    break;\r\n                                case \"sougou\":\r\n                                    market = \"com.sogou.androidtool\";\r\n                                    break;\r\n                                case \"anzhi\":\r\n                                    market = \"cn.goapk.market\";\r\n                                    break;\r\n                                case \"ppzs\":\r\n                                    market = \"com.pp.assistant\";\r\n                                    break;\r\n                                case \"mmy\":\r\n                                    market = \"com.mumayi.market.ui\";\r\n                                    break;\r\n                                case \"dangle\":\r\n                                    market = \"com.diguayouxi\";\r\n                                    break;\r\n                                case \"cczs\":\r\n                                    market = \"com.lion.market\";\r\n                                    break;\r\n                                case \"guopan\":\r\n                                    market = \"com.flamingo.gpgame\";\r\n                                    break;\r\n                                case TJ.Define.Channel.Android.yyh:\r\n                                    market = \"com.yingyonghui.market\";\r\n                                    break;\r\n                                case \"mzw\":\r\n                                    market = \"com.muzhiwan.market\";\r\n                                    break;\r\n                                case \"tongbu\":\r\n                                    market = \"com.tongbu.tui\";\r\n                                    break;\r\n                                case \"yiwan\":\r\n                                    market = \"com.cw.ywsyzx\";\r\n                                    break;\r\n                                case TJ.Define.Channel.Android.zhongxing:\r\n                                    market = \"zte.com.market\";\r\n                                    break;\r\n                            }\r\n                            if (market != null) {\r\n                                Android.Extern.Tools.App.StartUri(TJ.Common.String_.Format(\"market://details?id={0}\", Android.Extern.APP.ExApi.PackageName()), market);\r\n                            }\r\n                        }\r\n                        Quit() {\r\n                            Android.Extern.APP.ExApi.Quit();\r\n                        }\r\n                    }\r\n                })(AppCtl = SDK.AppCtl || (SDK.AppCtl = {}));\r\n            })(SDK = Android.SDK || (Android.SDK = {}));\r\n        })(Android = Platform.Android || (Platform.Android = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var Android;\r\n        (function (Android) {\r\n            var SDK;\r\n            (function (SDK) {\r\n                var AppInfo;\r\n                (function (AppInfo) {\r\n                    TJ.Common.PriorityInit.Add(0, () => {\r\n                        switch (TJ.Engine.RuntimeInfo.platform) {\r\n                            case TJ.Define.Platform.Android:\r\n                                TJ.Common.Component.Manager.AddComponent(OAppInfo).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    class OAppInfo extends TJ.API.AppInfo.IAppInfo {\r\n                        AppGuid() {\r\n                            return Android.Extern.APP.Api.AppGuid();\r\n                        }\r\n                        ProductName() {\r\n                            return Android.Extern.APP.ExApi.ProductName();\r\n                        }\r\n                        PackageName() {\r\n                            return Android.Extern.APP.ExApi.PackageName();\r\n                        }\r\n                        VersionName() {\r\n                            return Android.Extern.APP.ExApi.VersionName();\r\n                        }\r\n                        VersionCode() {\r\n                            return Android.Extern.APP.ExApi.VersionCode();\r\n                        }\r\n                        Channel() {\r\n                            return Android.Extern.APP.ExApi.Channel();\r\n                        }\r\n                    }\r\n                })(AppInfo = SDK.AppInfo || (SDK.AppInfo = {}));\r\n            })(SDK = Android.SDK || (Android.SDK = {}));\r\n        })(Android = Platform.Android || (Platform.Android = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var Android;\r\n        (function (Android) {\r\n            var SDK;\r\n            (function (SDK) {\r\n                var Billing;\r\n                (function (Billing) {\r\n                    TJ.Common.PriorityInit.Add(0, () => {\r\n                        switch (TJ.Engine.RuntimeInfo.platform) {\r\n                            case TJ.Define.Platform.Android:\r\n                                TJ.Common.Component.Manager.AddComponent(OBilling).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    class OBilling extends TJ.API.Billing.IBilling {\r\n                        Purchase(param) {\r\n                            Android.Extern.IAP.ExApi.Purchase(param.ToJson());\r\n                        }\r\n                        QueryAll(param) {\r\n                            let cbi = param.cbi.Clone();\r\n                            param.cbi.Set(TJ.Define.Event.Complete, (json) => {\r\n                                let list = [];\r\n                                for (let item of JSON.parse(json)) {\r\n                                    let p = new TJ.API.Billing.Param();\r\n                                    p.product = item.product;\r\n                                    p.order.id = item.order.id;\r\n                                    p.order.date = new Date(Number.parseInt(item.order.date));\r\n                                    list.push(p);\r\n                                }\r\n                                cbi.Run(TJ.Define.Event.Complete, list);\r\n                            });\r\n                            Android.Extern.IAP.ExApi.QueryAll(param.ToJson());\r\n                        }\r\n                        Consume(param) {\r\n                            Android.Extern.IAP.ExApi.Consume(param.ToJson());\r\n                        }\r\n                        Exist() {\r\n                            return Android.Extern.IAP.ExApi.Exist();\r\n                        }\r\n                    }\r\n                })(Billing = SDK.Billing || (SDK.Billing = {}));\r\n            })(SDK = Android.SDK || (Android.SDK = {}));\r\n        })(Android = Platform.Android || (Platform.Android = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var Android;\r\n        (function (Android) {\r\n            var SDK;\r\n            (function (SDK) {\r\n                var oppo;\r\n                (function (oppo) {\r\n                    var mobad;\r\n                    (function (mobad) {\r\n                        TJ.Common.PriorityInit.Add(0, () => {\r\n                            if (TJ.Engine.RuntimeInfo.platform != TJ.Define.Platform.Android)\r\n                                return;\r\n                            switch (TJ.API.AppInfo.Channel()) {\r\n                                case TJ.Define.Channel.Android.oppo:\r\n                                    TJ.Common.Component.Manager.AddComponent(NativeAd).DoInit();\r\n                                    break;\r\n                            }\r\n                        });\r\n                        class NativeAd extends TJ.API.AdService.IAdService {\r\n                            OnInit() {\r\n                            }\r\n                            LoadNative(param) {\r\n                                let json = Android.Extern.oppo.mobad.Act.GetNativeCustom();\r\n                                console.log(\"native json = \" + json);\r\n                                if (!TJ.Common.String_.IsNullOrEmpty(json)) {\r\n                                    let item = new TJ.API.AdService.NativeItem();\r\n                                    let data = JSON.parse(json);\r\n                                    item.OnShow = () => {\r\n                                        Android.Extern.oppo.mobad.Act.ShowNativeCustom(data.guid);\r\n                                    };\r\n                                    item.OnClick = () => {\r\n                                        Android.Extern.oppo.mobad.Act.ClickNativeCustom(data.guid);\r\n                                    };\r\n                                    item.title = data.title;\r\n                                    item.desc = data.desc;\r\n                                    item.logoUrl = data.logoUrl;\r\n                                    item.iconUrl = data.iconUrl;\r\n                                    item.imgUrl = data.imgUrl;\r\n                                    return item;\r\n                                }\r\n                                return null;\r\n                            }\r\n                        }\r\n                    })(mobad = oppo.mobad || (oppo.mobad = {}));\r\n                })(oppo = SDK.oppo || (SDK.oppo = {}));\r\n            })(SDK = Android.SDK || (Android.SDK = {}));\r\n        })(Android = Platform.Android || (Platform.Android = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var Android;\r\n        (function (Android) {\r\n            var SDK;\r\n            (function (SDK) {\r\n                var Promo;\r\n                (function (Promo) {\r\n                    TJ.Common.PriorityInit.Add(0, () => {\r\n                        switch (TJ.Engine.RuntimeInfo.platform) {\r\n                            case TJ.Define.Platform.Android:\r\n                                TJ.Common.Component.Manager.AddComponent(OPromo).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    class OPromo extends TJ.API.Promo.IPromo {\r\n                        Pop(param) {\r\n                            Android.Extern.Tools.App.StartUri(param.uri, param.storePackage);\r\n                        }\r\n                    }\r\n                })(Promo = SDK.Promo || (SDK.Promo = {}));\r\n            })(SDK = Android.SDK || (Android.SDK = {}));\r\n        })(Android = Platform.Android || (Platform.Android = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var Android;\r\n        (function (Android) {\r\n            var SDK;\r\n            (function (SDK) {\r\n                var Vibrate;\r\n                (function (Vibrate) {\r\n                    TJ.Common.PriorityInit.Add(0, () => {\r\n                        switch (TJ.Engine.RuntimeInfo.platform) {\r\n                            case TJ.Define.Platform.Android:\r\n                                TJ.Common.Component.Manager.AddComponent(OVibrate).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    class OVibrate extends TJ.API.Vibrate.IVibrate {\r\n                        OnInit() {\r\n                            let jc = new TJ.Common.Android.JavaClass(\"tj.application.main\");\r\n                            let app = jc.CallStatic(TJ.Common.Android.JavaObject, \"GetIns\");\r\n                            this.jo = app.Call(TJ.Common.Android.JavaObject, \"getSystemService\", new TJ.Common.String_(\"vibrator\"));\r\n                        }\r\n                        Short() {\r\n                            this.Time(0.02);\r\n                        }\r\n                        Long() {\r\n                            this.Time(0.4);\r\n                        }\r\n                        Time(seconds) {\r\n                            this.jo.Call(\"vibrate\", new TJ.Common.Long_(seconds * 1000));\r\n                        }\r\n                    }\r\n                })(Vibrate = SDK.Vibrate || (SDK.Vibrate = {}));\r\n            })(SDK = Android.SDK || (Android.SDK = {}));\r\n        })(Android = Platform.Android || (Platform.Android = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var Extern;\r\n            (function (Extern) {\r\n                var _4399;\r\n                (function (_4399) {\r\n                    function Exist() {\r\n                        return typeof h5api != 'undefined';\r\n                    }\r\n                    _4399.Exist = Exist;\r\n                    class CanPlayAdResult {\r\n                    }\r\n                    class PlayAdResult {\r\n                    }\r\n                    function CanPlayAd(callback) {\r\n                        h5api.canPlayAd(callback);\r\n                    }\r\n                    _4399.CanPlayAd = CanPlayAd;\r\n                    function PlayAd(callback) {\r\n                        h5api.playAd(callback);\r\n                    }\r\n                    _4399.PlayAd = PlayAd;\r\n                })(_4399 = Extern._4399 || (Extern._4399 = {}));\r\n            })(Extern = AppRt.Extern || (AppRt.Extern = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var Extern;\r\n            (function (Extern) {\r\n                var Adwending;\r\n                (function (Adwending) {\r\n                    function Exist() {\r\n                        return typeof window.parent != 'undefined';\r\n                    }\r\n                    Adwending.Exist = Exist;\r\n                    class Parm {\r\n                    }\r\n                    Adwending.Parm = Parm;\r\n                    function PlayVideo(parm) {\r\n                        window.parent.postMessage({ cmd: \"playvideo\", data: parm }, '*');\r\n                    }\r\n                    Adwending.PlayVideo = PlayVideo;\r\n                    function Message(callback) {\r\n                        window.addEventListener('message', (e) => {\r\n                            if (callback != null)\r\n                                callback(e.data);\r\n                        });\r\n                    }\r\n                    Adwending.Message = Message;\r\n                    function GameOut(parm) {\r\n                        window.parent.postMessage({ cmd: \"gameout\", data: parm }, '*');\r\n                    }\r\n                    Adwending.GameOut = GameOut;\r\n                    function GameInto(parm) {\r\n                        window.parent.postMessage({ cmd: \"gameinto\", data: parm }, '*');\r\n                    }\r\n                    Adwending.GameInto = GameInto;\r\n                    function GameStart(parm) {\r\n                        window.parent.postMessage({ cmd: \"gamestart\", data: parm }, '*');\r\n                    }\r\n                    Adwending.GameStart = GameStart;\r\n                    function GameOver(parm) {\r\n                        window.parent.postMessage({ cmd: \"gameover\", data: parm }, '*');\r\n                    }\r\n                    Adwending.GameOver = GameOver;\r\n                })(Adwending = Extern.Adwending || (Extern.Adwending = {}));\r\n            })(Extern = AppRt.Extern || (AppRt.Extern = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var Extern;\r\n            (function (Extern) {\r\n                var HBS;\r\n                (function (HBS) {\r\n                    function Exist() {\r\n                        return typeof hbs != 'undefined';\r\n                    }\r\n                    HBS.Exist = Exist;\r\n                    class CallbackParam {\r\n                    }\r\n                    HBS.CallbackParam = CallbackParam;\r\n                    class LoginSuccessResult {\r\n                    }\r\n                    HBS.LoginSuccessResult = LoginSuccessResult;\r\n                    class LoginParam extends CallbackParam {\r\n                    }\r\n                    HBS.LoginParam = LoginParam;\r\n                    function GameLogin(param) {\r\n                        hbs.gameLogin(param);\r\n                    }\r\n                    HBS.GameLogin = GameLogin;\r\n                    function ExitApplication(param) {\r\n                        hbs.exitApplication(param);\r\n                    }\r\n                    HBS.ExitApplication = ExitApplication;\r\n                    class LaunchOption {\r\n                    }\r\n                    function GetLaunchOptionsSync() {\r\n                        return hbs.getLaunchOptionsSync();\r\n                    }\r\n                    HBS.GetLaunchOptionsSync = GetLaunchOptionsSync;\r\n                })(HBS = Extern.HBS || (Extern.HBS = {}));\r\n            })(Extern = AppRt.Extern || (AppRt.Extern = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var Extern;\r\n            (function (Extern) {\r\n                var OPPO;\r\n                (function (OPPO) {\r\n                    var QG;\r\n                    (function (QG) {\r\n                        function Exist() {\r\n                            return typeof qg != 'undefined';\r\n                        }\r\n                        QG.Exist = Exist;\r\n                        class CallbackResult {\r\n                        }\r\n                        QG.CallbackResult = CallbackResult;\r\n                        class CallbackParam {\r\n                        }\r\n                        QG.CallbackParam = CallbackParam;\r\n                    })(QG = OPPO.QG || (OPPO.QG = {}));\r\n                })(OPPO = Extern.OPPO || (Extern.OPPO = {}));\r\n            })(Extern = AppRt.Extern || (AppRt.Extern = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var Extern;\r\n            (function (Extern) {\r\n                var OPPO;\r\n                (function (OPPO) {\r\n                    var QG;\r\n                    (function (QG) {\r\n                        class InitAdServiceParam extends QG.CallbackParam {\r\n                            constructor() {\r\n                                super(...arguments);\r\n                                this.isDebug = false;\r\n                            }\r\n                        }\r\n                        QG.InitAdServiceParam = InitAdServiceParam;\r\n                        function InitAdService(param) {\r\n                            qg.initAdService(param);\r\n                        }\r\n                        QG.InitAdService = InitAdService;\r\n                        class BannerAd {\r\n                            constructor(obj) {\r\n                                this.bannerAd = obj;\r\n                            }\r\n                            Show() {\r\n                                this.bannerAd.show();\r\n                            }\r\n                            Hide() {\r\n                                this.bannerAd.hide();\r\n                            }\r\n                            OnShow(callback) {\r\n                                this.bannerAd.onShow(callback);\r\n                            }\r\n                            OffShow(callback) {\r\n                                this.bannerAd.offShow(callback);\r\n                            }\r\n                            OnHide(callback) {\r\n                                this.bannerAd.onHide(callback);\r\n                            }\r\n                            OffHide(callback) {\r\n                                this.bannerAd.offHide(callback);\r\n                            }\r\n                            OnError(callback) {\r\n                                this.bannerAd.onError(callback);\r\n                            }\r\n                            OffError(callback) {\r\n                                this.bannerAd.offError(callback);\r\n                            }\r\n                            OnResize(callback) {\r\n                                this.bannerAd.onResize(callback);\r\n                            }\r\n                            OffResize() {\r\n                                this.bannerAd.offResize();\r\n                            }\r\n                            Destroy() {\r\n                                this.bannerAd.destroy();\r\n                            }\r\n                        }\r\n                        QG.BannerAd = BannerAd;\r\n                        function CreateBannerAd(posId) {\r\n                            let param = {};\r\n                            param.posId = posId;\r\n                            let obj = qg.createBannerAd(param);\r\n                            return new BannerAd(obj);\r\n                        }\r\n                        QG.CreateBannerAd = CreateBannerAd;\r\n                        class InsertAd {\r\n                            constructor(obj) {\r\n                                this.insertAd = obj;\r\n                            }\r\n                            Load() {\r\n                                this.insertAd.load();\r\n                            }\r\n                            Show() {\r\n                                this.insertAd.show();\r\n                            }\r\n                            OnLoad(callback) {\r\n                                this.insertAd.onLoad(callback);\r\n                            }\r\n                            OffLoad() {\r\n                                this.insertAd.offLoad();\r\n                            }\r\n                            OnShow(callback) {\r\n                                this.insertAd.onShow(callback);\r\n                            }\r\n                            OffShow() {\r\n                                this.insertAd.offShow();\r\n                            }\r\n                            OnError(callback) {\r\n                                this.insertAd.onError(callback);\r\n                            }\r\n                            OffError() {\r\n                                this.insertAd.offError();\r\n                            }\r\n                            Destroy() {\r\n                                this.insertAd.destroy();\r\n                            }\r\n                        }\r\n                        QG.InsertAd = InsertAd;\r\n                        function CreateInsertAd(posId) {\r\n                            let param = {};\r\n                            param.posId = posId;\r\n                            let obj = qg.createInsertAd(param);\r\n                            return new InsertAd(obj);\r\n                        }\r\n                        QG.CreateInsertAd = CreateInsertAd;\r\n                        class RewardedVideoAdCloseResult extends QG.CallbackResult {\r\n                        }\r\n                        class RewardedVideoAd {\r\n                            constructor(obj) {\r\n                                this.videoAd = obj;\r\n                            }\r\n                            Load() {\r\n                                this.videoAd.load();\r\n                            }\r\n                            Show() {\r\n                                this.videoAd.show();\r\n                            }\r\n                            OnLoad(callback) {\r\n                                this.videoAd.onLoad(callback);\r\n                            }\r\n                            OffLoad() {\r\n                                this.videoAd.offLoad();\r\n                            }\r\n                            OnVideoStart(callback) {\r\n                                this.videoAd.onVideoStart(callback);\r\n                            }\r\n                            OffVideoStart() {\r\n                                this.videoAd.offVideoStart();\r\n                            }\r\n                            OnRewarded(callback) {\r\n                                this.videoAd.onRewarded(callback);\r\n                            }\r\n                            OffRewarded() {\r\n                                this.videoAd.offRewarded();\r\n                            }\r\n                            OnClose(callback) {\r\n                                this.videoAd.onClose(callback);\r\n                            }\r\n                            OffClose() {\r\n                                this.videoAd.offClose();\r\n                            }\r\n                            OnError(callback) {\r\n                                this.videoAd.onError(callback);\r\n                            }\r\n                            OffError() {\r\n                                this.videoAd.offError();\r\n                            }\r\n                            Destroy() {\r\n                                this.videoAd.destroy();\r\n                            }\r\n                        }\r\n                        QG.RewardedVideoAd = RewardedVideoAd;\r\n                        function CreateRewardedVideoAd(posId) {\r\n                            let param = {};\r\n                            param.posId = posId;\r\n                            let obj = qg.createRewardedVideoAd(param);\r\n                            return new RewardedVideoAd(obj);\r\n                        }\r\n                        QG.CreateRewardedVideoAd = CreateRewardedVideoAd;\r\n                        class NativeAdData {\r\n                        }\r\n                        QG.NativeAdData = NativeAdData;\r\n                        class NativeAd {\r\n                            constructor(obj) {\r\n                                this.nativeAd = obj;\r\n                            }\r\n                            Load() {\r\n                                this.nativeAd.load();\r\n                            }\r\n                            ReportAdShow(adId) {\r\n                                let obj = {};\r\n                                obj.adId = adId;\r\n                                this.nativeAd.reportAdShow(obj);\r\n                            }\r\n                            ReportAdClick(adId) {\r\n                                let obj = {};\r\n                                obj.adId = adId;\r\n                                this.nativeAd.reportAdClick(obj);\r\n                            }\r\n                            OnLoad(callback) {\r\n                                this.nativeAd.onLoad(callback);\r\n                            }\r\n                            OffLoad() {\r\n                                this.nativeAd.offLoad();\r\n                            }\r\n                            OnError(callback) {\r\n                                this.nativeAd.onError(callback);\r\n                            }\r\n                            OffError() {\r\n                                this.nativeAd.offError();\r\n                            }\r\n                            Destroy() {\r\n                                this.nativeAd.destroy();\r\n                            }\r\n                        }\r\n                        QG.NativeAd = NativeAd;\r\n                        function CreateNativeAd(posId) {\r\n                            let param = {};\r\n                            param.posId = posId;\r\n                            let obj = qg.createNativeAd(param);\r\n                            return new NativeAd(obj);\r\n                        }\r\n                        QG.CreateNativeAd = CreateNativeAd;\r\n                    })(QG = OPPO.QG || (OPPO.QG = {}));\r\n                })(OPPO = Extern.OPPO || (Extern.OPPO = {}));\r\n            })(Extern = AppRt.Extern || (AppRt.Extern = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var Extern;\r\n            (function (Extern) {\r\n                var OPPO;\r\n                (function (OPPO) {\r\n                    var QG;\r\n                    (function (QG) {\r\n                        function InstallShortcut(param) {\r\n                            qg.installShortcut(param);\r\n                        }\r\n                        QG.InstallShortcut = InstallShortcut;\r\n                        class HasShortcutInstalledParam {\r\n                        }\r\n                        QG.HasShortcutInstalledParam = HasShortcutInstalledParam;\r\n                        function HasShortcutInstalled(param) {\r\n                            qg.hasShortcutInstalled(param);\r\n                        }\r\n                        QG.HasShortcutInstalled = HasShortcutInstalled;\r\n                    })(QG = OPPO.QG || (OPPO.QG = {}));\r\n                })(OPPO = Extern.OPPO || (Extern.OPPO = {}));\r\n            })(Extern = AppRt.Extern || (AppRt.Extern = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var Extern;\r\n            (function (Extern) {\r\n                var OPPO;\r\n                (function (OPPO) {\r\n                    var QG;\r\n                    (function (QG) {\r\n                        class NavigateToMiniGameParam extends QG.CallbackParam {\r\n                        }\r\n                        QG.NavigateToMiniGameParam = NavigateToMiniGameParam;\r\n                        function NavigateToMiniGame(param) {\r\n                            qg.navigateToMiniGame(param);\r\n                        }\r\n                        QG.NavigateToMiniGame = NavigateToMiniGame;\r\n                    })(QG = OPPO.QG || (OPPO.QG = {}));\r\n                })(OPPO = Extern.OPPO || (Extern.OPPO = {}));\r\n            })(Extern = AppRt.Extern || (AppRt.Extern = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var Extern;\r\n            (function (Extern) {\r\n                let OPPO;\r\n                (function (OPPO) {\r\n                    let QG;\r\n                    (function (QG) {\r\n                        class LoginResultData {\r\n                        }\r\n                        QG.LoginResultData = LoginResultData;\r\n                        class LoginResult extends QG.CallbackResult {\r\n                        }\r\n                        class LoginParam extends QG.CallbackParam {\r\n                        }\r\n                        QG.LoginParam = LoginParam;\r\n                        function Login(param) {\r\n                            qg.login(param);\r\n                        }\r\n                        QG.Login = Login;\r\n                        function SetLoadingProgress(progress) {\r\n                            let obj = {};\r\n                            obj.progress = progress;\r\n                            qg.setLoadingProgress(obj);\r\n                        }\r\n                        QG.SetLoadingProgress = SetLoadingProgress;\r\n                        function LoadingComplete(param) {\r\n                            qg.loadingComplete(param);\r\n                        }\r\n                        QG.LoadingComplete = LoadingComplete;\r\n                        class ReferrerInfo {\r\n                        }\r\n                        class LaunchOption {\r\n                        }\r\n                        function GetLaunchOptionsSync() {\r\n                            return qg.getLaunchOptionsSync();\r\n                        }\r\n                        QG.GetLaunchOptionsSync = GetLaunchOptionsSync;\r\n                        function VibrateShort(parm) {\r\n                            qg.vibrateShort(parm);\r\n                        }\r\n                        QG.VibrateShort = VibrateShort;\r\n                        function VibrateLong(parm) {\r\n                            qg.vibrateLong(parm);\r\n                        }\r\n                        QG.VibrateLong = VibrateLong;\r\n                        function ReportMonitor(name, value) {\r\n                            qg.reportMonitor(name, value);\r\n                        }\r\n                        QG.ReportMonitor = ReportMonitor;\r\n                    })(QG = OPPO.QG || (OPPO.QG = {}));\r\n                })(OPPO = Extern.OPPO || (Extern.OPPO = {}));\r\n            })(Extern = AppRt.Extern || (AppRt.Extern = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var Extern;\r\n            (function (Extern) {\r\n                var QQ;\r\n                (function (QQ) {\r\n                    function Exist() {\r\n                        return typeof qq != 'undefined';\r\n                    }\r\n                    QQ.Exist = Exist;\r\n                    class CallbackResult {\r\n                    }\r\n                    class CallbackParam {\r\n                    }\r\n                    class ShowShareMenuParam extends CallbackParam {\r\n                    }\r\n                    QQ.ShowShareMenuParam = ShowShareMenuParam;\r\n                    function ShowShareMenu(param) {\r\n                        qq.showShareMenu(param);\r\n                    }\r\n                    QQ.ShowShareMenu = ShowShareMenu;\r\n                    class ShareAppMessageParam extends CallbackParam {\r\n                    }\r\n                    QQ.ShareAppMessageParam = ShareAppMessageParam;\r\n                    function ShareAppMessage(param) {\r\n                        qq.shareAppMessage(param);\r\n                    }\r\n                    QQ.ShareAppMessage = ShareAppMessage;\r\n                    function OnShareAppMessage(callback) {\r\n                        qq.onShareAppMessage(callback);\r\n                    }\r\n                    QQ.OnShareAppMessage = OnShareAppMessage;\r\n                    function OffShareAppMessage(callback) {\r\n                        qq.offShareAppMessage(callback);\r\n                    }\r\n                    QQ.OffShareAppMessage = OffShareAppMessage;\r\n                    class UpdateShareMenuParam extends CallbackParam {\r\n                    }\r\n                    QQ.UpdateShareMenuParam = UpdateShareMenuParam;\r\n                    function UpdateShareMenu(param) {\r\n                        qq.updateShareMenu(param);\r\n                    }\r\n                    QQ.UpdateShareMenu = UpdateShareMenu;\r\n                    class HideShareMenuParam extends CallbackParam {\r\n                    }\r\n                    QQ.HideShareMenuParam = HideShareMenuParam;\r\n                    function HideShareMenu(param) {\r\n                        qq.hideShareMenu(param);\r\n                    }\r\n                    QQ.HideShareMenu = HideShareMenu;\r\n                    class GetShareInfoResult extends CallbackResult {\r\n                    }\r\n                    class GetShareInfoParam extends CallbackParam {\r\n                    }\r\n                    QQ.GetShareInfoParam = GetShareInfoParam;\r\n                    function GetShareInfo(param) {\r\n                        qq.getShareInfo(param);\r\n                    }\r\n                    QQ.GetShareInfo = GetShareInfo;\r\n                    class NavigateToMiniProgramParam extends CallbackParam {\r\n                        constructor() {\r\n                            super(...arguments);\r\n                            this.envVersion = \"release\";\r\n                        }\r\n                    }\r\n                    QQ.NavigateToMiniProgramParam = NavigateToMiniProgramParam;\r\n                    function NavigateToMiniProgram(param) {\r\n                        qq.navigateToMiniProgram(param);\r\n                    }\r\n                    QQ.NavigateToMiniProgram = NavigateToMiniProgram;\r\n                    class ShowModalResultSuccess extends CallbackResult {\r\n                    }\r\n                    class ShowModalParam extends CallbackParam {\r\n                        constructor() {\r\n                            super(...arguments);\r\n                            this.showCancel = true;\r\n                            this.cancelText = \"取消\";\r\n                            this.cancelColor = \"#000000\";\r\n                            this.confirmText = \"确定\";\r\n                            this.confirmColor = \"#576B95\";\r\n                        }\r\n                    }\r\n                    QQ.ShowModalParam = ShowModalParam;\r\n                    function ShowModal(param) {\r\n                        qq.showModal(param);\r\n                    }\r\n                    QQ.ShowModal = ShowModal;\r\n                    class BannerAdStyle {\r\n                    }\r\n                    QQ.BannerAdStyle = BannerAdStyle;\r\n                    class BannerAd {\r\n                        constructor(obj) {\r\n                            this.bannerAd = obj;\r\n                        }\r\n                        get style() {\r\n                            return this.bannerAd.style;\r\n                        }\r\n                        Show() {\r\n                            return this.bannerAd.show();\r\n                        }\r\n                        Hide() {\r\n                            return this.bannerAd.hide();\r\n                        }\r\n                        OnLoad(callback) {\r\n                            this.bannerAd.onLoad(callback);\r\n                        }\r\n                        OffLoad(callback) {\r\n                            this.bannerAd.offLoad(callback);\r\n                        }\r\n                        OnError(callback) {\r\n                            this.bannerAd.onError(callback);\r\n                        }\r\n                        OffError(callback) {\r\n                            this.bannerAd.offError(callback);\r\n                        }\r\n                        OnResize(callback) {\r\n                            this.bannerAd.onResize(callback);\r\n                        }\r\n                        OffResize(callback) {\r\n                            this.bannerAd.offResize(callback);\r\n                        }\r\n                        Destroy() {\r\n                            this.bannerAd.destroy();\r\n                        }\r\n                    }\r\n                    QQ.BannerAd = BannerAd;\r\n                    function CreateBannerAd(adUnitId, style) {\r\n                        let param = {};\r\n                        param.adUnitId = adUnitId;\r\n                        param.style = style;\r\n                        let obj = qq.createBannerAd(param);\r\n                        return new BannerAd(obj);\r\n                    }\r\n                    QQ.CreateBannerAd = CreateBannerAd;\r\n                    class InterstitialAd {\r\n                        constructor(obj) {\r\n                            this.interstitialAd = obj;\r\n                        }\r\n                        Load() {\r\n                            return this.interstitialAd.load();\r\n                        }\r\n                        Show() {\r\n                            return this.interstitialAd.show();\r\n                        }\r\n                        OnLoad(callback) {\r\n                            this.interstitialAd.onLoad(callback);\r\n                        }\r\n                        OffLoad(callback) {\r\n                            this.interstitialAd.offLoad(callback);\r\n                        }\r\n                        OnClose(callback) {\r\n                            this.interstitialAd.onClose(callback);\r\n                        }\r\n                        OffClose(callback) {\r\n                            this.interstitialAd.offClose(callback);\r\n                        }\r\n                        OnError(callback) {\r\n                            this.interstitialAd.onError(callback);\r\n                        }\r\n                        OffError(callback) {\r\n                            this.interstitialAd.offError(callback);\r\n                        }\r\n                        Destroy() {\r\n                            this.interstitialAd.destroy();\r\n                        }\r\n                    }\r\n                    QQ.InterstitialAd = InterstitialAd;\r\n                    function CreateInterstitialAd(adUnitId) {\r\n                        let param = {};\r\n                        param.adUnitId = adUnitId;\r\n                        if (qq.createInterstitialAd != null) {\r\n                            let obj = qq.createInterstitialAd(param);\r\n                            return new InterstitialAd(obj);\r\n                        }\r\n                        return null;\r\n                    }\r\n                    QQ.CreateInterstitialAd = CreateInterstitialAd;\r\n                    class RewardedVideoAd {\r\n                        constructor(obj) {\r\n                            this.rewardedVideoAd = obj;\r\n                        }\r\n                        Load() {\r\n                            return this.rewardedVideoAd.load();\r\n                        }\r\n                        Show() {\r\n                            return this.rewardedVideoAd.show();\r\n                        }\r\n                        OnLoad(callback) {\r\n                            this.rewardedVideoAd.onLoad(callback);\r\n                        }\r\n                        OffLoad(callback) {\r\n                            this.rewardedVideoAd.offLoad(callback);\r\n                        }\r\n                        OnError(callback) {\r\n                            this.rewardedVideoAd.onError(callback);\r\n                        }\r\n                        OffError(callback) {\r\n                            this.rewardedVideoAd.offError(callback);\r\n                        }\r\n                        OnClose(callback) {\r\n                            this.rewardedVideoAd.onClose(callback);\r\n                        }\r\n                        OffClose(callback) {\r\n                            this.rewardedVideoAd.offClose(callback);\r\n                        }\r\n                    }\r\n                    QQ.RewardedVideoAd = RewardedVideoAd;\r\n                    function CreateRewardedVideoAd(adUnitId) {\r\n                        let param = {};\r\n                        param.adUnitId = adUnitId;\r\n                        let obj = qq.createRewardedVideoAd(param);\r\n                        return new RewardedVideoAd(obj);\r\n                    }\r\n                    QQ.CreateRewardedVideoAd = CreateRewardedVideoAd;\r\n                })(QQ = Extern.QQ || (Extern.QQ = {}));\r\n            })(Extern = AppRt.Extern || (AppRt.Extern = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var Extern;\r\n            (function (Extern) {\r\n                var QTTGame;\r\n                (function (QTTGame) {\r\n                    function Exist() {\r\n                        return typeof qttGame != 'undefined';\r\n                    }\r\n                    QTTGame.Exist = Exist;\r\n                    function ShowBanner() {\r\n                        qttGame.showBanner();\r\n                    }\r\n                    QTTGame.ShowBanner = ShowBanner;\r\n                    function HideBanner() {\r\n                        qttGame.hideBanner();\r\n                    }\r\n                    QTTGame.HideBanner = HideBanner;\r\n                    class VideoOptionsData {\r\n                        constructor() {\r\n                            this.title = \"刷新道具\";\r\n                            this.url = \"//newidea4-gamecenter-frontend.1sapp.com/game/prod/fkxxl_img/1.png\";\r\n                        }\r\n                    }\r\n                    class VideoOptions {\r\n                        constructor() {\r\n                            this.gametype = 1;\r\n                            this.rewardtype = 1;\r\n                            this.data = new VideoOptionsData();\r\n                        }\r\n                    }\r\n                    QTTGame.VideoOptions = VideoOptions;\r\n                    function ShowVideo(callback, options = new VideoOptions()) {\r\n                        qttGame.showVideo(callback, options);\r\n                    }\r\n                    QTTGame.ShowVideo = ShowVideo;\r\n                    function ShowHDAD(options = new VideoOptions()) {\r\n                        qttGame.showHDAD(options);\r\n                    }\r\n                    QTTGame.ShowHDAD = ShowHDAD;\r\n                    function ShowHDReward(options = new VideoOptions()) {\r\n                        qttGame.showHDReward(options);\r\n                    }\r\n                    QTTGame.ShowHDReward = ShowHDReward;\r\n                })(QTTGame = Extern.QTTGame || (Extern.QTTGame = {}));\r\n            })(Extern = AppRt.Extern || (AppRt.Extern = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var Extern;\r\n            (function (Extern) {\r\n                var TT;\r\n                (function (TT) {\r\n                    function Exist() {\r\n                        return typeof tt != 'undefined';\r\n                    }\r\n                    TT.Exist = Exist;\r\n                    class SystemInfo {\r\n                    }\r\n                    function GetSystemInfoSync() {\r\n                        return tt.getSystemInfoSync();\r\n                    }\r\n                    TT.GetSystemInfoSync = GetSystemInfoSync;\r\n                    class CallbackResult {\r\n                    }\r\n                    class CallbackParam {\r\n                    }\r\n                    TT.CallbackParam = CallbackParam;\r\n                    class LoginResult extends CallbackResult {\r\n                    }\r\n                    class LoginParam extends CallbackParam {\r\n                        constructor() {\r\n                            super(...arguments);\r\n                            this.force = true;\r\n                        }\r\n                    }\r\n                    TT.LoginParam = LoginParam;\r\n                    function Login(param) {\r\n                        tt.login(param);\r\n                    }\r\n                    TT.Login = Login;\r\n                    class UserInfo {\r\n                    }\r\n                    TT.UserInfo = UserInfo;\r\n                    class GetUserInfoResult extends CallbackResult {\r\n                    }\r\n                    class GetUserInfoParam extends CallbackParam {\r\n                        constructor() {\r\n                            super(...arguments);\r\n                            this.withCredentials = false;\r\n                        }\r\n                    }\r\n                    TT.GetUserInfoParam = GetUserInfoParam;\r\n                    function GetUserInfo(param) {\r\n                        tt.getUserInfo(param);\r\n                    }\r\n                    TT.GetUserInfo = GetUserInfo;\r\n                    class NavigateToMiniProgramParam extends CallbackParam {\r\n                        constructor() {\r\n                            super(...arguments);\r\n                            this.envVersion = \"current\";\r\n                        }\r\n                    }\r\n                    TT.NavigateToMiniProgramParam = NavigateToMiniProgramParam;\r\n                    function NavigateToMiniProgram(param) {\r\n                        tt.navigateToMiniProgram(param);\r\n                    }\r\n                    TT.NavigateToMiniProgram = NavigateToMiniProgram;\r\n                    class RecordClipResult extends CallbackResult {\r\n                    }\r\n                    class RecordClipParam extends CallbackParam {\r\n                    }\r\n                    TT.RecordClipParam = RecordClipParam;\r\n                    class ClipVideoResult extends CallbackResult {\r\n                    }\r\n                    class ClipVideoParam extends CallbackParam {\r\n                    }\r\n                    TT.ClipVideoParam = ClipVideoParam;\r\n                    class GameRecorderManager {\r\n                        constructor(obj) {\r\n                            this.gameRecorderManager = obj;\r\n                        }\r\n                        Start(duration) {\r\n                            let param = {};\r\n                            param.duration = duration;\r\n                            this.gameRecorderManager.start(param);\r\n                        }\r\n                        OnStart(callback) {\r\n                            this.gameRecorderManager.onStart(callback);\r\n                        }\r\n                        RecordClip(param) {\r\n                            this.gameRecorderManager.recordClip(param);\r\n                        }\r\n                        Stop() {\r\n                            this.gameRecorderManager.stop();\r\n                        }\r\n                        OnStop(callback) {\r\n                            this.gameRecorderManager.onStop(callback);\r\n                        }\r\n                        ClipVideo(param) {\r\n                            this.gameRecorderManager.clipVideo(param);\r\n                        }\r\n                    }\r\n                    TT.GameRecorderManager = GameRecorderManager;\r\n                    function GetGameRecorderManager() {\r\n                        if (tt.getGameRecorderManager == null)\r\n                            return null;\r\n                        let obj = tt.getGameRecorderManager();\r\n                        return new GameRecorderManager(obj);\r\n                    }\r\n                    TT.GetGameRecorderManager = GetGameRecorderManager;\r\n                    class ShareAppMessageParamExtra {\r\n                        constructor() {\r\n                            this.createChallenge = false;\r\n                        }\r\n                    }\r\n                    class ShareAppMessageParam extends CallbackParam {\r\n                        constructor() {\r\n                            super(...arguments);\r\n                            this.extra = new ShareAppMessageParamExtra();\r\n                        }\r\n                    }\r\n                    TT.ShareAppMessageParam = ShareAppMessageParam;\r\n                    function ShareAppMessage(param) {\r\n                        tt.shareAppMessage(param);\r\n                    }\r\n                    TT.ShareAppMessage = ShareAppMessage;\r\n                    function ReportAnalytics(eventName, data) {\r\n                        tt.reportAnalytics(eventName, data);\r\n                    }\r\n                    TT.ReportAnalytics = ReportAnalytics;\r\n                    class ReferrerInfo {\r\n                    }\r\n                    class LaunchOption {\r\n                    }\r\n                    function GetLaunchOptionsSync() {\r\n                        return tt.getLaunchOptionsSync();\r\n                    }\r\n                    TT.GetLaunchOptionsSync = GetLaunchOptionsSync;\r\n                    class OnNavigateToMiniGameResult {\r\n                    }\r\n                    class AppLaunchOptions {\r\n                    }\r\n                    TT.AppLaunchOptions = AppLaunchOptions;\r\n                    class MoreGamesButtonStyle {\r\n                    }\r\n                    class CreateMoreGamesButtonParam {\r\n                        constructor() {\r\n                            this.style = new MoreGamesButtonStyle();\r\n                            this.appLaunchOptions = [];\r\n                        }\r\n                    }\r\n                    TT.CreateMoreGamesButtonParam = CreateMoreGamesButtonParam;\r\n                    function CreateMoreGamesButton(param) {\r\n                        if (tt.createMoreGamesButton == null)\r\n                            return null;\r\n                        let obj = tt.createMoreGamesButton(param);\r\n                        console.log(\"createMoreGamesButton = \" + JSON.stringify(obj));\r\n                        return new MoreGamesButton(obj);\r\n                    }\r\n                    TT.CreateMoreGamesButton = CreateMoreGamesButton;\r\n                    class MoreGamesButton {\r\n                        constructor(obj) {\r\n                            this.moreGamesButton = obj;\r\n                        }\r\n                        get buttonId() {\r\n                            return this.moreGamesButton.buttonId;\r\n                        }\r\n                        Show() {\r\n                            return this.moreGamesButton.show();\r\n                        }\r\n                        Hide() {\r\n                            return this.moreGamesButton.hide();\r\n                        }\r\n                        OnTap(callback) {\r\n                            this.moreGamesButton.onTap(callback);\r\n                        }\r\n                        OffTap(callback) {\r\n                            this.moreGamesButton.offTap(callback);\r\n                        }\r\n                        Destroy() {\r\n                            this.moreGamesButton.destroy();\r\n                        }\r\n                    }\r\n                    TT.MoreGamesButton = MoreGamesButton;\r\n                    class ShowMoreGamesModalParam extends CallbackParam {\r\n                        constructor() {\r\n                            super(...arguments);\r\n                            this.appLaunchOptions = [];\r\n                        }\r\n                    }\r\n                    TT.ShowMoreGamesModalParam = ShowMoreGamesModalParam;\r\n                    function ShowMoreGamesModal(param) {\r\n                        if (tt.showMoreGamesModal != null)\r\n                            tt.showMoreGamesModal(param);\r\n                    }\r\n                    TT.ShowMoreGamesModal = ShowMoreGamesModal;\r\n                    function VibrateShort(parm) {\r\n                        tt.vibrateShort(parm);\r\n                    }\r\n                    TT.VibrateShort = VibrateShort;\r\n                    function VibrateLong(parm) {\r\n                        tt.vibrateLong(parm);\r\n                    }\r\n                    TT.VibrateLong = VibrateLong;\r\n                    class BannerAdStyle {\r\n                    }\r\n                    TT.BannerAdStyle = BannerAdStyle;\r\n                    class BannerAd {\r\n                        constructor(obj) {\r\n                            this.bannerAd = obj;\r\n                        }\r\n                        get style() {\r\n                            return this.bannerAd.style;\r\n                        }\r\n                        Show() {\r\n                            return this.bannerAd.show();\r\n                        }\r\n                        Hide() {\r\n                            return this.bannerAd.hide();\r\n                        }\r\n                        OnLoad(callback) {\r\n                            this.bannerAd.onLoad(callback);\r\n                        }\r\n                        OffLoad(callback) {\r\n                            this.bannerAd.offLoad(callback);\r\n                        }\r\n                        OnError(callback) {\r\n                            this.bannerAd.onError(callback);\r\n                        }\r\n                        OffError(callback) {\r\n                            this.bannerAd.offError(callback);\r\n                        }\r\n                        OnResize(callback) {\r\n                            this.bannerAd.onResize(callback);\r\n                        }\r\n                        OffResize(callback) {\r\n                            this.bannerAd.offResize(callback);\r\n                        }\r\n                        Destroy() {\r\n                            this.bannerAd.destroy();\r\n                        }\r\n                    }\r\n                    TT.BannerAd = BannerAd;\r\n                    function CreateBannerAd(adUnitId, style) {\r\n                        let param = {};\r\n                        param.adUnitId = adUnitId;\r\n                        param.style = style;\r\n                        let obj = tt.createBannerAd(param);\r\n                        return new BannerAd(obj);\r\n                    }\r\n                    TT.CreateBannerAd = CreateBannerAd;\r\n                    class RewardedVideoAd {\r\n                        constructor(obj) {\r\n                            this.rewardedVideoAd = obj;\r\n                        }\r\n                        Load() {\r\n                            return this.rewardedVideoAd.load();\r\n                        }\r\n                        Show() {\r\n                            return this.rewardedVideoAd.show();\r\n                        }\r\n                        OnLoad(callback) {\r\n                            this.rewardedVideoAd.onLoad(callback);\r\n                        }\r\n                        OffLoad(callback) {\r\n                            this.rewardedVideoAd.offLoad(callback);\r\n                        }\r\n                        OnError(callback) {\r\n                            this.rewardedVideoAd.onError(callback);\r\n                        }\r\n                        OffError(callback) {\r\n                            this.rewardedVideoAd.offError(callback);\r\n                        }\r\n                        OnClose(callback) {\r\n                            this.rewardedVideoAd.onClose(callback);\r\n                        }\r\n                        OffClose(callback) {\r\n                            this.rewardedVideoAd.offClose(callback);\r\n                        }\r\n                    }\r\n                    TT.RewardedVideoAd = RewardedVideoAd;\r\n                    function CreateRewardedVideoAd(adUnitId) {\r\n                        if (tt.createRewardedVideoAd == null)\r\n                            return null;\r\n                        let param = {};\r\n                        param.adUnitId = adUnitId;\r\n                        let obj = tt.createRewardedVideoAd(param);\r\n                        return new RewardedVideoAd(obj);\r\n                    }\r\n                    TT.CreateRewardedVideoAd = CreateRewardedVideoAd;\r\n                })(TT = Extern.TT || (Extern.TT = {}));\r\n            })(Extern = AppRt.Extern || (AppRt.Extern = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var Extern;\r\n            (function (Extern) {\r\n                var UC;\r\n                (function (UC) {\r\n                    function Exist() {\r\n                        return typeof uc != 'undefined';\r\n                    }\r\n                    UC.Exist = Exist;\r\n                    class BannerAdStyle {\r\n                    }\r\n                    UC.BannerAdStyle = BannerAdStyle;\r\n                    class BannerAd {\r\n                        constructor(obj) {\r\n                            this.bannerAd = obj;\r\n                        }\r\n                        Show() {\r\n                            return this.bannerAd.show();\r\n                        }\r\n                        Hide() {\r\n                            return this.bannerAd.hide();\r\n                        }\r\n                        OnLoad(callback) {\r\n                            this.bannerAd.onLoad(callback);\r\n                        }\r\n                        OnError(callback) {\r\n                            this.bannerAd.onError(callback);\r\n                        }\r\n                        Destroy() {\r\n                            this.bannerAd.destroy();\r\n                        }\r\n                    }\r\n                    UC.BannerAd = BannerAd;\r\n                    function CreateBannerAd(style) {\r\n                        let param = {};\r\n                        param.style = style;\r\n                        let obj = uc.createBannerAd(param);\r\n                        return new BannerAd(obj);\r\n                    }\r\n                    UC.CreateBannerAd = CreateBannerAd;\r\n                    class RewardedVideoAd {\r\n                        constructor(obj) {\r\n                            this.rewardedVideoAd = obj;\r\n                        }\r\n                        Load() {\r\n                            return this.rewardedVideoAd.load();\r\n                        }\r\n                        Show() {\r\n                            return this.rewardedVideoAd.show();\r\n                        }\r\n                        OnShow(callback) {\r\n                            this.rewardedVideoAd.onShow(callback);\r\n                        }\r\n                        OnLoad(callback) {\r\n                            this.rewardedVideoAd.onLoad(callback);\r\n                        }\r\n                        OffLoad(callback) {\r\n                            this.rewardedVideoAd.offLoad(callback);\r\n                        }\r\n                        OnError(callback) {\r\n                            this.rewardedVideoAd.onError(callback);\r\n                        }\r\n                        OffError(callback) {\r\n                            this.rewardedVideoAd.offError(callback);\r\n                        }\r\n                        OnClose(callback) {\r\n                            this.rewardedVideoAd.onClose(callback);\r\n                        }\r\n                        OffClose(callback) {\r\n                            this.rewardedVideoAd.offClose(callback);\r\n                        }\r\n                    }\r\n                    UC.RewardedVideoAd = RewardedVideoAd;\r\n                    function CreateRewardVideoAd() {\r\n                        let obj = uc.createRewardVideoAd();\r\n                        return new RewardedVideoAd(obj);\r\n                    }\r\n                    UC.CreateRewardVideoAd = CreateRewardVideoAd;\r\n                })(UC = Extern.UC || (Extern.UC = {}));\r\n            })(Extern = AppRt.Extern || (AppRt.Extern = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var Extern;\r\n            (function (Extern) {\r\n                var VIVO;\r\n                (function (VIVO) {\r\n                    var QG;\r\n                    (function (QG) {\r\n                        function Exist() {\r\n                            return typeof qg != 'undefined';\r\n                        }\r\n                        QG.Exist = Exist;\r\n                        class AuthorizeResult {\r\n                        }\r\n                        class AuthorizeParam {\r\n                            constructor() {\r\n                                this.type = \"token\";\r\n                            }\r\n                        }\r\n                        QG.AuthorizeParam = AuthorizeParam;\r\n                        function Authorize(param) {\r\n                            qg.authorize(param);\r\n                        }\r\n                        QG.Authorize = Authorize;\r\n                        class GetProfileResult {\r\n                        }\r\n                        class GetProfileParam {\r\n                        }\r\n                        QG.GetProfileParam = GetProfileParam;\r\n                        function GetProfile(param) {\r\n                            qg.getProfile(param);\r\n                        }\r\n                        QG.GetProfile = GetProfile;\r\n                        class BannerAd {\r\n                            constructor(obj) {\r\n                                this.bannerAd = obj;\r\n                            }\r\n                            Show() {\r\n                                return this.bannerAd.show();\r\n                            }\r\n                            Hide() {\r\n                                return this.bannerAd.hide();\r\n                            }\r\n                            OnLoad(callback) {\r\n                                this.bannerAd.onLoad(callback);\r\n                            }\r\n                            OffLoad(callback) {\r\n                                this.bannerAd.offLoad(callback);\r\n                            }\r\n                            OnError(callback) {\r\n                                this.bannerAd.onError(callback);\r\n                            }\r\n                            OffError(callback) {\r\n                                this.bannerAd.offError(callback);\r\n                            }\r\n                            OnClose(callback) {\r\n                                this.bannerAd.onClose(callback);\r\n                            }\r\n                            OffClose(callback) {\r\n                                this.bannerAd.offClose(callback);\r\n                            }\r\n                            OnSize(callback) {\r\n                                this.bannerAd.onSize(callback);\r\n                            }\r\n                            OffSize(callback) {\r\n                                this.bannerAd.offSize(callback);\r\n                            }\r\n                        }\r\n                        QG.BannerAd = BannerAd;\r\n                        function CreateBannerAd(posId) {\r\n                            let param = {};\r\n                            param.posId = posId;\r\n                            param.style = {};\r\n                            let obj = qg.createBannerAd(param);\r\n                            return new BannerAd(obj);\r\n                        }\r\n                        QG.CreateBannerAd = CreateBannerAd;\r\n                        class InterstitialAd {\r\n                            constructor(obj) {\r\n                                this.interstitialAd = obj;\r\n                            }\r\n                            Show() {\r\n                                return this.interstitialAd.show();\r\n                            }\r\n                            OnLoad(callback) {\r\n                                this.interstitialAd.onLoad(callback);\r\n                            }\r\n                            OffLoad(callback) {\r\n                                this.interstitialAd.offLoad(callback);\r\n                            }\r\n                            OnError(callback) {\r\n                                this.interstitialAd.onError(callback);\r\n                            }\r\n                            OffError(callback) {\r\n                                this.interstitialAd.offError(callback);\r\n                            }\r\n                            OnClose(callback) {\r\n                                this.interstitialAd.onClose(callback);\r\n                            }\r\n                            OffClose(callback) {\r\n                                this.interstitialAd.offClose(callback);\r\n                            }\r\n                        }\r\n                        QG.InterstitialAd = InterstitialAd;\r\n                        function CreateInterstitialAd(posId) {\r\n                            let param = {};\r\n                            param.posId = posId;\r\n                            let obj = qg.createInterstitialAd(param);\r\n                            return new InterstitialAd(obj);\r\n                        }\r\n                        QG.CreateInterstitialAd = CreateInterstitialAd;\r\n                        class RewardedVideoAd {\r\n                            constructor(obj) {\r\n                                this.rewardedVideoAd = obj;\r\n                            }\r\n                            Load() {\r\n                                return this.rewardedVideoAd.load();\r\n                            }\r\n                            Show() {\r\n                                return this.rewardedVideoAd.show();\r\n                            }\r\n                            OnLoad(callback) {\r\n                                this.rewardedVideoAd.onLoad(callback);\r\n                            }\r\n                            OffLoad(callback) {\r\n                                this.rewardedVideoAd.offLoad(callback);\r\n                            }\r\n                            OnError(callback) {\r\n                                this.rewardedVideoAd.onError(callback);\r\n                            }\r\n                            OffError(callback) {\r\n                                this.rewardedVideoAd.offError(callback);\r\n                            }\r\n                            OnClose(callback) {\r\n                                this.rewardedVideoAd.onClose(callback);\r\n                            }\r\n                            OffClose(callback) {\r\n                                this.rewardedVideoAd.offClose(callback);\r\n                            }\r\n                        }\r\n                        QG.RewardedVideoAd = RewardedVideoAd;\r\n                        function CreateRewardedVideoAd(posId) {\r\n                            let param = {};\r\n                            param.posId = posId;\r\n                            let obj = qg.createRewardedVideoAd(param);\r\n                            return new RewardedVideoAd(obj);\r\n                        }\r\n                        QG.CreateRewardedVideoAd = CreateRewardedVideoAd;\r\n                        class NativeAdData {\r\n                        }\r\n                        QG.NativeAdData = NativeAdData;\r\n                        class NativeAd {\r\n                            constructor(obj) {\r\n                                this.nativeAd = obj;\r\n                            }\r\n                            Load() {\r\n                                this.nativeAd.load();\r\n                            }\r\n                            ReportAdShow(adId) {\r\n                                let obj = {};\r\n                                obj.adId = adId;\r\n                                this.nativeAd.reportAdShow(obj);\r\n                            }\r\n                            ReportAdClick(adId) {\r\n                                let obj = {};\r\n                                obj.adId = adId;\r\n                                this.nativeAd.reportAdClick(obj);\r\n                            }\r\n                            OnLoad(callback) {\r\n                                this.nativeAd.onLoad(callback);\r\n                            }\r\n                            OffLoad() {\r\n                                this.nativeAd.offLoad();\r\n                            }\r\n                            OnError(callback) {\r\n                                this.nativeAd.onError(callback);\r\n                            }\r\n                            OffError() {\r\n                                this.nativeAd.offError();\r\n                            }\r\n                        }\r\n                        QG.NativeAd = NativeAd;\r\n                        function CreateNativeAd(posId) {\r\n                            let param = {};\r\n                            param.posId = posId;\r\n                            let obj = qg.createNativeAd(param);\r\n                            return new NativeAd(obj);\r\n                        }\r\n                        QG.CreateNativeAd = CreateNativeAd;\r\n                        class RequestParam {\r\n                            constructor() {\r\n                                this.dataType = \"json\";\r\n                            }\r\n                        }\r\n                        QG.RequestParam = RequestParam;\r\n                        function Request(param) {\r\n                            return qg.request(param);\r\n                        }\r\n                        QG.Request = Request;\r\n                    })(QG = VIVO.QG || (VIVO.QG = {}));\r\n                })(VIVO = Extern.VIVO || (Extern.VIVO = {}));\r\n            })(Extern = AppRt.Extern || (AppRt.Extern = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var Extern;\r\n            (function (Extern) {\r\n                var WX;\r\n                (function (WX) {\r\n                    function Exist() {\r\n                        return typeof wx != 'undefined';\r\n                    }\r\n                    WX.Exist = Exist;\r\n                    class CallbackResult {\r\n                    }\r\n                    WX.CallbackResult = CallbackResult;\r\n                    class CallbackParam {\r\n                    }\r\n                    WX.CallbackParam = CallbackParam;\r\n                })(WX = Extern.WX || (Extern.WX = {}));\r\n            })(Extern = AppRt.Extern || (AppRt.Extern = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var Extern;\r\n            (function (Extern) {\r\n                var WX;\r\n                (function (WX) {\r\n                    class NavigateToMiniProgramParam extends WX.CallbackParam {\r\n                        constructor() {\r\n                            super(...arguments);\r\n                            this.envVersion = \"release\";\r\n                        }\r\n                    }\r\n                    WX.NavigateToMiniProgramParam = NavigateToMiniProgramParam;\r\n                    function NavigateToMiniProgram(param) {\r\n                        wx.navigateToMiniProgram(param);\r\n                    }\r\n                    WX.NavigateToMiniProgram = NavigateToMiniProgram;\r\n                })(WX = Extern.WX || (Extern.WX = {}));\r\n            })(Extern = AppRt.Extern || (AppRt.Extern = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var Extern;\r\n            (function (Extern) {\r\n                var WX;\r\n                (function (WX) {\r\n                    class AuthorizeParam extends WX.CallbackParam {\r\n                    }\r\n                    WX.AuthorizeParam = AuthorizeParam;\r\n                    function Authorize(param) {\r\n                        wx.authorize(param);\r\n                    }\r\n                    WX.Authorize = Authorize;\r\n                    class UserInfoButtonStyle {\r\n                    }\r\n                    class CreateUserInfoButtonParam {\r\n                        constructor() {\r\n                            this.style = new UserInfoButtonStyle();\r\n                        }\r\n                    }\r\n                    WX.CreateUserInfoButtonParam = CreateUserInfoButtonParam;\r\n                    function CreateUserInfoButton(param) {\r\n                        if (wx.createUserInfoButton == null)\r\n                            return null;\r\n                        let obj = wx.createUserInfoButton(param);\r\n                        return new UserInfoButton(obj);\r\n                    }\r\n                    WX.CreateUserInfoButton = CreateUserInfoButton;\r\n                    class UserInfoButtonOnTapResult extends WX.CallbackResult {\r\n                    }\r\n                    class UserInfoButton {\r\n                        constructor(obj) {\r\n                            this.userInfoButton = obj;\r\n                        }\r\n                        get type() {\r\n                            return this.userInfoButton.type;\r\n                        }\r\n                        get text() {\r\n                            return this.userInfoButton.text;\r\n                        }\r\n                        get image() {\r\n                            return this.userInfoButton.image;\r\n                        }\r\n                        get style() {\r\n                            return this.userInfoButton.style;\r\n                        }\r\n                        Show() {\r\n                            return this.userInfoButton.show();\r\n                        }\r\n                        Hide() {\r\n                            return this.userInfoButton.hide();\r\n                        }\r\n                        OnTap(callback) {\r\n                            this.userInfoButton.onTap(callback);\r\n                        }\r\n                        OffTap(callback) {\r\n                            this.userInfoButton.offTap(callback);\r\n                        }\r\n                        Destroy() {\r\n                            this.userInfoButton.destroy();\r\n                        }\r\n                    }\r\n                    WX.UserInfoButton = UserInfoButton;\r\n                    class LoginSuccessResult extends WX.CallbackResult {\r\n                    }\r\n                    class LoginParam extends WX.CallbackParam {\r\n                    }\r\n                    WX.LoginParam = LoginParam;\r\n                    function Login(param) {\r\n                        wx.login(param);\r\n                    }\r\n                    WX.Login = Login;\r\n                    class UserInfo {\r\n                    }\r\n                    WX.UserInfo = UserInfo;\r\n                    class GetUserInfoSuccessResult extends WX.CallbackResult {\r\n                    }\r\n                    class GetUserInfoParam extends WX.CallbackParam {\r\n                    }\r\n                    WX.GetUserInfoParam = GetUserInfoParam;\r\n                    function GetUserInfo(param) {\r\n                        wx.getUserInfo(param);\r\n                    }\r\n                    WX.GetUserInfo = GetUserInfo;\r\n                    function OnShow(callback) {\r\n                        wx.onShow(callback);\r\n                    }\r\n                    WX.OnShow = OnShow;\r\n                    function OffShow(callback) {\r\n                        wx.offShow(callback);\r\n                    }\r\n                    WX.OffShow = OffShow;\r\n                    function OnHide(callback) {\r\n                        wx.onHide(callback);\r\n                    }\r\n                    WX.OnHide = OnHide;\r\n                    function OffHide(callback) {\r\n                        wx.offHide(callback);\r\n                    }\r\n                    WX.OffHide = OffHide;\r\n                    class ReferrerInfo {\r\n                    }\r\n                    class LaunchOption {\r\n                    }\r\n                    function GetLaunchOptionsSync() {\r\n                        return wx.getLaunchOptionsSync();\r\n                    }\r\n                    WX.GetLaunchOptionsSync = GetLaunchOptionsSync;\r\n                    function VibrateShort(parm) {\r\n                        wx.vibrateShort(parm);\r\n                    }\r\n                    WX.VibrateShort = VibrateShort;\r\n                    function VibrateLong(parm) {\r\n                        wx.vibrateLong(parm);\r\n                    }\r\n                    WX.VibrateLong = VibrateLong;\r\n                    class BannerAdStyle {\r\n                    }\r\n                    WX.BannerAdStyle = BannerAdStyle;\r\n                    class BannerAd {\r\n                        constructor(obj) {\r\n                            this.bannerAd = obj;\r\n                        }\r\n                        get style() {\r\n                            return this.bannerAd.style;\r\n                        }\r\n                        Show() {\r\n                            return this.bannerAd.show();\r\n                        }\r\n                        Hide() {\r\n                            return this.bannerAd.hide();\r\n                        }\r\n                        OnLoad(callback) {\r\n                            this.bannerAd.onLoad(callback);\r\n                        }\r\n                        OffLoad(callback) {\r\n                            this.bannerAd.offLoad(callback);\r\n                        }\r\n                        OnError(callback) {\r\n                            this.bannerAd.onError(callback);\r\n                        }\r\n                        OffError(callback) {\r\n                            this.bannerAd.offError(callback);\r\n                        }\r\n                        OnResize(callback) {\r\n                            this.bannerAd.onResize(callback);\r\n                        }\r\n                        OffResize(callback) {\r\n                            this.bannerAd.offResize(callback);\r\n                        }\r\n                        Destroy() {\r\n                            this.bannerAd.destroy();\r\n                        }\r\n                    }\r\n                    WX.BannerAd = BannerAd;\r\n                    function CreateBannerAd(adUnitId, style, adIntervals) {\r\n                        let param = {};\r\n                        param.adUnitId = adUnitId;\r\n                        param.style = style;\r\n                        param.adIntervals = adIntervals;\r\n                        let obj = wx.createBannerAd(param);\r\n                        return new BannerAd(obj);\r\n                    }\r\n                    WX.CreateBannerAd = CreateBannerAd;\r\n                    class InterstitialAd {\r\n                        constructor(obj) {\r\n                            this.interstitialAd = obj;\r\n                        }\r\n                        Load() {\r\n                            return this.interstitialAd.load();\r\n                        }\r\n                        Show() {\r\n                            return this.interstitialAd.show();\r\n                        }\r\n                        OnLoad(callback) {\r\n                            this.interstitialAd.onLoad(callback);\r\n                        }\r\n                        OffLoad(callback) {\r\n                            this.interstitialAd.offLoad(callback);\r\n                        }\r\n                        OnClose(callback) {\r\n                            this.interstitialAd.onClose(callback);\r\n                        }\r\n                        OffClose(callback) {\r\n                            this.interstitialAd.offClose(callback);\r\n                        }\r\n                        OnError(callback) {\r\n                            this.interstitialAd.onError(callback);\r\n                        }\r\n                        OffError(callback) {\r\n                            this.interstitialAd.offError(callback);\r\n                        }\r\n                        Destroy() {\r\n                            this.interstitialAd.destroy();\r\n                        }\r\n                    }\r\n                    WX.InterstitialAd = InterstitialAd;\r\n                    function CreateInterstitialAd(adUnitId) {\r\n                        let param = {};\r\n                        param.adUnitId = adUnitId;\r\n                        let obj = wx.createInterstitialAd(param);\r\n                        return new InterstitialAd(obj);\r\n                    }\r\n                    WX.CreateInterstitialAd = CreateInterstitialAd;\r\n                    class RewardedVideoAd {\r\n                        constructor(obj) {\r\n                            this.rewardedVideoAd = obj;\r\n                        }\r\n                        Load() {\r\n                            return this.rewardedVideoAd.load();\r\n                        }\r\n                        Show() {\r\n                            return this.rewardedVideoAd.show();\r\n                        }\r\n                        OnLoad(callback) {\r\n                            this.rewardedVideoAd.onLoad(callback);\r\n                        }\r\n                        OffLoad(callback) {\r\n                            this.rewardedVideoAd.offLoad(callback);\r\n                        }\r\n                        OnError(callback) {\r\n                            this.rewardedVideoAd.onError(callback);\r\n                        }\r\n                        OffError(callback) {\r\n                            this.rewardedVideoAd.offError(callback);\r\n                        }\r\n                        OnClose(callback) {\r\n                            this.rewardedVideoAd.onClose(callback);\r\n                        }\r\n                        OffClose(callback) {\r\n                            this.rewardedVideoAd.offClose(callback);\r\n                        }\r\n                        Destroy() {\r\n                            this.rewardedVideoAd.destroy();\r\n                        }\r\n                    }\r\n                    WX.RewardedVideoAd = RewardedVideoAd;\r\n                    function CreateRewardedVideoAd(adUnitId, multiton) {\r\n                        let param = {};\r\n                        param.adUnitId = adUnitId;\r\n                        param.multiton = multiton;\r\n                        let obj = wx.createRewardedVideoAd(param);\r\n                        return new RewardedVideoAd(obj);\r\n                    }\r\n                    WX.CreateRewardedVideoAd = CreateRewardedVideoAd;\r\n                })(WX = Extern.WX || (Extern.WX = {}));\r\n            })(Extern = AppRt.Extern || (AppRt.Extern = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var Extern;\r\n            (function (Extern) {\r\n                var XIAOMI;\r\n                (function (XIAOMI) {\r\n                    var QG;\r\n                    (function (QG) {\r\n                        function Exist() {\r\n                            return typeof qg != 'undefined';\r\n                        }\r\n                        QG.Exist = Exist;\r\n                        class InsertAd {\r\n                            constructor(obj) {\r\n                                this.insertAd = obj;\r\n                            }\r\n                            Show() {\r\n                                return this.insertAd.show();\r\n                            }\r\n                            OnLoad(callback) {\r\n                                this.insertAd.onLoad(callback);\r\n                            }\r\n                            OffLoad(callback) {\r\n                                this.insertAd.offLoad(callback);\r\n                            }\r\n                            OnError(callback) {\r\n                                this.insertAd.onError(callback);\r\n                            }\r\n                            OffError(callback) {\r\n                                this.insertAd.offError(callback);\r\n                            }\r\n                            OnClose(callback) {\r\n                                this.insertAd.onClose(callback);\r\n                            }\r\n                            OffClose(callback) {\r\n                                this.insertAd.offClose(callback);\r\n                            }\r\n                        }\r\n                        QG.InsertAd = InsertAd;\r\n                        function CreateInsertAd(posId) {\r\n                            let param = {};\r\n                            param.adUnitId = posId;\r\n                            let obj = qg.createInterstitialAd(param);\r\n                            return new InsertAd(obj);\r\n                        }\r\n                        QG.CreateInsertAd = CreateInsertAd;\r\n                        class RewardedVideoAd {\r\n                            constructor(obj) {\r\n                                this.videoAd = obj;\r\n                            }\r\n                            Show() {\r\n                                return this.videoAd.show();\r\n                            }\r\n                            Load() {\r\n                                return this.videoAd.load();\r\n                            }\r\n                            OnLoad(callback) {\r\n                                this.videoAd.onLoad(callback);\r\n                            }\r\n                            OffLoad(callback) {\r\n                                this.videoAd.offLoad(callback);\r\n                            }\r\n                            OnClose(callback) {\r\n                                this.videoAd.onClose(callback);\r\n                            }\r\n                            OffClose(callback) {\r\n                                this.videoAd.offClose(callback);\r\n                            }\r\n                            OnError(callback) {\r\n                                this.videoAd.onError(callback);\r\n                            }\r\n                            OffError(callback) {\r\n                                this.videoAd.offError(callback);\r\n                            }\r\n                        }\r\n                        QG.RewardedVideoAd = RewardedVideoAd;\r\n                        function CreateRewardedVideoAd(posId) {\r\n                            let param = {};\r\n                            param.adUnitId = posId;\r\n                            let obj = qg.createRewardedVideoAd(param);\r\n                            return new RewardedVideoAd(obj);\r\n                        }\r\n                        QG.CreateRewardedVideoAd = CreateRewardedVideoAd;\r\n                    })(QG = XIAOMI.QG || (XIAOMI.QG = {}));\r\n                })(XIAOMI = Extern.XIAOMI || (Extern.XIAOMI = {}));\r\n            })(Extern = AppRt.Extern || (AppRt.Extern = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var Develop;\r\n            (function (Develop) {\r\n                var Ground;\r\n                (function (Ground) {\r\n                    let url = \"https://xylogin.tomatojoy.cn:442/api/ground/\";\r\n                    async function Send(api, param) {\r\n                    }\r\n                    function Heartbeat() {\r\n                    }\r\n                    Ground.Heartbeat = Heartbeat;\r\n                    function DeviceInfo(deviceInfo) {\r\n                    }\r\n                    Ground.DeviceInfo = DeviceInfo;\r\n                    function AppInfo(appInfo) {\r\n                    }\r\n                    Ground.AppInfo = AppInfo;\r\n                    function EventInfo(eventInfo) {\r\n                    }\r\n                    Ground.EventInfo = EventInfo;\r\n                    function LoginOppo(appGuid, token) {\r\n                        if (token == null)\r\n                            return;\r\n                        let param = {};\r\n                        param[\"startupGuid\"] = TJ.Common.SystemInfo.startupGuid;\r\n                        param[\"clientGuid\"] = TJ.Common.SystemInfo.clientGuid;\r\n                        param[\"appGuid\"] = appGuid;\r\n                        param[\"token\"] = token;\r\n                        Send(\"login/oppo\", param);\r\n                    }\r\n                    Ground.LoginOppo = LoginOppo;\r\n                    function LoginTT(appGuid, openid, userInfo) {\r\n                        let param = {};\r\n                        param[\"startupGuid\"] = TJ.Common.SystemInfo.startupGuid;\r\n                        param[\"clientGuid\"] = TJ.Common.SystemInfo.clientGuid;\r\n                        param[\"appGuid\"] = appGuid;\r\n                        param[\"openid\"] = openid;\r\n                        param[\"userInfo\"] = userInfo;\r\n                        Send(\"login/zijie\", param);\r\n                    }\r\n                    Ground.LoginTT = LoginTT;\r\n                    function LoginQTT(appGuid, platform, ticket) {\r\n                        let param = {};\r\n                        param[\"startupGuid\"] = TJ.Common.SystemInfo.startupGuid;\r\n                        param[\"clientGuid\"] = TJ.Common.SystemInfo.clientGuid;\r\n                        param[\"appGuid\"] = appGuid;\r\n                        param[\"platform\"] = platform;\r\n                        param[\"ticket\"] = ticket;\r\n                        Send(\"login/qtt\", param);\r\n                    }\r\n                    Ground.LoginQTT = LoginQTT;\r\n                    class Api {\r\n                        static Event(name) {\r\n                            let eventInfo = {};\r\n                            eventInfo[\"timePoint\"] = Date.now() - this.startTime;\r\n                            eventInfo[\"eventName\"] = name;\r\n                            EventInfo(eventInfo);\r\n                        }\r\n                        static SystemEvent(system, name, param) {\r\n                            let eventInfo = {};\r\n                            eventInfo[\"system\"] = system;\r\n                            eventInfo[\"timePoint\"] = Date.now() - this.startTime;\r\n                            eventInfo[\"eventName\"] = name;\r\n                            eventInfo[\"eventParam\"] = param;\r\n                            EventInfo(eventInfo);\r\n                        }\r\n                    }\r\n                    Api.startTime = Date.now();\r\n                    Ground.Api = Api;\r\n                })(Ground = Develop.Ground || (Develop.Ground = {}));\r\n            })(Develop = AppRt.Develop || (AppRt.Develop = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var Develop;\r\n            (function (Develop) {\r\n                var TA;\r\n                (function (TA) {\r\n                    function FormatDateTime(date = null) {\r\n                        if (date == null)\r\n                            date = new Date();\r\n                        return TJ.Common.Date_.Format(date, \"yyyy-MM-dd HH:mm:ss.SSS\");\r\n                    }\r\n                    let Raw;\r\n                    (function (Raw) {\r\n                        let url = \"https://sslog.tomatojoy.cn\";\r\n                        Raw.tryCount = 1;\r\n                        function Send(api, param) {\r\n                            let tryc = Raw.tryCount;\r\n                            Raw.tryCount = 1;\r\n                            let obj = {};\r\n                            obj.appid = \"f821f61402ab42f8b563646d9aa9bf99\";\r\n                            obj.data = JSON.stringify(param);\r\n                            obj.data = encodeURI(obj.data);\r\n                            let i = 0;\r\n                            let act = async () => {\r\n                                if (i++ < tryc) {\r\n                                    let www = new TJ.Common.WWW(url + api, obj);\r\n                                    www.logError = false;\r\n                                    www.logSend = false;\r\n                                    www.logText = false;\r\n                                    await www.Send(\"post\", \"form\");\r\n                                    if (www.text != null && www.text.length > 0) {\r\n                                        try {\r\n                                            let res = JSON.parse(www.text);\r\n                                            if (res.code != 0) {\r\n                                                window.setTimeout(() => { act(); }, 5000);\r\n                                            }\r\n                                        }\r\n                                        catch (error) {\r\n                                            console.log(error);\r\n                                            window.setTimeout(() => { act(); }, 5000);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            };\r\n                            act();\r\n                        }\r\n                        function sync_data(param) {\r\n                            if (param == null)\r\n                                param = {};\r\n                            if (TJ.Common.SystemInfo.userGuid != null)\r\n                                param[\"#account_id\"] = TJ.Common.SystemInfo.userGuid;\r\n                            param[\"#distinct_id\"] = TJ.Common.SystemInfo.clientGuid;\r\n                            param[\"#time\"] = FormatDateTime();\r\n                            param[\"#uuid\"] = TJ.Common.Guid.New();\r\n                            if (TJ.Develop.Yun.Location.ip != null)\r\n                                param[\"#ip\"] = TJ.Develop.Yun.Location.ip;\r\n                            Send(\"/sync_data\", param);\r\n                        }\r\n                        Raw.sync_data = sync_data;\r\n                        function track(event_name, properties) {\r\n                            let param = {};\r\n                            param[\"#type\"] = \"track\";\r\n                            param[\"#event_name\"] = event_name;\r\n                            param[\"properties\"] = properties;\r\n                            if (TJ.Common.SystemInfo.userGuid != null)\r\n                                properties[\"user_guid\"] = TJ.Common.SystemInfo.userGuid;\r\n                            properties[\"app_guid\"] = TJ.API.AppInfo.AppGuid();\r\n                            properties[\"app_channel\"] = TJ.API.AppInfo.Channel();\r\n                            properties[\"app_versionName\"] = TJ.API.AppInfo.VersionName();\r\n                            properties[\"app_versionCode\"] = \"\" + TJ.API.AppInfo.VersionCode();\r\n                            properties[\"client_guid\"] = TJ.Common.SystemInfo.clientGuid;\r\n                            properties[\"startup_guid\"] = TJ.Common.SystemInfo.startupGuid;\r\n                            properties[\"startup_time\"] = Math.floor((TJ.Common.Date_.nowSeconds - TJ.Common.SystemInfo.startupTime) * 1000) / 1000;\r\n                            sync_data(param);\r\n                        }\r\n                        Raw.track = track;\r\n                        function user_set(properties) {\r\n                            let param = {};\r\n                            param[\"#type\"] = \"user_set\";\r\n                            param[\"properties\"] = properties;\r\n                            sync_data(param);\r\n                        }\r\n                        Raw.user_set = user_set;\r\n                        function user_setOnce(properties) {\r\n                            let param = {};\r\n                            param[\"#type\"] = \"user_setOnce\";\r\n                            param[\"properties\"] = properties;\r\n                            sync_data(param);\r\n                        }\r\n                        Raw.user_setOnce = user_setOnce;\r\n                    })(Raw || (Raw = {}));\r\n                    let lastStartupTime;\r\n                    let lastForegroundTime = 0;\r\n                    function Startup() {\r\n                        if (lastStartupTime == null) {\r\n                            lastStartupTime = TJ.Common.SystemInfo.startupTime;\r\n                        }\r\n                        let now = TJ.Common.Date_.nowSeconds;\r\n                        let duration = now - lastStartupTime;\r\n                        lastStartupTime = now;\r\n                        let duration_foreground = TJ.Common.SystemInfo.foregroundTime - lastForegroundTime;\r\n                        lastForegroundTime = TJ.Common.SystemInfo.foregroundTime;\r\n                        Raw.track(\"Startup\", { \"duration\": Math.floor(duration * 1000) / 1000, \"duration_foreground\": Math.floor(duration_foreground * 1000) / 1000 });\r\n                    }\r\n                    TA.Startup = Startup;\r\n                    function FirstStartup() {\r\n                        Startup();\r\n                        Raw.tryCount = 10;\r\n                        Raw.user_setOnce({ \"first_startup_guid\": TJ.Common.SystemInfo.startupGuid });\r\n                    }\r\n                    TA.FirstStartup = FirstStartup;\r\n                    function LaunchOptions(ops) {\r\n                        let properties = {};\r\n                        if (ops != null) {\r\n                            properties[\"launch_options\"] = ops;\r\n                        }\r\n                        Raw.tryCount = 10;\r\n                        Raw.track(\"LaunchOptions\", properties);\r\n                    }\r\n                    TA.LaunchOptions = LaunchOptions;\r\n                    function PromoEvent(promoGuid, type, style, icon) {\r\n                        let properties = {};\r\n                        if (promoGuid != null) {\r\n                            properties[\"promo_guid\"] = \"\" + promoGuid;\r\n                        }\r\n                        if (type != null) {\r\n                            properties[\"type\"] = \"\" + type;\r\n                        }\r\n                        if (style != null) {\r\n                            properties[\"style\"] = \"\" + style;\r\n                        }\r\n                        if (icon != null) {\r\n                            properties[\"icon\"] = \"\" + icon;\r\n                        }\r\n                        Raw.tryCount = 3;\r\n                        Raw.track(\"PromoEvent\", properties);\r\n                    }\r\n                    TA.PromoEvent = PromoEvent;\r\n                    function PromoEvents(list) {\r\n                        let properties = {};\r\n                        if (list != null) {\r\n                            properties[\"promo_list\"] = list;\r\n                        }\r\n                        Raw.tryCount = 3;\r\n                        Raw.track(\"PromoEvents\", properties);\r\n                    }\r\n                    TA.PromoEvents = PromoEvents;\r\n                    let eventTimes = {};\r\n                    function Event_LifeCycle(id, type, duration) {\r\n                        Raw.tryCount = 2;\r\n                        Raw.track(\"Event_LifeCycle\", { \"id\": id, \"type\": type, \"duration\": Math.floor(duration * 1000) / 1000 });\r\n                    }\r\n                    function Event_LifeCycle_Load(id) {\r\n                        let key1 = \"Event_LifeCycle_Load-\" + id;\r\n                        let key2 = \"Event_LifeCycle_Start-\" + id;\r\n                        let key3 = \"Event_LifeCycle_Destroy-\" + id;\r\n                        eventTimes[key1] = TJ.Common.Date_.nowSeconds;\r\n                        eventTimes[key2] = null;\r\n                        eventTimes[key3] = null;\r\n                        Event_LifeCycle(id, \"Load\", 0);\r\n                    }\r\n                    TA.Event_LifeCycle_Load = Event_LifeCycle_Load;\r\n                    function Event_LifeCycle_Start(id) {\r\n                        let key1 = \"Event_LifeCycle_Load-\" + id;\r\n                        let key2 = \"Event_LifeCycle_Start-\" + id;\r\n                        if (eventTimes[key1] != null && eventTimes[key2] == null) {\r\n                            eventTimes[key2] = TJ.Common.Date_.nowSeconds;\r\n                            Event_LifeCycle(id, \"Start\", eventTimes[key2] - eventTimes[key1]);\r\n                        }\r\n                    }\r\n                    TA.Event_LifeCycle_Start = Event_LifeCycle_Start;\r\n                    function Event_LifeCycle_Destroy(id) {\r\n                        let key1 = \"Event_LifeCycle_Load-\" + id;\r\n                        let key2 = \"Event_LifeCycle_Destroy-\" + id;\r\n                        if (eventTimes[key1] != null && eventTimes[key2] == null) {\r\n                            eventTimes[key2] = TJ.Common.Date_.nowSeconds;\r\n                            Event_LifeCycle(id, \"Destroy\", eventTimes[key2] - eventTimes[key1]);\r\n                        }\r\n                    }\r\n                    TA.Event_LifeCycle_Destroy = Event_LifeCycle_Destroy;\r\n                    function Event_LifeCycle_Enable(id) {\r\n                        let key1 = \"Event_LifeCycle_Enable-\" + id;\r\n                        let key2 = \"Event_LifeCycle_Disable-\" + id;\r\n                        eventTimes[key1] = TJ.Common.Date_.nowSeconds;\r\n                        eventTimes[key2] = null;\r\n                        Event_LifeCycle(id, \"Enable\", 0);\r\n                    }\r\n                    TA.Event_LifeCycle_Enable = Event_LifeCycle_Enable;\r\n                    function Event_LifeCycle_Disable(id) {\r\n                        let key1 = \"Event_LifeCycle_Enable-\" + id;\r\n                        let key2 = \"Event_LifeCycle_Disable-\" + id;\r\n                        if (eventTimes[key1] != null && eventTimes[key2] == null) {\r\n                            eventTimes[key2] = TJ.Common.Date_.nowSeconds;\r\n                            Event_LifeCycle(id, \"Disable\", eventTimes[key2] - eventTimes[key1]);\r\n                        }\r\n                    }\r\n                    TA.Event_LifeCycle_Disable = Event_LifeCycle_Disable;\r\n                    function Event_Page(id, type, duration, id_source = \"\") {\r\n                        Raw.tryCount = 2;\r\n                        Raw.track(\"Event_Page\", { \"id\": id, \"type\": type, \"id_source\": id_source, \"duration\": Math.floor(duration * 1000) / 1000 });\r\n                    }\r\n                    function Event_Page_Enter(id, id_source = \"\") {\r\n                        let key1 = \"Event_Page_Enter-\" + id;\r\n                        let key2 = \"Event_Page_Show-\" + id;\r\n                        let key3 = \"Event_Page_Leave-\" + id;\r\n                        eventTimes[key1] = TJ.Common.Date_.nowSeconds;\r\n                        eventTimes[key2] = null;\r\n                        eventTimes[key3] = null;\r\n                        Event_Page(id, \"Enter\", 0, id_source);\r\n                    }\r\n                    TA.Event_Page_Enter = Event_Page_Enter;\r\n                    function Event_Page_Show(id, id_source = \"\") {\r\n                        let key1 = \"Event_Page_Enter-\" + id;\r\n                        let key2 = \"Event_Page_Show-\" + id;\r\n                        if (eventTimes[key1] != null && eventTimes[key2] == null) {\r\n                            eventTimes[key2] = TJ.Common.Date_.nowSeconds;\r\n                            Event_Page(id, \"Show\", eventTimes[key2] - eventTimes[key1], id_source);\r\n                        }\r\n                    }\r\n                    TA.Event_Page_Show = Event_Page_Show;\r\n                    function Event_Page_Leave(id, id_source = \"\") {\r\n                        let key1 = \"Event_Page_Enter-\" + id;\r\n                        let key2 = \"Event_Page_Leave-\" + id;\r\n                        if (eventTimes[key1] != null && eventTimes[key2] == null) {\r\n                            eventTimes[key2] = TJ.Common.Date_.nowSeconds;\r\n                            Event_Page(id, \"Leave\", eventTimes[key2] - eventTimes[key1], id_source);\r\n                        }\r\n                    }\r\n                    TA.Event_Page_Leave = Event_Page_Leave;\r\n                    function Event_Button(id, type, id_source = \"\") {\r\n                        Raw.tryCount = 2;\r\n                        Raw.track(\"Event_Button\", { \"id\": id, \"type\": type, \"id_source\": id_source });\r\n                    }\r\n                    function Event_Button_Show(id, id_source = \"\") {\r\n                        Event_Button(id, \"Show\", id_source);\r\n                    }\r\n                    TA.Event_Button_Show = Event_Button_Show;\r\n                    function Event_Button_Click(id, id_source = \"\") {\r\n                        Event_Button(id, \"Click\", id_source);\r\n                    }\r\n                    TA.Event_Button_Click = Event_Button_Click;\r\n                    function Event_Level(id, type, duration) {\r\n                        Raw.tryCount = 2;\r\n                        Raw.track(\"Event_Level\", { \"id\": id, \"type\": type, \"duration\": Math.floor(duration * 1000) / 1000 });\r\n                    }\r\n                    function Event_Level_Start(id) {\r\n                        let key1 = \"Event_Level_Start-\" + id;\r\n                        let key2 = \"Event_Level_Finish-\" + id;\r\n                        let key3 = \"Event_Level_Fail-\" + id;\r\n                        eventTimes[key1] = TJ.Common.Date_.nowSeconds;\r\n                        eventTimes[key2] = null;\r\n                        eventTimes[key3] = null;\r\n                        Event_Level(id, \"Start\", 0);\r\n                    }\r\n                    TA.Event_Level_Start = Event_Level_Start;\r\n                    function Event_Level_Finish(id) {\r\n                        let key1 = \"Event_Level_Start-\" + id;\r\n                        let key2 = \"Event_Level_Finish-\" + id;\r\n                        let key3 = \"Event_Level_Fail-\" + id;\r\n                        if (eventTimes[key1] != null && eventTimes[key2] == null && eventTimes[key3] == null) {\r\n                            eventTimes[key2] = TJ.Common.Date_.nowSeconds;\r\n                            Event_Level(id, \"Finish\", eventTimes[key2] - eventTimes[key1]);\r\n                        }\r\n                    }\r\n                    TA.Event_Level_Finish = Event_Level_Finish;\r\n                    function Event_Level_Fail(id) {\r\n                        let key1 = \"Event_Level_Start-\" + id;\r\n                        let key2 = \"Event_Level_Finish-\" + id;\r\n                        let key3 = \"Event_Level_Fail-\" + id;\r\n                        if (eventTimes[key1] != null && eventTimes[key2] == null && eventTimes[key3] == null) {\r\n                            eventTimes[key3] = TJ.Common.Date_.nowSeconds;\r\n                            Event_Level(id, \"Fail\", eventTimes[key3] - eventTimes[key1]);\r\n                        }\r\n                    }\r\n                    TA.Event_Level_Fail = Event_Level_Fail;\r\n                })(TA = Develop.TA || (Develop.TA = {}));\r\n            })(Develop = AppRt.Develop || (AppRt.Develop = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var Develop;\r\n            (function (Develop) {\r\n                var Yun;\r\n                (function (Yun) {\r\n                    var Login;\r\n                    (function (Login) {\r\n                        let apiUrl = \"https://yxapi.tomatojoy.cn/login\";\r\n                        class ResultParam {\r\n                        }\r\n                        class Result {\r\n                        }\r\n                        function GetResult(www) {\r\n                            if (www.error == null) {\r\n                                let res = JSON.parse(www.text);\r\n                                if (res.E == null) {\r\n                                    let param = res.P;\r\n                                    TJ.Common.SystemInfo.userGuid = param.userguid;\r\n                                }\r\n                                else {\r\n                                    console.log(\"E = \" + res.E);\r\n                                }\r\n                            }\r\n                        }\r\n                        async function OPPOLogin(param) {\r\n                            let req = {};\r\n                            req.A = \"Login.OPPOAppRT\";\r\n                            let p = {};\r\n                            p.appguid = TJ.API.AppInfo.AppGuid();\r\n                            p.userInfo = param.userInfo;\r\n                            req.P = JSON.stringify(p);\r\n                            let www = new TJ.Common.WWW(apiUrl, req);\r\n                            www.logText = true;\r\n                            await www.Send(\"post\", \"form\");\r\n                            GetResult(www);\r\n                        }\r\n                        Login.OPPOLogin = OPPOLogin;\r\n                        async function VIVOLogin(param) {\r\n                            let req = {};\r\n                            req.A = \"Login.VIVOLogin\";\r\n                            let p = {};\r\n                            p.appguid = TJ.API.AppInfo.AppGuid();\r\n                            p.userInfo = param.userInfo;\r\n                            req.P = JSON.stringify(p);\r\n                            let www = new TJ.Common.WWW(apiUrl, req);\r\n                            www.logText = true;\r\n                            await www.Send(\"post\", \"form\");\r\n                            GetResult(www);\r\n                        }\r\n                        Login.VIVOLogin = VIVOLogin;\r\n                        async function TTLogin(param) {\r\n                            if (param.code != null) {\r\n                                console.log(\"TTT code = \" + param.code);\r\n                                if (param.userInfo == null) {\r\n                                    param.userInfo = {};\r\n                                }\r\n                                console.log(\"TTT userInfo = \" + JSON.stringify(param.userInfo));\r\n                                let req = {};\r\n                                req.A = \"Login.TTAppRT\";\r\n                                let p = {};\r\n                                p.appguid = TJ.API.AppInfo.AppGuid();\r\n                                p.code = param.code;\r\n                                p.userInfo = param.userInfo;\r\n                                req.P = JSON.stringify(p);\r\n                                let www = new TJ.Common.WWW(apiUrl, req);\r\n                                www.logText = true;\r\n                                await www.Send(\"post\", \"form\");\r\n                                GetResult(www);\r\n                            }\r\n                            else {\r\n                                console.log(\"no code\");\r\n                            }\r\n                        }\r\n                        Login.TTLogin = TTLogin;\r\n                        async function WXLogin(param) {\r\n                            if (param.code != null) {\r\n                                console.log(\"WXX code = \" + param.code);\r\n                                if (param.userInfo == null) {\r\n                                    param.userInfo = {};\r\n                                }\r\n                                console.log(\"WXX userInfo = \" + JSON.stringify(param.userInfo));\r\n                                let req = {};\r\n                                req.A = \"Login.WXLogin\";\r\n                                let p = {};\r\n                                p.appguid = TJ.API.AppInfo.AppGuid();\r\n                                p.code = param.code;\r\n                                p.userInfo = param.userInfo;\r\n                                req.P = JSON.stringify(p);\r\n                                let www = new TJ.Common.WWW(apiUrl, req);\r\n                                www.logText = true;\r\n                                await www.Send(\"post\", \"form\");\r\n                                GetResult(www);\r\n                            }\r\n                            else {\r\n                                console.log(\"no code\");\r\n                            }\r\n                        }\r\n                        Login.WXLogin = WXLogin;\r\n                        async function QTTLogin(param) {\r\n                            let req = {};\r\n                            req.A = \"Login.QTTLogin\";\r\n                            let p = {};\r\n                            p.appguid = TJ.API.AppInfo.AppGuid();\r\n                            p.platform = param.platform;\r\n                            p.ticket = param.ticket;\r\n                            req.P = JSON.stringify(p);\r\n                            let www = new TJ.Common.WWW(apiUrl, req);\r\n                            www.logText = true;\r\n                            await www.Send(\"post\", \"form\");\r\n                            GetResult(www);\r\n                        }\r\n                        Login.QTTLogin = QTTLogin;\r\n                        async function HWLogin(param) {\r\n                            let req = {};\r\n                            req.A = \"Login.HWLogin\";\r\n                            let p = {};\r\n                            p.appguid = TJ.API.AppInfo.AppGuid();\r\n                            p.userInfo = param.userInfo;\r\n                            req.P = JSON.stringify(p);\r\n                            let www = new TJ.Common.WWW(apiUrl, req);\r\n                            www.logText = true;\r\n                            await www.Send(\"post\", \"form\");\r\n                            GetResult(www);\r\n                        }\r\n                        Login.HWLogin = HWLogin;\r\n                    })(Login = Yun.Login || (Yun.Login = {}));\r\n                })(Yun = Develop.Yun || (Develop.Yun = {}));\r\n            })(Develop = AppRt.Develop || (AppRt.Develop = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var API;\r\n            (function (API) {\r\n                var AdPoly;\r\n                (function (AdPoly) {\r\n                    class IAdPoly extends TJ.Common.Component.Interface {\r\n                        ADReady(param, grade) { return false; }\r\n                        ShowAD(param, grade) { }\r\n                        RemoveAD(param, grade) { }\r\n                    }\r\n                    AdPoly.IAdPoly = IAdPoly;\r\n                    let Grade;\r\n                    (function (Grade) {\r\n                        Grade[Grade[\"banner\"] = 0] = \"banner\";\r\n                        Grade[Grade[\"normal\"] = 1] = \"normal\";\r\n                        Grade[Grade[\"reward\"] = 2] = \"reward\";\r\n                    })(Grade = AdPoly.Grade || (AdPoly.Grade = {}));\r\n                })(AdPoly = API.AdPoly || (API.AdPoly = {}));\r\n            })(API = AppRt.API || (AppRt.API = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var DevKit;\r\n            (function (DevKit) {\r\n                let HBS;\r\n                (function (HBS) {\r\n                    let loginResolve;\r\n                    let loginWait;\r\n                    let userInfo;\r\n                    async function GameLogin() {\r\n                        if (loginWait == null) {\r\n                            loginWait = new Promise((r) => { loginResolve = r; });\r\n                            if (DP.Basic.channel == TJ.Define.Channel.AppRt.HUAWEI_AppRt) {\r\n                                let param = new AppRt.Extern.HBS.LoginParam();\r\n                                param.forceLogin = 1;\r\n                                param.appid = DP.HBS.appId;\r\n                                param.success = (res) => {\r\n                                    console.log(\"HBS.GameLogin success = \" + JSON.stringify(res));\r\n                                    userInfo = res;\r\n                                };\r\n                                param.fail = (data, code) => {\r\n                                    console.log(\"HBS.GameLogin fail = \" + code + \" - \" + data);\r\n                                };\r\n                                param.complete = () => {\r\n                                    loginResolve();\r\n                                };\r\n                                AppRt.Extern.HBS.GameLogin(param);\r\n                            }\r\n                            else {\r\n                                loginResolve();\r\n                            }\r\n                        }\r\n                        await loginWait;\r\n                        return { userInfo: userInfo };\r\n                    }\r\n                    HBS.GameLogin = GameLogin;\r\n                })(HBS = DevKit.HBS || (DevKit.HBS = {}));\r\n            })(DevKit = AppRt.DevKit || (AppRt.DevKit = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var DevKit;\r\n            (function (DevKit) {\r\n                let OPPO;\r\n                (function (OPPO) {\r\n                    let QG;\r\n                    (function (QG) {\r\n                        let loginResolve;\r\n                        let loginWait;\r\n                        let loginToken;\r\n                        let data;\r\n                        async function Login() {\r\n                            if (loginWait == null) {\r\n                                loginWait = new Promise((r) => { loginResolve = r; });\r\n                                if (DP.Basic.channel == TJ.Define.Channel.AppRt.OPPO_AppRt) {\r\n                                    let param = new AppRt.Extern.OPPO.QG.LoginParam();\r\n                                    param.success = (res) => {\r\n                                        loginToken = res.data.token;\r\n                                        data = res.data;\r\n                                    };\r\n                                    param.complete = (res) => {\r\n                                        console.log(\"QG.Login complete = \" + JSON.stringify(res));\r\n                                        loginResolve();\r\n                                    };\r\n                                    AppRt.Extern.OPPO.QG.Login(param);\r\n                                }\r\n                                else {\r\n                                    loginResolve();\r\n                                }\r\n                            }\r\n                            await loginWait;\r\n                            return { token: loginToken, userInfo: data };\r\n                        }\r\n                        QG.Login = Login;\r\n                    })(QG = OPPO.QG || (OPPO.QG = {}));\r\n                })(OPPO = DevKit.OPPO || (DevKit.OPPO = {}));\r\n            })(DevKit = AppRt.DevKit || (AppRt.DevKit = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var DevKit;\r\n            (function (DevKit) {\r\n                var OPPO;\r\n                (function (OPPO) {\r\n                    var QG;\r\n                    (function (QG) {\r\n                        function InstallShortcut(callback, source) {\r\n                            if (DP.Basic.channel != TJ.Define.Channel.AppRt.OPPO_AppRt) {\r\n                                if (callback != null)\r\n                                    callback(true);\r\n                                return;\r\n                            }\r\n                            let invoke = false;\r\n                            let param = new AppRt.Extern.OPPO.QG.CallbackParam();\r\n                            param.success = (res) => {\r\n                                invoke = true;\r\n                            };\r\n                            param.complete = (res) => {\r\n                                window.setTimeout(() => {\r\n                                    HasShortcutInstalled((has) => {\r\n                                        if (invoke) {\r\n                                            {\r\n                                                let p = new TJ.API.Analytics.Param();\r\n                                                p.id = \"OPPO.QG.InstallShortcut-\" + source;\r\n                                                TJ.API.Analytics.Event(p);\r\n                                            }\r\n                                            if (has) {\r\n                                                let p = new TJ.API.Analytics.Param();\r\n                                                p.id = \"OPPO.QG.InstallShortcut-Success-\" + source;\r\n                                                TJ.API.Analytics.Event(p);\r\n                                            }\r\n                                        }\r\n                                        if (callback != null)\r\n                                            callback(has);\r\n                                    });\r\n                                }, 500);\r\n                            };\r\n                            AppRt.Extern.OPPO.QG.InstallShortcut(param);\r\n                        }\r\n                        QG.InstallShortcut = InstallShortcut;\r\n                        function HasShortcutInstalled(callback) {\r\n                            if (DP.Basic.channel != TJ.Define.Channel.AppRt.OPPO_AppRt) {\r\n                                if (callback != null)\r\n                                    callback(false);\r\n                                return;\r\n                            }\r\n                            let has = false;\r\n                            let param = new AppRt.Extern.OPPO.QG.HasShortcutInstalledParam();\r\n                            param.success = (res) => {\r\n                                has = res;\r\n                            };\r\n                            param.complete = (res) => {\r\n                                if (has) {\r\n                                    let p = new TJ.API.Analytics.Param();\r\n                                    p.id = \"OPPO.QG.HasShortcutInstalled\";\r\n                                    TJ.API.Analytics.Event(p);\r\n                                }\r\n                                if (callback != null)\r\n                                    callback(has);\r\n                            };\r\n                            AppRt.Extern.OPPO.QG.HasShortcutInstalled(param);\r\n                        }\r\n                        QG.HasShortcutInstalled = HasShortcutInstalled;\r\n                    })(QG = OPPO.QG || (OPPO.QG = {}));\r\n                })(OPPO = DevKit.OPPO || (DevKit.OPPO = {}));\r\n            })(DevKit = AppRt.DevKit || (AppRt.DevKit = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var DevKit;\r\n            (function (DevKit) {\r\n                let TT;\r\n                (function (TT) {\r\n                    class GameRecorderClip {\r\n                        constructor() {\r\n                            this.time = Date.now();\r\n                        }\r\n                    }\r\n                    TT.GameRecorderClip = GameRecorderClip;\r\n                    class GameRecorderVideo {\r\n                        constructor() {\r\n                            this.share = false;\r\n                            this.clips = [];\r\n                            if (this.grm == null)\r\n                                return;\r\n                            this.grm.OnStart((res) => {\r\n                                this.clips = [];\r\n                                console.log(\"TT.GameRecorderVideo OnStart \" + JSON.stringify(res));\r\n                            });\r\n                            this.grm.OnStop((res) => {\r\n                                console.log(\"TT.GameRecorderVideo OnStop \" + JSON.stringify(res));\r\n                                this.videoPath = res.videoPath;\r\n                                if (this.clips.length > 0) {\r\n                                    let param = new AppRt.Extern.TT.ClipVideoParam();\r\n                                    param.path = this.videoPath;\r\n                                    param.success = (res) => {\r\n                                        console.log(\"TT.ClipVideo success \" + JSON.stringify(res));\r\n                                        this.videoPath = res.videoPath;\r\n                                    };\r\n                                    param.fail = (res) => {\r\n                                        console.log(\"TT.ClipVideo fail \" + JSON.stringify(res));\r\n                                    };\r\n                                    param.complete = (res) => {\r\n                                        console.log(\"TT.ClipVideo complete \" + JSON.stringify(res));\r\n                                        if (this.share)\r\n                                            this.Share();\r\n                                    };\r\n                                    this.grm.ClipVideo(param);\r\n                                }\r\n                                else {\r\n                                    if (this.share)\r\n                                        this.Share();\r\n                                }\r\n                            });\r\n                        }\r\n                        get grm() {\r\n                            if (DP.Basic.channel != TJ.Define.Channel.AppRt.ZJTD_AppRt)\r\n                                return null;\r\n                            return AppRt.Extern.TT.GetGameRecorderManager();\r\n                        }\r\n                        Start(duration) {\r\n                            if (this.grm == null)\r\n                                return;\r\n                            this.grm.Start(duration);\r\n                        }\r\n                        Stop(share = false) {\r\n                            if (this.grm == null)\r\n                                return;\r\n                            this.share = share;\r\n                            this.grm.Stop();\r\n                        }\r\n                        RecordClip(beforeTime, afterTime) {\r\n                            let clip = new GameRecorderClip();\r\n                            this.clips.push(clip);\r\n                            if (this.grm == null)\r\n                                return clip;\r\n                            let param = new AppRt.Extern.TT.RecordClipParam();\r\n                            param.timeRange = [beforeTime, afterTime];\r\n                            param.success = (res) => {\r\n                                console.log(\"TT.RecordClip success \" + JSON.stringify(res));\r\n                                clip.index = res.index;\r\n                            };\r\n                            param.fail = (res) => {\r\n                                console.log(\"TT.RecordClip fail \" + JSON.stringify(res));\r\n                            };\r\n                            this.grm.RecordClip(param);\r\n                            return clip;\r\n                        }\r\n                        Share(param = null) {\r\n                            if (this.grm == null)\r\n                                return;\r\n                            if (param == null) {\r\n                                param = new AppRt.Extern.TT.ShareAppMessageParam();\r\n                                param.success = (res) => {\r\n                                    console.log(\"TT.ShareAppMessage success \" + JSON.stringify(res));\r\n                                };\r\n                                param.fail = (res) => {\r\n                                    console.log(\"TT.ShareAppMessage fail \" + JSON.stringify(res));\r\n                                };\r\n                            }\r\n                            param.channel = \"video\";\r\n                            param.extra.videoPath = this.videoPath;\r\n                            param.complete = (res) => {\r\n                                console.log(\"TT.ShareAppMessage complete \" + JSON.stringify(res));\r\n                            };\r\n                            param.query = \"GameRecorderVideo=1\";\r\n                            AppRt.Extern.TT.ShareAppMessage(param);\r\n                        }\r\n                    }\r\n                    TT.GameRecorderVideo = GameRecorderVideo;\r\n                    class MoreGamesButton {\r\n                        constructor(apps, x, y, w, h, image = null) {\r\n                            console.log(\"MoreGamesButton \" + x + \" \" + y + \" \" + w + \" \" + h);\r\n                            this.CreateBtn(apps, x, y, w, h, image);\r\n                            if (this.btn == null)\r\n                                return;\r\n                            this.btn.OnTap(MoreGamesButton.OnTap);\r\n                            MoreGamesButton.buttons[this.btn.buttonId] = this;\r\n                        }\r\n                        CreateBtn(apps, x, y, w, h, image = null) {\r\n                            if (DP.Basic.channel != TJ.Define.Channel.AppRt.ZJTD_AppRt)\r\n                                return;\r\n                            let size = TJ.Engine.RuntimeInfo.windowSize;\r\n                            x = x - w / 2 + size.width / 2;\r\n                            y = -y - h / 2 + size.height / 2;\r\n                            let param = new AppRt.Extern.TT.CreateMoreGamesButtonParam();\r\n                            param.type = \"image\";\r\n                            if (image == null) {\r\n                                param.image = \"http://image.tomatojoy.cn/wu1.png\";\r\n                            }\r\n                            else {\r\n                                param.image = image;\r\n                            }\r\n                            param.style.left = x;\r\n                            param.style.top = y;\r\n                            param.style.width = w;\r\n                            param.style.height = h;\r\n                            param.style.borderWidth = 0;\r\n                            param.appLaunchOptions = apps;\r\n                            this.btn = AppRt.Extern.TT.CreateMoreGamesButton(param);\r\n                        }\r\n                        static OnTap(res) {\r\n                            let id = res.buttonId;\r\n                            let self = MoreGamesButton.buttons[id];\r\n                            if (self != null) {\r\n                                if (self.onTap != null) {\r\n                                    self.onTap(res);\r\n                                }\r\n                            }\r\n                        }\r\n                        Show() {\r\n                            if (this.btn == null)\r\n                                return;\r\n                            this.btn.Show();\r\n                        }\r\n                        Hide() {\r\n                            if (this.btn == null)\r\n                                return;\r\n                            this.btn.Hide();\r\n                        }\r\n                        Destroy() {\r\n                            if (this.btn == null)\r\n                                return;\r\n                            this.btn.OffTap(MoreGamesButton.OnTap);\r\n                            this.btn.Destroy();\r\n                        }\r\n                    }\r\n                    MoreGamesButton.buttons = {};\r\n                    TT.MoreGamesButton = MoreGamesButton;\r\n                    let loginResolve;\r\n                    let loginWait;\r\n                    let code;\r\n                    let userInfo;\r\n                    async function Login() {\r\n                        if (loginWait == null) {\r\n                            loginWait = new Promise((r) => { loginResolve = r; });\r\n                            if (DP.Basic.channel == TJ.Define.Channel.AppRt.ZJTD_AppRt) {\r\n                                let param = new AppRt.Extern.TT.LoginParam();\r\n                                param.force = false;\r\n                                param.success = (res) => {\r\n                                    code = res.code;\r\n                                };\r\n                                param.complete = (res) => {\r\n                                    console.log(\"TT.Login complete \" + JSON.stringify(res));\r\n                                    loginResolve();\r\n                                };\r\n                                AppRt.Extern.TT.Login(param);\r\n                                await loginWait;\r\n                                loginWait = new Promise((r) => { loginResolve = r; });\r\n                                let param2 = new AppRt.Extern.TT.GetUserInfoParam();\r\n                                param2.success = (res) => {\r\n                                    userInfo = res.userInfo;\r\n                                };\r\n                                param2.complete = (res) => {\r\n                                    console.log(\"TT.GetUserInfo complete \" + JSON.stringify(res));\r\n                                    loginResolve();\r\n                                };\r\n                                AppRt.Extern.TT.GetUserInfo(param2);\r\n                            }\r\n                            else {\r\n                                loginResolve();\r\n                            }\r\n                        }\r\n                        await loginWait;\r\n                        return { code: code, userInfo: userInfo };\r\n                    }\r\n                    TT.Login = Login;\r\n                })(TT = DevKit.TT || (DevKit.TT = {}));\r\n            })(DevKit = AppRt.DevKit || (AppRt.DevKit = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var DevKit;\r\n            (function (DevKit) {\r\n                let VIVO;\r\n                (function (VIVO) {\r\n                    let QG;\r\n                    (function (QG) {\r\n                        let loginResolve;\r\n                        let loginWait;\r\n                        let profile;\r\n                        async function GetProfile() {\r\n                            if (loginWait == null) {\r\n                                loginWait = new Promise((r) => { loginResolve = r; });\r\n                                if (DP.Basic.channel == TJ.Define.Channel.AppRt.VIVO_AppRt) {\r\n                                    let token;\r\n                                    let param = new AppRt.Extern.VIVO.QG.AuthorizeParam();\r\n                                    param.success = (res) => {\r\n                                        console.log(\"VIVO.QG.Authorize success = \" + JSON.stringify(res));\r\n                                        token = res.accessToken;\r\n                                    };\r\n                                    param.complete = (res) => {\r\n                                        console.log(\"VIVO.QG.Authorize complete = \" + JSON.stringify(res));\r\n                                        loginResolve();\r\n                                    };\r\n                                    AppRt.Extern.VIVO.QG.Authorize(param);\r\n                                    await loginWait;\r\n                                    loginWait = new Promise((r) => { loginResolve = r; });\r\n                                    let param2 = new AppRt.Extern.VIVO.QG.GetProfileParam();\r\n                                    param2.token = token;\r\n                                    param2.success = (res) => {\r\n                                        console.log(\"VIVO.QG.GetProfile success = \" + JSON.stringify(res));\r\n                                        profile = res;\r\n                                    };\r\n                                    param2.complete = (res) => {\r\n                                        console.log(\"VIVO.QG.GetProfile complete = \" + JSON.stringify(res));\r\n                                        loginResolve();\r\n                                    };\r\n                                    AppRt.Extern.VIVO.QG.GetProfile(param2);\r\n                                }\r\n                                else {\r\n                                    loginResolve();\r\n                                }\r\n                            }\r\n                            await loginWait;\r\n                            return { userInfo: profile };\r\n                        }\r\n                        QG.GetProfile = GetProfile;\r\n                    })(QG = VIVO.QG || (VIVO.QG = {}));\r\n                })(VIVO = DevKit.VIVO || (DevKit.VIVO = {}));\r\n            })(DevKit = AppRt.DevKit || (AppRt.DevKit = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var DevKit;\r\n            (function (DevKit) {\r\n                var VIVO;\r\n                (function (VIVO) {\r\n                    if (TJ.Engine.RuntimeInfo.platform == TJ.Define.Platform.AppRt) {\r\n                        if (DP.Basic.channel == TJ.Define.Channel.AppRt.VIVO_AppRt) {\r\n                            TJ.Common.WWW.prototype.DoSend = function (url, method, data) {\r\n                                let param = new AppRt.Extern.VIVO.QG.RequestParam();\r\n                                param.url = url;\r\n                                param.method = method.toUpperCase();\r\n                                param.data = data;\r\n                                param.dataType = \"json\";\r\n                                param.success = (res) => {\r\n                                    this._text = JSON.stringify(res.data);\r\n                                    this._resolve();\r\n                                    this.LogText();\r\n                                };\r\n                                param.fail = (error, code) => {\r\n                                    this._error = code + \" - \" + JSON.stringify(error);\r\n                                    this._resolve();\r\n                                    this.LogError();\r\n                                };\r\n                                AppRt.Extern.VIVO.QG.Request(param);\r\n                            };\r\n                        }\r\n                    }\r\n                })(VIVO = DevKit.VIVO || (DevKit.VIVO = {}));\r\n            })(DevKit = AppRt.DevKit || (AppRt.DevKit = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var DevKit;\r\n            (function (DevKit) {\r\n                let WX;\r\n                (function (WX) {\r\n                    let loginResolve;\r\n                    let loginWait;\r\n                    let code;\r\n                    let userInfo;\r\n                    async function Login() {\r\n                        if (loginWait == null) {\r\n                            loginWait = new Promise((r) => { loginResolve = r; });\r\n                            if (TJ.API.AppInfo.Channel() == TJ.Define.Channel.AppRt.WX_AppRt) {\r\n                                let param = new AppRt.Extern.WX.LoginParam();\r\n                                param.success = (res) => {\r\n                                    code = res.code;\r\n                                };\r\n                                param.complete = (res) => {\r\n                                    console.log(\"WX.Login complete \" + JSON.stringify(res));\r\n                                    loginResolve();\r\n                                };\r\n                                AppRt.Extern.WX.Login(param);\r\n                                await loginWait;\r\n                                loginWait = new Promise((r) => { loginResolve = r; });\r\n                                let param2 = new AppRt.Extern.WX.CreateUserInfoButtonParam();\r\n                                param2.type = \"image\";\r\n                                param2.style.left = 0;\r\n                                param2.style.top = 0;\r\n                                param2.style.width = TJ.Engine.RuntimeInfo.windowSize.width;\r\n                                param2.style.height = TJ.Engine.RuntimeInfo.windowSize.height;\r\n                                let btn = AppRt.Extern.WX.CreateUserInfoButton(param2);\r\n                                btn.OnTap((res) => {\r\n                                    userInfo = res.userInfo;\r\n                                    {\r\n                                        loginResolve();\r\n                                        btn.Destroy();\r\n                                    }\r\n                                });\r\n                                await loginWait;\r\n                            }\r\n                            else {\r\n                                loginResolve();\r\n                            }\r\n                        }\r\n                        await loginWait;\r\n                        return { code: code, userInfo: userInfo };\r\n                    }\r\n                    WX.Login = Login;\r\n                })(WX = DevKit.WX || (DevKit.WX = {}));\r\n            })(DevKit = AppRt.DevKit || (AppRt.DevKit = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var DevKit;\r\n            (function (DevKit) {\r\n                var Yun;\r\n                (function (Yun) {\r\n                    TJ.Common.PriorityInit.Add(10, () => {\r\n                        if (TJ.Engine.RuntimeInfo.platform != TJ.Define.Platform.AppRt)\r\n                            return;\r\n                        Login();\r\n                    });\r\n                    let loginResolve;\r\n                    let loginPromise = new Promise((r) => { loginResolve = r; });\r\n                    async function Login() {\r\n                        if (TJ.Common.SystemInfo.userGuid == null) {\r\n                            switch (TJ.API.AppInfo.Channel()) {\r\n                                case TJ.Define.Channel.AppRt.OPPO_AppRt:\r\n                                    {\r\n                                        let obj = await AppRt.DevKit.OPPO.QG.Login();\r\n                                        await AppRt.Develop.Yun.Login.OPPOLogin(obj);\r\n                                    }\r\n                                    break;\r\n                                case TJ.Define.Channel.AppRt.VIVO_AppRt:\r\n                                    {\r\n                                        let obj = await AppRt.DevKit.VIVO.QG.GetProfile();\r\n                                        await AppRt.Develop.Yun.Login.VIVOLogin(obj);\r\n                                    }\r\n                                    break;\r\n                                case TJ.Define.Channel.AppRt.ZJTD_AppRt:\r\n                                    {\r\n                                        let obj = await AppRt.DevKit.TT.Login();\r\n                                        await AppRt.Develop.Yun.Login.TTLogin(obj);\r\n                                    }\r\n                                    break;\r\n                                case TJ.Define.Channel.AppRt.WX_AppRt:\r\n                                    {\r\n                                        let obj = await AppRt.DevKit.WX.Login();\r\n                                        await AppRt.Develop.Yun.Login.WXLogin(obj);\r\n                                    }\r\n                                    break;\r\n                                case TJ.Define.Channel.AppRt.QTT_AppRt:\r\n                                    {\r\n                                        let args = TJ.Common.Url.GetArgs();\r\n                                        await AppRt.Develop.Yun.Login.QTTLogin(args);\r\n                                    }\r\n                                    break;\r\n                                case TJ.Define.Channel.AppRt.HUAWEI_AppRt:\r\n                                    {\r\n                                        let obj = await AppRt.DevKit.HBS.GameLogin();\r\n                                        await AppRt.Develop.Yun.Login.HWLogin(obj);\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        }\r\n                        loginResolve();\r\n                        TJ.Develop.ReYun.Register(AppRt.SDK.ReYun.Manager.reyunData);\r\n                        TJ.Develop.ReYun.Loggedin(AppRt.SDK.ReYun.Manager.reyunData);\r\n                    }\r\n                    async function SyncStorage() {\r\n                        await loginPromise;\r\n                        await TJ.Develop.Yun.Prefs.Player.Sync();\r\n                    }\r\n                    Yun.SyncStorage = SyncStorage;\r\n                })(Yun = DevKit.Yun || (DevKit.Yun = {}));\r\n            })(DevKit = AppRt.DevKit || (AppRt.DevKit = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var SDK;\r\n            (function (SDK) {\r\n                var _4399;\r\n                (function (_4399) {\r\n                    TJ.Common.PriorityInit.Add(0, () => {\r\n                        if (TJ.Engine.RuntimeInfo.platform != TJ.Define.Platform.AppRt)\r\n                            return;\r\n                        switch (DP.Basic.channel) {\r\n                            case TJ.Define.Channel.AppRt._4399_AppRt:\r\n                                TJ.Common.Component.Manager.AddComponent(AppInfo).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    TJ.Common.PriorityInit.Add(10, () => {\r\n                        if (TJ.Engine.RuntimeInfo.platform != TJ.Define.Platform.AppRt)\r\n                            return;\r\n                        switch (DP.Basic.channel) {\r\n                            case TJ.Define.Channel.AppRt._4399_AppRt:\r\n                                TJ.Common.Component.Manager.AddComponent(Manager).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    class AppInfo extends TJ.API.AppInfo.IAppInfo {\r\n                        Channel() {\r\n                            if (AppRt.Extern._4399.Exist()) {\r\n                                return DP.Basic.channel;\r\n                            }\r\n                            return null;\r\n                        }\r\n                    }\r\n                    class Manager extends TJ.Common.Component.Interface {\r\n                        OnInit() {\r\n                            if (!AppRt.Extern._4399.Exist())\r\n                                return;\r\n                            let script_sdk = document.createElement(\"script\");\r\n                            script_sdk.setAttribute(\"type\", \"text/javascript\");\r\n                            script_sdk.src = \"http://h.api.4399.com/h5mini-2.0/h5api-interface.php\";\r\n                            document.body.appendChild(script_sdk);\r\n                            document.title = TJ.API.AppInfo.ProductName();\r\n                            TJ.Common.Component.Manager.AddComponent(Ads).DoInit();\r\n                        }\r\n                    }\r\n                    _4399.Manager = Manager;\r\n                    class Ads extends AppRt.API.AdPoly.IAdPoly {\r\n                        OnInit() {\r\n                            this.video = new Video();\r\n                            this.video.Init();\r\n                        }\r\n                        ADReady(param, grade) {\r\n                            switch (grade) {\r\n                                case AppRt.API.AdPoly.Grade.reward:\r\n                                    if (this.video != null && this.video.Ready()) {\r\n                                        return true;\r\n                                    }\r\n                                    break;\r\n                            }\r\n                            return false;\r\n                        }\r\n                        ShowAD(param, grade) {\r\n                            switch (grade) {\r\n                                case AppRt.API.AdPoly.Grade.reward:\r\n                                    param.cbi.Add(TJ.Define.Event.Complete, () => { param.cbi.Run(TJ.Define.Event.Reward); param.cbi.Run(TJ.Define.Event.Close); });\r\n                                    this.video.Show(param);\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }\r\n                    class Video {\r\n                        constructor() {\r\n                            this.loaded = false;\r\n                            this.loadHandle = 0;\r\n                        }\r\n                        Init(...args) {\r\n                            this.Load(1000);\r\n                        }\r\n                        Ready() {\r\n                            return this.loaded;\r\n                        }\r\n                        Load(delay) {\r\n                            clearTimeout(this.loadHandle);\r\n                            this.loadHandle = window.setTimeout(() => {\r\n                                AppRt.Extern._4399.CanPlayAd((res) => {\r\n                                    console.log(\"_4399.Video.CanPlayAd \" + JSON.stringify(res));\r\n                                    this.loaded = res.canPlayAd;\r\n                                    if (!this.loaded) {\r\n                                        this.Load(5000);\r\n                                    }\r\n                                });\r\n                            }, delay);\r\n                        }\r\n                        Show(param) {\r\n                            AppRt.Extern._4399.PlayAd((res) => {\r\n                                console.log(\"_4399.Video.PlayAd \" + JSON.stringify(res));\r\n                                switch (res.code) {\r\n                                    case 10000:\r\n                                        param.cbi.Run(TJ.Define.Event.Expose);\r\n                                        break;\r\n                                    case 10001:\r\n                                        param.cbi.Run(TJ.Define.Event.Complete);\r\n                                        this.loaded = false;\r\n                                        this.Load(1000);\r\n                                        break;\r\n                                    default:\r\n                                        this.loaded = false;\r\n                                        this.Load(1000);\r\n                                        break;\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                })(_4399 = SDK._4399 || (SDK._4399 = {}));\r\n            })(SDK = AppRt.SDK || (AppRt.SDK = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var SDK;\r\n            (function (SDK) {\r\n                var AdService;\r\n                (function (AdService) {\r\n                    TJ.Common.PriorityInit.Add(0, () => {\r\n                        switch (TJ.Engine.RuntimeInfo.platform) {\r\n                            case TJ.Define.Platform.AppRt:\r\n                                TJ.Common.Component.Manager.AddComponent(OAdService).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    class OAdService extends TJ.API.AdService.IAdService {\r\n                        ShowBanner(param) {\r\n                            {\r\n                                lastBannerShowTime = Date.now();\r\n                                ShowAds(param, AppRt.API.AdPoly.Grade.banner);\r\n                            }\r\n                        }\r\n                        RemoveBanner(param) {\r\n                            if (lastBannerIAds != null) {\r\n                                lastBannerIAds.RemoveAD(param, AppRt.API.AdPoly.Grade.banner);\r\n                                lastBannerIAds = null;\r\n                            }\r\n                        }\r\n                        NormalReady(param) {\r\n                            return ReadyAds(param, AppRt.API.AdPoly.Grade.normal).length > 0;\r\n                        }\r\n                        ShowNormal(param) {\r\n                            ShowAds(param, AppRt.API.AdPoly.Grade.normal);\r\n                        }\r\n                        RewardReady(param) {\r\n                            return ReadyAds(param, AppRt.API.AdPoly.Grade.reward).length > 0;\r\n                        }\r\n                        ShowReward(param) {\r\n                            let callback = param.cbi.Clone();\r\n                            if (param.extraAd) {\r\n                                param.cbi.Add(TJ.Define.Event.Close, () => { this.ShowNormal(new TJ.API.AdService.Param()); });\r\n                            }\r\n                            param.cbi.Set(TJ.Define.Event.NoAds, () => {\r\n                                callback.Run(TJ.Define.Event.NoAds);\r\n                            });\r\n                            ShowAds(param, AppRt.API.AdPoly.Grade.reward);\r\n                        }\r\n                    }\r\n                    let lastBannerIAds;\r\n                    let lastBannerShowTime = 0;\r\n                    function ReadyAds(param, grade) {\r\n                        let ads = TJ.Common.Component.Manager.GetComponentsWithInit(AppRt.API.AdPoly.IAdPoly);\r\n                        console.log(\"ads = \" + ads.length);\r\n                        let readies = [];\r\n                        for (let item of ads) {\r\n                            let ready = item.ADReady(param, grade);\r\n                            console.log((typeof item) + \" ready = \" + ready);\r\n                            if (ready) {\r\n                                readies.push(item);\r\n                            }\r\n                        }\r\n                        return readies;\r\n                    }\r\n                    function ShowAds(param, grade) {\r\n                        let readies = ReadyAds(param, grade);\r\n                        QueueShowAd(readies, param, grade);\r\n                    }\r\n                    function QueueShowAd(readies, param, grade) {\r\n                        if (readies.length > 0) {\r\n                            let c = readies.shift();\r\n                            let callback = param.cbi.Clone();\r\n                            param.cbi.Add(TJ.Define.Event.Expose, () => {\r\n                                console.log(c, \"曝光\");\r\n                            });\r\n                            param.cbi.Set(TJ.Define.Event.NoAds, () => {\r\n                                param.cbi = callback;\r\n                                QueueShowAd(readies, param, grade);\r\n                            });\r\n                            console.log(c, \"show ad\");\r\n                            switch (grade) {\r\n                                case AppRt.API.AdPoly.Grade.banner:\r\n                                    if (lastBannerIAds != null) {\r\n                                        if (lastBannerIAds == c)\r\n                                            param.refresh = true;\r\n                                        lastBannerIAds.RemoveAD(param, AppRt.API.AdPoly.Grade.banner);\r\n                                    }\r\n                                    lastBannerIAds = c;\r\n                                    break;\r\n                            }\r\n                            c.ShowAD(param, grade);\r\n                        }\r\n                        else {\r\n                            console.log(AppRt.API.AdPoly.Grade[grade] + \" no ads\");\r\n                            param.cbi.Run(TJ.Define.Event.NoAds);\r\n                        }\r\n                    }\r\n                })(AdService = SDK.AdService || (SDK.AdService = {}));\r\n            })(SDK = AppRt.SDK || (AppRt.SDK = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var SDK;\r\n            (function (SDK) {\r\n                var Adwending;\r\n                (function (Adwending) {\r\n                    TJ.Common.PriorityInit.Add(0, () => {\r\n                        if (TJ.Engine.RuntimeInfo.platform != TJ.Define.Platform.AppRt)\r\n                            return;\r\n                        switch (DP.Basic.channel) {\r\n                            case TJ.Define.Channel.AppRt.SY_AppRt:\r\n                                TJ.Common.Component.Manager.AddComponent(AppInfo).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    TJ.Common.PriorityInit.Add(10, () => {\r\n                        if (TJ.Engine.RuntimeInfo.platform != TJ.Define.Platform.AppRt)\r\n                            return;\r\n                        switch (DP.Basic.channel) {\r\n                            case TJ.Define.Channel.AppRt.SY_AppRt:\r\n                                TJ.Common.Component.Manager.AddComponent(Manager).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    class AppInfo extends TJ.API.AppInfo.IAppInfo {\r\n                        Channel() {\r\n                            if (AppRt.Extern.Adwending.Exist()) {\r\n                                return DP.Basic.channel;\r\n                            }\r\n                            return null;\r\n                        }\r\n                    }\r\n                    class Manager extends TJ.Common.Component.Interface {\r\n                        OnInit() {\r\n                            if (!AppRt.Extern.Adwending.Exist())\r\n                                return;\r\n                            TJ.Common.Component.Manager.AddComponent(Ads).DoInit();\r\n                        }\r\n                    }\r\n                    Adwending.Manager = Manager;\r\n                    class Ads extends AppRt.API.AdPoly.IAdPoly {\r\n                        OnInit() {\r\n                            this.video = new Video();\r\n                            this.video.Init(DP.Adwending.username, DP.Adwending.gameid);\r\n                        }\r\n                        ADReady(param, grade) {\r\n                            switch (grade) {\r\n                                case AppRt.API.AdPoly.Grade.reward:\r\n                                    if (this.video != null) {\r\n                                        return true;\r\n                                    }\r\n                                    break;\r\n                            }\r\n                            return false;\r\n                        }\r\n                        ShowAD(param, grade) {\r\n                            switch (grade) {\r\n                                case AppRt.API.AdPoly.Grade.reward:\r\n                                    param.cbi.Add(TJ.Define.Event.Complete, () => { param.cbi.Run(TJ.Define.Event.Reward); param.cbi.Run(TJ.Define.Event.Close); });\r\n                                    this.video.Show(param);\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }\r\n                    class Video {\r\n                        Init(...args) {\r\n                            this.username = args[0];\r\n                            this.gameid = args[1];\r\n                            AppRt.Extern.Adwending.Message((res) => {\r\n                                console.log(\"Adwending.Video.Message = \" + JSON.stringify(res));\r\n                                if (this.param == null)\r\n                                    return;\r\n                                if (res) {\r\n                                    this.param.cbi.Run(TJ.Define.Event.Complete);\r\n                                }\r\n                                else {\r\n                                    this.param.cbi.Run(TJ.Define.Event.NoAds);\r\n                                }\r\n                                this.param = null;\r\n                            });\r\n                        }\r\n                        Show(param) {\r\n                            this.param = param;\r\n                            let ap = new AppRt.Extern.Adwending.Parm();\r\n                            ap.username = this.username;\r\n                            ap.gameid = this.gameid;\r\n                            ap.subtype = \"X_INSPIRE\";\r\n                            ap.isheng = 0;\r\n                            ap.reward = 0;\r\n                            AppRt.Extern.Adwending.PlayVideo(ap);\r\n                        }\r\n                    }\r\n                })(Adwending = SDK.Adwending || (SDK.Adwending = {}));\r\n            })(SDK = AppRt.SDK || (AppRt.SDK = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var SDK;\r\n            (function (SDK) {\r\n                var AppInfo;\r\n                (function (AppInfo) {\r\n                    TJ.Common.PriorityInit.Add(0, () => {\r\n                        switch (TJ.Engine.RuntimeInfo.platform) {\r\n                            case TJ.Define.Platform.AppRt:\r\n                                TJ.Common.Component.Manager.AddComponent(OAppInfo).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    class OAppInfo extends TJ.API.AppInfo.IAppInfo {\r\n                        AppGuid() {\r\n                            return DP.Basic.appGuid;\r\n                        }\r\n                        ProductName() {\r\n                            return DP.Basic.productName;\r\n                        }\r\n                        PackageName() {\r\n                            return DP.Basic.packageName;\r\n                        }\r\n                        VersionName() {\r\n                            return DP.Basic.versionName;\r\n                        }\r\n                        VersionCode() {\r\n                            return DP.Basic.versionCode;\r\n                        }\r\n                    }\r\n                })(AppInfo = SDK.AppInfo || (SDK.AppInfo = {}));\r\n            })(SDK = AppRt.SDK || (AppRt.SDK = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var SDK;\r\n            (function (SDK) {\r\n                var HBS;\r\n                (function (HBS) {\r\n                    TJ.Common.PriorityInit.Add(0, () => {\r\n                        if (TJ.Engine.RuntimeInfo.platform != TJ.Define.Platform.AppRt)\r\n                            return;\r\n                        switch (DP.Basic.channel) {\r\n                            case TJ.Define.Channel.AppRt.HUAWEI_AppRt:\r\n                                TJ.Common.Component.Manager.AddComponent(AppInfo).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    TJ.Common.PriorityInit.Add(10, () => {\r\n                        if (TJ.Engine.RuntimeInfo.platform != TJ.Define.Platform.AppRt)\r\n                            return;\r\n                        switch (DP.Basic.channel) {\r\n                            case TJ.Define.Channel.AppRt.HUAWEI_AppRt:\r\n                                TJ.Common.Component.Manager.AddComponent(Manager).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    class AppInfo extends TJ.API.AppInfo.IAppInfo {\r\n                        Channel() {\r\n                            if (AppRt.Extern.HBS.Exist()) {\r\n                                return DP.Basic.channel;\r\n                            }\r\n                            return null;\r\n                        }\r\n                    }\r\n                    class Manager extends TJ.Common.Component.Interface {\r\n                        OnInit() {\r\n                            if (!AppRt.Extern.HBS.Exist())\r\n                                return;\r\n                            TJ.Common.Component.Manager.AddComponent(Quit).DoInit();\r\n                            {\r\n                                let param = {};\r\n                                param.app = DP.Basic.appGuid;\r\n                                param.data = AppRt.Extern.HBS.GetLaunchOptionsSync();\r\n                                AppRt.Develop.Ground.Api.SystemEvent(\"LaunchOptions\", \"HBS\", param);\r\n                                console.log(\"HBS.GetLaunchOptionsSync \" + JSON.stringify(param.data));\r\n                            }\r\n                        }\r\n                    }\r\n                    HBS.Manager = Manager;\r\n                    class Quit extends TJ.API.AppCtl.IAppCtl {\r\n                        Quit() {\r\n                            let param = new AppRt.Extern.HBS.CallbackParam();\r\n                            param.success = (res) => { console.log(\"HBS.ExitApplication success = \" + JSON.stringify(res)); };\r\n                            param.fail = (res) => { console.log(\"HBS.ExitApplication fail = \" + JSON.stringify(res)); };\r\n                            param.complete = (res) => { console.log(\"HBS.ExitApplication complete = \" + JSON.stringify(res)); };\r\n                            AppRt.Extern.HBS.ExitApplication(param);\r\n                        }\r\n                    }\r\n                })(HBS = SDK.HBS || (SDK.HBS = {}));\r\n            })(SDK = AppRt.SDK || (AppRt.SDK = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var SDK;\r\n            (function (SDK) {\r\n                var OPPO;\r\n                (function (OPPO) {\r\n                    var QG;\r\n                    (function (QG) {\r\n                        TJ.Common.PriorityInit.Add(0, () => {\r\n                            if (TJ.Engine.RuntimeInfo.platform != TJ.Define.Platform.AppRt)\r\n                                return;\r\n                            switch (DP.Basic.channel) {\r\n                                case TJ.Define.Channel.AppRt.OPPO_AppRt:\r\n                                    TJ.Common.Component.Manager.AddComponent(AppInfo).DoInit();\r\n                                    break;\r\n                            }\r\n                        });\r\n                        TJ.Common.PriorityInit.Add(10, () => {\r\n                            if (TJ.Engine.RuntimeInfo.platform != TJ.Define.Platform.AppRt)\r\n                                return;\r\n                            switch (DP.Basic.channel) {\r\n                                case TJ.Define.Channel.AppRt.OPPO_AppRt:\r\n                                    TJ.Common.Component.Manager.AddComponent(Manager).DoInit();\r\n                                    break;\r\n                            }\r\n                        });\r\n                        class AppInfo extends TJ.API.AppInfo.IAppInfo {\r\n                            Channel() {\r\n                                if (AppRt.Extern.OPPO.QG.Exist()) {\r\n                                    return DP.Basic.channel;\r\n                                }\r\n                                return null;\r\n                            }\r\n                        }\r\n                        class Manager extends TJ.Common.Component.Interface {\r\n                            OnInit() {\r\n                                if (!AppRt.Extern.OPPO.QG.Exist())\r\n                                    return;\r\n                                TJ.Common.Component.Manager.AddComponent(Promo).DoInit();\r\n                                TJ.Common.Component.Manager.AddComponent(Vibrate).DoInit();\r\n                                {\r\n                                    let param = new AppRt.Extern.OPPO.QG.InitAdServiceParam();\r\n                                    param.appId = DP.OPPO.QG.appId;\r\n                                    param.success = (res) => {\r\n                                        if (res.code == 0) {\r\n                                            TJ.Common.Component.Manager.AddComponent(Ads).DoInit();\r\n                                        }\r\n                                    };\r\n                                    param.complete = (res) => {\r\n                                        console.log(\"OPPO.QG.InitAdService \" + JSON.stringify(res));\r\n                                    };\r\n                                    AppRt.Extern.OPPO.QG.InitAdService(param);\r\n                                }\r\n                                {\r\n                                    let options = AppRt.Extern.OPPO.QG.GetLaunchOptionsSync();\r\n                                    AppRt.Develop.TA.LaunchOptions(options);\r\n                                    console.log(\"OPPO.QG.GetLaunchOptionsSync \" + JSON.stringify(options));\r\n                                }\r\n                            }\r\n                        }\r\n                        QG.Manager = Manager;\r\n                        class Vibrate extends TJ.API.Vibrate.IVibrate {\r\n                            Short() {\r\n                                AppRt.Extern.OPPO.QG.VibrateShort(new AppRt.Extern.OPPO.QG.CallbackParam());\r\n                            }\r\n                            Long() {\r\n                                AppRt.Extern.OPPO.QG.VibrateLong(new AppRt.Extern.OPPO.QG.CallbackParam());\r\n                            }\r\n                            Time(seconds) {\r\n                                if (seconds < 0.1) {\r\n                                    this.Short();\r\n                                }\r\n                                else {\r\n                                    this.Long();\r\n                                }\r\n                            }\r\n                        }\r\n                        class Promo extends TJ.API.Promo.IPromo {\r\n                            Pop(param) {\r\n                                let p = new AppRt.Extern.OPPO.QG.NavigateToMiniGameParam();\r\n                                p.pkgName = param.appPackage;\r\n                                p.extraData = param.extraData;\r\n                                p.success = (res) => {\r\n                                    param.cbi.Run(TJ.Define.Event.Success);\r\n                                };\r\n                                p.complete = (res) => {\r\n                                    console.log(\"OPPO.QG.NavigateToMiniGame complete\", JSON.stringify(res));\r\n                                };\r\n                                AppRt.Extern.OPPO.QG.NavigateToMiniGame(p);\r\n                            }\r\n                        }\r\n                        class Ads extends AppRt.API.AdPoly.IAdPoly {\r\n                            constructor() {\r\n                                super(...arguments);\r\n                                this.insertType = 0;\r\n                            }\r\n                            OnInit() {\r\n                                if (DP.OPPO.QG.bannerId != null) {\r\n                                    this.banner = new Banner();\r\n                                    this.banner.Init(DP.OPPO.QG.bannerId);\r\n                                }\r\n                                if (DP.OPPO.QG.insertId != null) {\r\n                                    this.insert = new Insert();\r\n                                    this.insert.Init(DP.OPPO.QG.insertId);\r\n                                }\r\n                                if (DP.OPPO.QG.videoId != null) {\r\n                                    this.video = new Video();\r\n                                    this.video.Init(DP.OPPO.QG.videoId);\r\n                                }\r\n                                if (DP.OPPO.QG.nativeCustomInsert != null) {\r\n                                    this.customInsert = new CustomInsert();\r\n                                    this.customInsert.Init(DP.OPPO.QG.nativeCustomInsert);\r\n                                }\r\n                                if (DP.OPPO.QG.nativeId = null) {\r\n                                    window.setTimeout(() => {\r\n                                        TJ.Common.Component.Manager.AddComponent(NativeAd).DoInit();\r\n                                    }, 1000);\r\n                                }\r\n                            }\r\n                            static get insertRecordCount() {\r\n                                return GetRecord(this.insertRecordKey).count;\r\n                            }\r\n                            static set insertRecordCount(value) {\r\n                                let record = GetRecord(this.insertRecordKey);\r\n                                record.count = value;\r\n                                SetRecord(this.insertRecordKey, record);\r\n                            }\r\n                            ADReady(param, grade) {\r\n                                switch (grade) {\r\n                                    case AppRt.API.AdPoly.Grade.banner:\r\n                                        if (this.banner != null) {\r\n                                            return true;\r\n                                        }\r\n                                        break;\r\n                                    case AppRt.API.AdPoly.Grade.normal:\r\n                                        if (Ads.lastInsertShowTime > Date.now() - 60 * 1000) {\r\n                                            return false;\r\n                                        }\r\n                                        if (Ads.insertRecordCount >= 8) {\r\n                                            return false;\r\n                                        }\r\n                                        if (this.customInsert != null && this.customInsert.Ready(param)) {\r\n                                            this.insertType = 2;\r\n                                            return true;\r\n                                        }\r\n                                        if (this.insert != null && this.insert.Ready()) {\r\n                                            this.insertType = 1;\r\n                                            return true;\r\n                                        }\r\n                                        break;\r\n                                    case AppRt.API.AdPoly.Grade.reward:\r\n                                        if (this.video != null && this.video.Ready()) {\r\n                                            return true;\r\n                                        }\r\n                                        break;\r\n                                }\r\n                                return false;\r\n                            }\r\n                            ShowAD(param, grade) {\r\n                                switch (grade) {\r\n                                    case AppRt.API.AdPoly.Grade.banner:\r\n                                        this.banner.Show(param);\r\n                                        if (param.cbi != null) {\r\n                                            param.cbi.Run(TJ.Define.Event.Expose);\r\n                                        }\r\n                                        break;\r\n                                    case AppRt.API.AdPoly.Grade.normal:\r\n                                        this.banner.Remove(new TJ.API.AdService.Param());\r\n                                        switch (this.insertType) {\r\n                                            case 1:\r\n                                                this.insert.Show(param);\r\n                                                break;\r\n                                            case 2:\r\n                                                this.customInsert.Show(param);\r\n                                                break;\r\n                                        }\r\n                                        Ads.insertRecordCount++;\r\n                                        Ads.lastInsertShowTime = Date.now();\r\n                                        break;\r\n                                    case AppRt.API.AdPoly.Grade.reward:\r\n                                        param.cbi.Add(TJ.Define.Event.Complete, () => { param.cbi.Run(TJ.Define.Event.Reward); });\r\n                                        this.video.Show(param);\r\n                                        break;\r\n                                }\r\n                            }\r\n                            RemoveAD(param, grade) {\r\n                                switch (grade) {\r\n                                    case AppRt.API.AdPoly.Grade.banner:\r\n                                        this.banner.Remove(param);\r\n                                        break;\r\n                                }\r\n                            }\r\n                        }\r\n                        Ads.lastInsertShowTime = 0;\r\n                        Ads.insertRecordKey = \"OPPO.QG.Insert.Record\";\r\n                        class Banner {\r\n                            static get recordCount() {\r\n                                return GetRecord(this.recordKey).count;\r\n                            }\r\n                            static set recordCount(value) {\r\n                                let record = GetRecord(this.recordKey);\r\n                                record.count = value;\r\n                                SetRecord(this.recordKey, record);\r\n                            }\r\n                            Init(...args) {\r\n                                this.posId = args[0];\r\n                            }\r\n                            Show(param) {\r\n                                if (param.refresh && Banner.showing)\r\n                                    return;\r\n                                console.log(\"Banner.recordCount = \" + Banner.recordCount);\r\n                                if (Banner.recordCount >= 5)\r\n                                    return;\r\n                                this.Remove(param);\r\n                                this.bannerAd = AppRt.Extern.OPPO.QG.CreateBannerAd(this.posId);\r\n                                this.bannerAd.OnShow(this.OnShow);\r\n                                this.bannerAd.OnHide(this.OnHide);\r\n                                this.bannerAd.OnError(this.OnError);\r\n                                this.bannerAd.Show();\r\n                            }\r\n                            Remove(param) {\r\n                                if (!param.refresh) {\r\n                                    if (this.bannerAd != null) {\r\n                                        this.bannerAd.OffShow(this.OnShow);\r\n                                        this.bannerAd.OffHide(this.OnHide);\r\n                                        this.bannerAd.OffError(this.OnError);\r\n                                        this.bannerAd.Destroy();\r\n                                        this.bannerAd = null;\r\n                                        Banner.showing = false;\r\n                                    }\r\n                                }\r\n                            }\r\n                            OnShow(res) {\r\n                                console.log(\"OPPO.QG.Banner.OnShow \" + JSON.stringify(res));\r\n                                Banner.showing = true;\r\n                            }\r\n                            OnHide(res) {\r\n                                console.log(\"OPPO.QG.Banner.OnHide \" + JSON.stringify(res));\r\n                                Banner.showing = false;\r\n                                Banner.recordCount++;\r\n                            }\r\n                            OnError(res) {\r\n                                console.log(\"OPPO.QG.Banner.OnError \" + JSON.stringify(res));\r\n                            }\r\n                        }\r\n                        Banner.recordKey = \"OPPO.QG.Banner.Record\";\r\n                        Banner.showing = false;\r\n                        class Insert {\r\n                            constructor() {\r\n                                this.loaded = false;\r\n                                this.loadHandle = 0;\r\n                            }\r\n                            Init(...args) {\r\n                                this.posId = args[0];\r\n                                this.insertAd = AppRt.Extern.OPPO.QG.CreateInsertAd(this.posId);\r\n                                this.insertAd.OnLoad((res) => {\r\n                                    console.log(\"OPPO.QG.Insert.OnLoad \" + JSON.stringify(res));\r\n                                    this.loaded = true;\r\n                                });\r\n                                this.insertAd.OnShow((res) => {\r\n                                    console.log(\"OPPO.QG.Insert.OnShow \" + JSON.stringify(res));\r\n                                    this.loaded = false;\r\n                                    this.Load(10000);\r\n                                    this.param.cbi.Run(TJ.Define.Event.Expose);\r\n                                });\r\n                                this.insertAd.OnError((res) => {\r\n                                    console.log(\"OPPO.QG.Insert.OnError \" + JSON.stringify(res));\r\n                                    this.Load(5000);\r\n                                });\r\n                                this.Load(1000);\r\n                            }\r\n                            Load(delay) {\r\n                                clearTimeout(this.loadHandle);\r\n                                this.loadHandle = window.setTimeout(() => {\r\n                                    this.insertAd.Load();\r\n                                }, delay);\r\n                            }\r\n                            Ready() {\r\n                                return this.loaded;\r\n                            }\r\n                            Show(param) {\r\n                                this.param = param;\r\n                                this.insertAd.Show();\r\n                            }\r\n                        }\r\n                        class Video {\r\n                            constructor() {\r\n                                this.loaded = false;\r\n                                this.loadHandle = 0;\r\n                            }\r\n                            Init(...args) {\r\n                                this.posId = args[0];\r\n                                this.videoAd = AppRt.Extern.OPPO.QG.CreateRewardedVideoAd(this.posId);\r\n                                this.videoAd.OnLoad((res) => {\r\n                                    console.log(\"OPPO.QG.Video.OnLoad \" + JSON.stringify(res));\r\n                                    this.loaded = true;\r\n                                });\r\n                                this.videoAd.OnVideoStart((res) => {\r\n                                    console.log(\"OPPO.QG.Video.OnVideoStart \" + JSON.stringify(res));\r\n                                    this.loaded = false;\r\n                                    this.param.cbi.Run(TJ.Define.Event.Expose);\r\n                                });\r\n                                this.videoAd.OnError((res) => {\r\n                                    console.log(\"OPPO.QG.Video.OnError \" + JSON.stringify(res));\r\n                                    this.Load(5000);\r\n                                });\r\n                                this.videoAd.OnRewarded((res) => {\r\n                                    console.log(\"OPPO.QG.Video.OnRewarded \" + JSON.stringify(res));\r\n                                    this.param.cbi.Run(TJ.Define.Event.Complete);\r\n                                });\r\n                                this.videoAd.OnClose((res) => {\r\n                                    console.log(\"OPPO.QG.Video.OnClose \" + JSON.stringify(res));\r\n                                    this.Load(1000);\r\n                                    this.param.cbi.Run(TJ.Define.Event.Close);\r\n                                });\r\n                                this.Load(1000);\r\n                            }\r\n                            Load(delay) {\r\n                                clearTimeout(this.loadHandle);\r\n                                this.loadHandle = window.setTimeout(() => {\r\n                                    this.videoAd.Load();\r\n                                }, delay);\r\n                            }\r\n                            Ready() {\r\n                                return this.loaded;\r\n                            }\r\n                            Show(param) {\r\n                                this.param = param;\r\n                                this.videoAd.Show();\r\n                            }\r\n                        }\r\n                        class CustomInsert {\r\n                            Init(...args) {\r\n                                this.posId = args[0];\r\n                                this.nad = new NativeAdHelper(this.posId);\r\n                            }\r\n                            Ready(param) {\r\n                                return this.nad.Peek() != null && param.onNative != null;\r\n                            }\r\n                            Show(param) {\r\n                                let data = this.nad.Pop();\r\n                                param.onNative(data);\r\n                            }\r\n                        }\r\n                        class NativeAd extends TJ.API.AdService.IAdService {\r\n                            OnInit() {\r\n                                this.nad = new NativeAdHelper(DP.OPPO.QG.nativeId);\r\n                            }\r\n                            LoadNative(param) {\r\n                                return this.nad.Pop();\r\n                            }\r\n                        }\r\n                        class NativeAdHelper {\r\n                            constructor(posId) {\r\n                                this.list = [];\r\n                                this.loadHandle = 0;\r\n                                this.nativeAd = AppRt.Extern.OPPO.QG.CreateNativeAd(posId);\r\n                                this.nativeAd.OnLoad((res) => {\r\n                                    for (let data of res.adList) {\r\n                                        let item = new TJ.API.AdService.NativeItem();\r\n                                        let adId = data.adId;\r\n                                        item.OnShow = () => {\r\n                                            this.nativeAd.ReportAdShow(adId);\r\n                                        };\r\n                                        item.OnClick = () => {\r\n                                            this.nativeAd.ReportAdClick(adId);\r\n                                        };\r\n                                        item.title = data.title;\r\n                                        item.desc = data.desc;\r\n                                        item.logoUrl = data.logoUrl;\r\n                                        if (data.iconUrlList != null && data.iconUrlList.length > 0) {\r\n                                            item.iconUrl = data.iconUrlList[0];\r\n                                        }\r\n                                        if (data.imgUrlList != null && data.imgUrlList.length > 0) {\r\n                                            item.imgUrl = data.imgUrlList[0];\r\n                                        }\r\n                                        this.list.push(item);\r\n                                    }\r\n                                    this.Load(5000);\r\n                                });\r\n                                this.nativeAd.OnError((res) => {\r\n                                    console.log(\"OPPO.QG.NativeAd.OnError \" + JSON.stringify(res));\r\n                                    this.Load(5000);\r\n                                });\r\n                                this.Load(0);\r\n                            }\r\n                            Load(delay) {\r\n                                clearTimeout(this.loadHandle);\r\n                                this.loadHandle = window.setTimeout(() => {\r\n                                    if (this.list.length < 1) {\r\n                                        this.nativeAd.Load();\r\n                                    }\r\n                                }, delay);\r\n                            }\r\n                            Peek() {\r\n                                if (this.list.length > 0) {\r\n                                    return this.list[0];\r\n                                }\r\n                                return null;\r\n                            }\r\n                            Pop() {\r\n                                let item = this.Peek();\r\n                                if (item != null) {\r\n                                    this.list.splice(0, 1);\r\n                                    this.Load(5000);\r\n                                }\r\n                                return item;\r\n                            }\r\n                        }\r\n                        function GetRecord(key) {\r\n                            let value = TJ.Common.Prefs.System.Get(key);\r\n                            let date = new Date();\r\n                            let y = date.getFullYear();\r\n                            let m = date.getMonth() + 1;\r\n                            let d = date.getDate();\r\n                            let today = y * 10000 + m * 100 + d;\r\n                            if (value == null || value.date < today) {\r\n                                value = { count: 0, date: today };\r\n                            }\r\n                            return value;\r\n                        }\r\n                        function SetRecord(key, value) {\r\n                            TJ.Common.Prefs.System.Set(key, value);\r\n                        }\r\n                    })(QG = OPPO.QG || (OPPO.QG = {}));\r\n                })(OPPO = SDK.OPPO || (SDK.OPPO = {}));\r\n            })(SDK = AppRt.SDK || (AppRt.SDK = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var SDK;\r\n            (function (SDK) {\r\n                var QQ;\r\n                (function (QQ) {\r\n                    TJ.Common.PriorityInit.Add(0, () => {\r\n                        if (TJ.Engine.RuntimeInfo.platform != TJ.Define.Platform.AppRt)\r\n                            return;\r\n                        switch (DP.Basic.channel) {\r\n                            case TJ.Define.Channel.AppRt.SQ_AppRt:\r\n                                TJ.Common.Component.Manager.AddComponent(AppInfo).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    TJ.Common.PriorityInit.Add(10, () => {\r\n                        if (TJ.Engine.RuntimeInfo.platform != TJ.Define.Platform.AppRt)\r\n                            return;\r\n                        switch (DP.Basic.channel) {\r\n                            case TJ.Define.Channel.AppRt.SQ_AppRt:\r\n                                TJ.Common.Component.Manager.AddComponent(Manager).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    class AppInfo extends TJ.API.AppInfo.IAppInfo {\r\n                        Channel() {\r\n                            if (AppRt.Extern.QQ.Exist()) {\r\n                                return DP.Basic.channel;\r\n                            }\r\n                            return null;\r\n                        }\r\n                    }\r\n                    class Manager extends TJ.Common.Component.Interface {\r\n                        OnInit() {\r\n                            if (!AppRt.Extern.QQ.Exist())\r\n                                return;\r\n                            TJ.Common.Component.Manager.AddComponent(Ads).DoInit();\r\n                        }\r\n                    }\r\n                    QQ.Manager = Manager;\r\n                    class Ads extends AppRt.API.AdPoly.IAdPoly {\r\n                        OnInit() {\r\n                            if (DP.QQ.bannerId != null) {\r\n                                this.banner = new Banner();\r\n                                this.banner.Init(DP.QQ.bannerId);\r\n                            }\r\n                            if (DP.QQ.insertId != null) {\r\n                                this.insert = new Insert();\r\n                                this.insert.Init(DP.QQ.insertId);\r\n                            }\r\n                            if (DP.QQ.videoId != null) {\r\n                                this.video = new Video();\r\n                                this.video.Init(DP.QQ.videoId);\r\n                            }\r\n                        }\r\n                        ADReady(param, grade) {\r\n                            switch (grade) {\r\n                                case AppRt.API.AdPoly.Grade.banner:\r\n                                    if (this.banner != null) {\r\n                                        return true;\r\n                                    }\r\n                                    break;\r\n                                case AppRt.API.AdPoly.Grade.normal:\r\n                                    if (this.insert != null && this.insert.Ready()) {\r\n                                        return true;\r\n                                    }\r\n                                    break;\r\n                                case AppRt.API.AdPoly.Grade.reward:\r\n                                    if (this.video != null && this.video.Ready()) {\r\n                                        return true;\r\n                                    }\r\n                                    break;\r\n                            }\r\n                            return false;\r\n                        }\r\n                        ShowAD(param, grade) {\r\n                            switch (grade) {\r\n                                case AppRt.API.AdPoly.Grade.banner:\r\n                                    this.banner.Show(param);\r\n                                    if (param.cbi != null) {\r\n                                        param.cbi.Run(TJ.Define.Event.Expose);\r\n                                    }\r\n                                    break;\r\n                                case AppRt.API.AdPoly.Grade.normal:\r\n                                    this.insert.Show(param);\r\n                                    break;\r\n                                case AppRt.API.AdPoly.Grade.reward:\r\n                                    param.cbi.Add(TJ.Define.Event.Complete, () => { param.cbi.Run(TJ.Define.Event.Reward); });\r\n                                    this.video.Show(param);\r\n                                    break;\r\n                            }\r\n                        }\r\n                        RemoveAD(param, grade) {\r\n                            switch (grade) {\r\n                                case AppRt.API.AdPoly.Grade.banner:\r\n                                    this.banner.Remove();\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }\r\n                    class Banner {\r\n                        Init(...args) {\r\n                            this.posId = args[0];\r\n                        }\r\n                        async Show(param) {\r\n                            let ws = TJ.Engine.RuntimeInfo.windowSize;\r\n                            let style = new AppRt.Extern.QQ.BannerAdStyle();\r\n                            style.width = ws.width;\r\n                            style.height = style.width * .25;\r\n                            style.left = (ws.width - style.width) / 2;\r\n                            if ((param.place & 0b100000) > 0) {\r\n                                style.top = 0;\r\n                            }\r\n                            else {\r\n                                style.top = ws.height - style.height;\r\n                            }\r\n                            this.bannerAd = AppRt.Extern.QQ.CreateBannerAd(this.posId, style);\r\n                            this.bannerAd.OnLoad((res) => {\r\n                                console.log(\"QQ.Banner.OnLoad \" + JSON.stringify(res));\r\n                                this.bannerAd.Show();\r\n                            });\r\n                            this.bannerAd.OnResize((res) => {\r\n                                console.log(\"QQ.Banner.OnResize \" + JSON.stringify(res));\r\n                                if (res.width > 0 && res.height > 0) {\r\n                                    style.width = res.width;\r\n                                    style.height = res.height;\r\n                                    style.left = (ws.width - style.width) / 2;\r\n                                    if ((param.place & 0b100000) > 0) {\r\n                                        style.top = 0;\r\n                                    }\r\n                                    else {\r\n                                        style.top = ws.height - style.height;\r\n                                    }\r\n                                    if (this.bannerAd.style.left != style.left) {\r\n                                        this.bannerAd.style.left = style.left;\r\n                                    }\r\n                                    if (this.bannerAd.style.top != style.top) {\r\n                                        this.bannerAd.style.top = style.top;\r\n                                    }\r\n                                }\r\n                            });\r\n                            this.bannerAd.OnError((res) => {\r\n                                console.log(\"QQ.Banner.OnError \" + JSON.stringify(res));\r\n                            });\r\n                        }\r\n                        Remove() {\r\n                            this.bannerAd.Destroy();\r\n                        }\r\n                    }\r\n                    class Insert {\r\n                        constructor() {\r\n                            this.loaded = false;\r\n                            this.loadHandle = 0;\r\n                        }\r\n                        Init(...args) {\r\n                            this.posId = args[0];\r\n                            this.insertAd = AppRt.Extern.QQ.CreateInterstitialAd(this.posId);\r\n                            if (this.insertAd == null)\r\n                                return;\r\n                            this.insertAd.OnLoad((res) => {\r\n                                console.log(\"QQ.Insert.OnLoad \" + JSON.stringify(res));\r\n                                this.loaded = true;\r\n                            });\r\n                            this.insertAd.OnClose((res) => {\r\n                                console.log(\"QQ.Insert.OnClose \" + JSON.stringify(res));\r\n                                this.loaded = false;\r\n                                this.Load(1000);\r\n                                this.param.cbi.Run(TJ.Define.Event.Expose);\r\n                            });\r\n                            this.insertAd.OnError((res) => {\r\n                                console.log(\"QQ.Insert.OnError \" + JSON.stringify(res));\r\n                                this.Load(5000);\r\n                            });\r\n                            this.Load(1000);\r\n                        }\r\n                        Load(delay) {\r\n                            clearTimeout(this.loadHandle);\r\n                            this.loadHandle = window.setTimeout(() => {\r\n                                this.insertAd.Load();\r\n                            }, delay);\r\n                        }\r\n                        Ready() {\r\n                            return this.loaded;\r\n                        }\r\n                        Show(param) {\r\n                            this.param = param;\r\n                            this.insertAd.Show();\r\n                        }\r\n                    }\r\n                    class Video {\r\n                        constructor() {\r\n                            this.loaded = false;\r\n                            this.loadHandle = 0;\r\n                        }\r\n                        Init(...args) {\r\n                            this.posId = args[0];\r\n                            this.videoAd = AppRt.Extern.QQ.CreateRewardedVideoAd(this.posId);\r\n                            this.videoAd.OnLoad((res) => {\r\n                                console.log(\"QQ.Video.OnLoad \" + JSON.stringify(res));\r\n                                this.loaded = true;\r\n                            });\r\n                            this.videoAd.OnClose((res) => {\r\n                                console.log(\"QQ.Video.OnClose \" + JSON.stringify(res));\r\n                                this.Load(1000);\r\n                                if (res.isEnded) {\r\n                                    this.param.cbi.Run(TJ.Define.Event.Complete);\r\n                                }\r\n                                this.param.cbi.Run(TJ.Define.Event.Close);\r\n                            });\r\n                            this.videoAd.OnError((res) => {\r\n                                console.log(\"QQ.Video.OnError \" + JSON.stringify(res));\r\n                                this.Load(5000);\r\n                            });\r\n                        }\r\n                        Load(delay) {\r\n                            clearTimeout(this.loadHandle);\r\n                            this.loadHandle = window.setTimeout(() => {\r\n                                this.videoAd.Load();\r\n                            }, delay);\r\n                        }\r\n                        Ready() {\r\n                            return this.loaded;\r\n                        }\r\n                        Show(param) {\r\n                            this.param = param;\r\n                            this.videoAd.Show();\r\n                        }\r\n                    }\r\n                })(QQ = SDK.QQ || (SDK.QQ = {}));\r\n            })(SDK = AppRt.SDK || (AppRt.SDK = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var SDK;\r\n            (function (SDK) {\r\n                var QTTGame;\r\n                (function (QTTGame) {\r\n                    TJ.Common.PriorityInit.Add(0, () => {\r\n                        if (TJ.Engine.RuntimeInfo.platform != TJ.Define.Platform.AppRt)\r\n                            return;\r\n                        switch (DP.Basic.channel) {\r\n                            case TJ.Define.Channel.AppRt.QTT_AppRt:\r\n                                TJ.Common.Component.Manager.AddComponent(AppInfo).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    TJ.Common.PriorityInit.Add(10, () => {\r\n                        if (TJ.Engine.RuntimeInfo.platform != TJ.Define.Platform.AppRt)\r\n                            return;\r\n                        switch (DP.Basic.channel) {\r\n                            case TJ.Define.Channel.AppRt.QTT_AppRt:\r\n                                TJ.Common.Component.Manager.AddComponent(Manager).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    class AppInfo extends TJ.API.AppInfo.IAppInfo {\r\n                        Channel() {\r\n                            if (AppRt.Extern.QTTGame.Exist()) {\r\n                                return DP.Basic.channel;\r\n                            }\r\n                            return null;\r\n                        }\r\n                    }\r\n                    class Manager extends TJ.Common.Component.Interface {\r\n                        OnInit() {\r\n                            if (!AppRt.Extern.QTTGame.Exist())\r\n                                return;\r\n                            TJ.Common.Component.Manager.AddComponent(Ads).DoInit();\r\n                        }\r\n                    }\r\n                    QTTGame.Manager = Manager;\r\n                    class Ads extends AppRt.API.AdPoly.IAdPoly {\r\n                        OnInit() {\r\n                            this.banner = new Banner();\r\n                            this.insert = new Insert();\r\n                            this.video = new Video();\r\n                        }\r\n                        ADReady(param, grade) {\r\n                            switch (grade) {\r\n                                case AppRt.API.AdPoly.Grade.banner:\r\n                                    if (this.banner != null) {\r\n                                        return true;\r\n                                    }\r\n                                    break;\r\n                                case AppRt.API.AdPoly.Grade.normal:\r\n                                    if (this.insert != null && this.insert.Ready()) {\r\n                                        return true;\r\n                                    }\r\n                                    break;\r\n                                case AppRt.API.AdPoly.Grade.reward:\r\n                                    if (this.video != null && this.video.Ready()) {\r\n                                        return true;\r\n                                    }\r\n                                    break;\r\n                            }\r\n                            return false;\r\n                        }\r\n                        ShowAD(param, grade) {\r\n                            switch (grade) {\r\n                                case AppRt.API.AdPoly.Grade.banner:\r\n                                    this.banner.Show(param);\r\n                                    if (param.cbi != null) {\r\n                                        param.cbi.Run(TJ.Define.Event.Expose);\r\n                                    }\r\n                                    break;\r\n                                case AppRt.API.AdPoly.Grade.normal:\r\n                                    this.insert.Show(param);\r\n                                    break;\r\n                                case AppRt.API.AdPoly.Grade.reward:\r\n                                    param.cbi.Add(TJ.Define.Event.Complete, () => { param.cbi.Run(TJ.Define.Event.Reward); });\r\n                                    this.video.Show(param);\r\n                                    break;\r\n                            }\r\n                        }\r\n                        RemoveAD(param, grade) {\r\n                            switch (grade) {\r\n                                case AppRt.API.AdPoly.Grade.banner:\r\n                                    this.banner.Remove();\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }\r\n                    class Banner {\r\n                        Show(param) {\r\n                            AppRt.Extern.QTTGame.ShowBanner();\r\n                        }\r\n                        Remove() {\r\n                            AppRt.Extern.QTTGame.HideBanner();\r\n                        }\r\n                    }\r\n                    class Insert {\r\n                        Ready() {\r\n                            return true;\r\n                        }\r\n                        Show(param) {\r\n                            AppRt.Extern.QTTGame.ShowHDAD();\r\n                        }\r\n                    }\r\n                    class Video {\r\n                        Ready() {\r\n                            return true;\r\n                        }\r\n                        Show(param) {\r\n                            AppRt.Extern.QTTGame.ShowVideo((code) => {\r\n                                console.log(\"code = \" + code);\r\n                            });\r\n                        }\r\n                    }\r\n                })(QTTGame = SDK.QTTGame || (SDK.QTTGame = {}));\r\n            })(SDK = AppRt.SDK || (AppRt.SDK = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var SDK;\r\n            (function (SDK) {\r\n                var ReYun;\r\n                (function (ReYun) {\r\n                    TJ.Common.PriorityInit.Add(10, () => {\r\n                        if (TJ.Engine.RuntimeInfo.platform != TJ.Define.Platform.AppRt)\r\n                            return;\r\n                        TJ.Common.Component.Manager.AddComponent(Manager).DoInit();\r\n                    });\r\n                    class Manager extends TJ.Common.Component.Interface {\r\n                        static get reyunData() {\r\n                            let data = new TJ.Develop.ReYun.Data();\r\n                            data.appid = DP.ReYun.appId;\r\n                            data.channelid = DP.Basic.channel;\r\n                            data.who = TJ.Common.SystemInfo.clientGuid;\r\n                            data.log = true;\r\n                            return data;\r\n                        }\r\n                        OnInit() {\r\n                            if (DP.ReYun.appId != null) {\r\n                                TJ.Develop.ReYun.Install(Manager.reyunData);\r\n                                TJ.Develop.ReYun.Startup(Manager.reyunData);\r\n                                setInterval(() => TJ.Develop.ReYun.Heartbeat(Manager.reyunData), 1000 * 60 * 5);\r\n                                TJ.Develop.ReYun.Event(Manager.reyunData, \"TJ.Init\");\r\n                                let time = 0;\r\n                                let timeEvent = [5, 10, 30, 60, 120];\r\n                                for (let i = 1; i <= 12; i++) {\r\n                                    timeEvent.push(60 * 5 * i);\r\n                                }\r\n                                setInterval(() => {\r\n                                    time += 1;\r\n                                    if (timeEvent.length > 0) {\r\n                                        if (time >= timeEvent[0]) {\r\n                                            TJ.Develop.ReYun.Event(Manager.reyunData, \"TimeEvent-\" + timeEvent.shift());\r\n                                        }\r\n                                    }\r\n                                }, 1000);\r\n                                TJ.Common.Component.Manager.AddComponent(Gsa).DoInit();\r\n                            }\r\n                        }\r\n                    }\r\n                    ReYun.Manager = Manager;\r\n                    class Gsa extends TJ.API.Analytics.IAnalytics {\r\n                        OnInit() {\r\n                        }\r\n                        Event(param) {\r\n                            TJ.Develop.ReYun.Event(Manager.reyunData, param.id);\r\n                        }\r\n                    }\r\n                })(ReYun = SDK.ReYun || (SDK.ReYun = {}));\r\n            })(SDK = AppRt.SDK || (AppRt.SDK = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var SDK;\r\n            (function (SDK) {\r\n                var TA;\r\n                (function (TA) {\r\n                    TJ.Common.PriorityInit.Add(10, () => {\r\n                        switch (TJ.Engine.RuntimeInfo.platform) {\r\n                            case TJ.Define.Platform.AppRt:\r\n                                TJ.Common.Component.Manager.AddComponent(OTA).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    class OTA extends TJ.API.TA.ITA {\r\n                        OnInit() {\r\n                            AppRt.Develop.TA.FirstStartup();\r\n                            setInterval(() => {\r\n                                AppRt.Develop.TA.Startup();\r\n                            }, 1000 * 30);\r\n                        }\r\n                        PromoEvent(param) {\r\n                            AppRt.Develop.TA.PromoEvent(param.id, param.type, param.style, param.icon);\r\n                        }\r\n                        PromoEvents(params) {\r\n                            let list = [];\r\n                            for (let p of params) {\r\n                                list.push({ promo: p.id, type: p.type, style: p.style, icon: p.icon });\r\n                            }\r\n                            AppRt.Develop.TA.PromoEvents(list);\r\n                        }\r\n                        Event_LifeCycle_Load(param) {\r\n                            AppRt.Develop.TA.Event_LifeCycle_Load(param.id);\r\n                        }\r\n                        Event_LifeCycle_Start(param) {\r\n                            AppRt.Develop.TA.Event_LifeCycle_Start(param.id);\r\n                        }\r\n                        Event_LifeCycle_Destroy(param) {\r\n                            AppRt.Develop.TA.Event_LifeCycle_Destroy(param.id);\r\n                        }\r\n                        Event_LifeCycle_Enable(param) {\r\n                            AppRt.Develop.TA.Event_LifeCycle_Enable(param.id);\r\n                        }\r\n                        Event_LifeCycle_Disable(param) {\r\n                            AppRt.Develop.TA.Event_LifeCycle_Disable(param.id);\r\n                        }\r\n                        Event_Page_Enter(param) {\r\n                            AppRt.Develop.TA.Event_Page_Enter(param.id, param.source);\r\n                        }\r\n                        Event_Page_Show(param) {\r\n                            AppRt.Develop.TA.Event_Page_Show(param.id, param.source);\r\n                        }\r\n                        Event_Page_Leave(param) {\r\n                            AppRt.Develop.TA.Event_Page_Leave(param.id, param.source);\r\n                        }\r\n                        Event_Button_Show(param) {\r\n                            AppRt.Develop.TA.Event_Button_Show(param.id, param.source);\r\n                        }\r\n                        Event_Button_Click(param) {\r\n                            AppRt.Develop.TA.Event_Button_Click(param.id, param.source);\r\n                        }\r\n                        Event_Level_Start(param) {\r\n                            AppRt.Develop.TA.Event_Level_Start(param.id);\r\n                        }\r\n                        Event_Level_Finish(param) {\r\n                            AppRt.Develop.TA.Event_Level_Finish(param.id);\r\n                        }\r\n                        Event_Level_Fail(param) {\r\n                            AppRt.Develop.TA.Event_Level_Fail(param.id);\r\n                        }\r\n                    }\r\n                    TA.OTA = OTA;\r\n                })(TA = SDK.TA || (SDK.TA = {}));\r\n            })(SDK = AppRt.SDK || (AppRt.SDK = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var SDK;\r\n            (function (SDK) {\r\n                var TT;\r\n                (function (TT) {\r\n                    TJ.Common.PriorityInit.Add(0, () => {\r\n                        if (TJ.Engine.RuntimeInfo.platform != TJ.Define.Platform.AppRt)\r\n                            return;\r\n                        switch (DP.Basic.channel) {\r\n                            case TJ.Define.Channel.AppRt.ZJTD_AppRt:\r\n                                TJ.Common.Component.Manager.AddComponent(AppInfo).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    TJ.Common.PriorityInit.Add(10, () => {\r\n                        if (TJ.Engine.RuntimeInfo.platform != TJ.Define.Platform.AppRt)\r\n                            return;\r\n                        switch (DP.Basic.channel) {\r\n                            case TJ.Define.Channel.AppRt.ZJTD_AppRt:\r\n                                TJ.Common.Component.Manager.AddComponent(Manager).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    class AppInfo extends TJ.API.AppInfo.IAppInfo {\r\n                        Channel() {\r\n                            if (AppRt.Extern.TT.Exist()) {\r\n                                return DP.Basic.channel;\r\n                            }\r\n                            return null;\r\n                        }\r\n                    }\r\n                    class Manager extends TJ.Common.Component.Interface {\r\n                        OnInit() {\r\n                            if (!AppRt.Extern.TT.Exist())\r\n                                return;\r\n                            TJ.Common.Component.Manager.AddComponent(Gsa).DoInit();\r\n                            TJ.Common.Component.Manager.AddComponent(Promo).DoInit();\r\n                            TJ.Common.Component.Manager.AddComponent(Vibrate).DoInit();\r\n                            TJ.Common.Component.Manager.AddComponent(Ads).DoInit();\r\n                            {\r\n                                let options = AppRt.Extern.TT.GetLaunchOptionsSync();\r\n                                AppRt.Develop.TA.LaunchOptions(options);\r\n                                console.log(\"TT.GetLaunchOptionsSync \" + JSON.stringify(options));\r\n                            }\r\n                        }\r\n                    }\r\n                    TT.Manager = Manager;\r\n                    class Promo extends TJ.API.Promo.IPromo {\r\n                        async Pop(param) {\r\n                            let p = new AppRt.Extern.TT.ShowMoreGamesModalParam();\r\n                            p.complete = (res) => {\r\n                                console.log(\"TT.ShowMoreGamesModal complete\", JSON.stringify(res));\r\n                            };\r\n                            if (this.apps == null) {\r\n                                this.apps = [];\r\n                                for (let item of await TJ.Develop.Yun.Promo.Data.LoadList()) {\r\n                                    this.apps.push(item.appId);\r\n                                }\r\n                            }\r\n                            for (let item of this.apps) {\r\n                                p.appLaunchOptions.push({ appId: item, extraData: param.extraData });\r\n                            }\r\n                            AppRt.Extern.TT.ShowMoreGamesModal(p);\r\n                        }\r\n                    }\r\n                    class Vibrate extends TJ.API.Vibrate.IVibrate {\r\n                        Short() {\r\n                            AppRt.Extern.TT.VibrateShort(new AppRt.Extern.TT.CallbackParam());\r\n                        }\r\n                        Long() {\r\n                            AppRt.Extern.TT.VibrateLong(new AppRt.Extern.TT.CallbackParam());\r\n                        }\r\n                        Time(seconds) {\r\n                            if (seconds < 0.1) {\r\n                                this.Short();\r\n                            }\r\n                            else {\r\n                                this.Long();\r\n                            }\r\n                        }\r\n                    }\r\n                    class Gsa extends TJ.API.Analytics.IAnalytics {\r\n                        OnInit() {\r\n                        }\r\n                        Event(param) {\r\n                            AppRt.Extern.TT.ReportAnalytics(param.id, param.dic);\r\n                        }\r\n                    }\r\n                    class Ads extends AppRt.API.AdPoly.IAdPoly {\r\n                        OnInit() {\r\n                            if (DP.TT.bannerId != null) {\r\n                                this.banner = new Banner();\r\n                                this.banner.Init(DP.TT.bannerId);\r\n                            }\r\n                            if (DP.TT.videoId != null) {\r\n                                this.video = new Video();\r\n                                this.video.Init(DP.TT.videoId);\r\n                            }\r\n                        }\r\n                        ADReady(param, grade) {\r\n                            switch (grade) {\r\n                                case AppRt.API.AdPoly.Grade.banner:\r\n                                    if (this.banner != null) {\r\n                                        return true;\r\n                                    }\r\n                                    break;\r\n                                case AppRt.API.AdPoly.Grade.normal:\r\n                                    break;\r\n                                case AppRt.API.AdPoly.Grade.reward:\r\n                                    if (this.video != null && this.video.Ready()) {\r\n                                        return true;\r\n                                    }\r\n                                    break;\r\n                            }\r\n                            return false;\r\n                        }\r\n                        ShowAD(param, grade) {\r\n                            switch (grade) {\r\n                                case AppRt.API.AdPoly.Grade.banner:\r\n                                    this.banner.Show(param);\r\n                                    if (param.cbi != null) {\r\n                                        param.cbi.Run(TJ.Define.Event.Expose);\r\n                                    }\r\n                                    break;\r\n                                case AppRt.API.AdPoly.Grade.normal:\r\n                                    break;\r\n                                case AppRt.API.AdPoly.Grade.reward:\r\n                                    param.cbi.Add(TJ.Define.Event.Complete, () => { param.cbi.Run(TJ.Define.Event.Reward); });\r\n                                    this.video.Show(param);\r\n                                    break;\r\n                            }\r\n                        }\r\n                        RemoveAD(param, grade) {\r\n                            switch (grade) {\r\n                                case AppRt.API.AdPoly.Grade.banner:\r\n                                    this.banner.Remove();\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }\r\n                    class Banner {\r\n                        Init(...args) {\r\n                            this.posId = args[0];\r\n                        }\r\n                        Show(param) {\r\n                            let ws = TJ.Engine.RuntimeInfo.windowSize;\r\n                            let style = new AppRt.Extern.TT.BannerAdStyle();\r\n                            style.width = ws.width;\r\n                            style.height = style.width * .25;\r\n                            style.left = (ws.width - style.width) / 2;\r\n                            if ((param.place & 0b100000) > 0) {\r\n                                style.top = 0;\r\n                            }\r\n                            else {\r\n                                style.top = ws.height - style.height;\r\n                            }\r\n                            this.bannerAd = AppRt.Extern.TT.CreateBannerAd(this.posId, style);\r\n                            this.bannerAd.OnLoad((res) => {\r\n                                console.log(\"TT.Banner.OnLoad \" + JSON.stringify(res));\r\n                                this.bannerAd.Show();\r\n                            });\r\n                            this.bannerAd.OnResize((res) => {\r\n                                console.log(\"TT.Banner.OnResize \" + JSON.stringify(res));\r\n                                if (res.width > 0 && res.height > 0) {\r\n                                    style.width = res.width;\r\n                                    style.height = res.height;\r\n                                    style.left = (ws.width - style.width) / 2;\r\n                                    if ((param.place & 0b100000) > 0) {\r\n                                        style.top = 0;\r\n                                    }\r\n                                    else {\r\n                                        style.top = ws.height - style.height;\r\n                                    }\r\n                                    if (this.bannerAd.style.left != style.left) {\r\n                                        this.bannerAd.style.left = style.left;\r\n                                    }\r\n                                    if (this.bannerAd.style.top != style.top) {\r\n                                        this.bannerAd.style.top = style.top;\r\n                                    }\r\n                                }\r\n                            });\r\n                            this.bannerAd.OnError((res) => {\r\n                                console.log(\"TT.Banner.OnError \" + JSON.stringify(res));\r\n                            });\r\n                        }\r\n                        Remove() {\r\n                            this.bannerAd.Destroy();\r\n                        }\r\n                    }\r\n                    class Video {\r\n                        constructor() {\r\n                            this.loaded = false;\r\n                            this.loadHandle = 0;\r\n                        }\r\n                        Init(...args) {\r\n                            this.posId = args[0];\r\n                            this.videoAd = AppRt.Extern.TT.CreateRewardedVideoAd(this.posId);\r\n                            if (this.videoAd == null)\r\n                                return;\r\n                            this.videoAd.OnLoad((res) => {\r\n                                console.log(\"TT.Video.OnLoad \" + JSON.stringify(res));\r\n                                this.loaded = true;\r\n                            });\r\n                            this.videoAd.OnClose((res) => {\r\n                                console.log(\"TT.Video.OnClose \" + JSON.stringify(res));\r\n                                this.Load(1000);\r\n                                if (res.isEnded) {\r\n                                    this.param.cbi.Run(TJ.Define.Event.Complete);\r\n                                }\r\n                                this.param.cbi.Run(TJ.Define.Event.Close);\r\n                            });\r\n                            this.videoAd.OnError((res) => {\r\n                                console.log(\"TT.Video.OnError \" + JSON.stringify(res));\r\n                                this.Load(5000);\r\n                            });\r\n                        }\r\n                        Load(delay) {\r\n                            clearTimeout(this.loadHandle);\r\n                            this.loadHandle = window.setTimeout(() => {\r\n                                this.videoAd.Load();\r\n                            }, delay);\r\n                        }\r\n                        Ready() {\r\n                            return this.loaded;\r\n                        }\r\n                        Show(param) {\r\n                            this.param = param;\r\n                            this.videoAd.Show();\r\n                        }\r\n                    }\r\n                })(TT = SDK.TT || (SDK.TT = {}));\r\n            })(SDK = AppRt.SDK || (AppRt.SDK = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var SDK;\r\n            (function (SDK) {\r\n                var UC;\r\n                (function (UC) {\r\n                    TJ.Common.PriorityInit.Add(0, () => {\r\n                        if (TJ.Engine.RuntimeInfo.platform != TJ.Define.Platform.AppRt)\r\n                            return;\r\n                        switch (DP.Basic.channel) {\r\n                            case TJ.Define.Channel.AppRt.UC_AppRt:\r\n                                TJ.Common.Component.Manager.AddComponent(AppInfo).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    TJ.Common.PriorityInit.Add(10, () => {\r\n                        if (TJ.Engine.RuntimeInfo.platform != TJ.Define.Platform.AppRt)\r\n                            return;\r\n                        switch (DP.Basic.channel) {\r\n                            case TJ.Define.Channel.AppRt.UC_AppRt:\r\n                                TJ.Common.Component.Manager.AddComponent(Manager).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    class AppInfo extends TJ.API.AppInfo.IAppInfo {\r\n                        Channel() {\r\n                            if (AppRt.Extern.UC.Exist()) {\r\n                                return DP.Basic.channel;\r\n                            }\r\n                            return null;\r\n                        }\r\n                    }\r\n                    class Manager extends TJ.Common.Component.Interface {\r\n                        OnInit() {\r\n                            if (!AppRt.Extern.UC.Exist())\r\n                                return;\r\n                            window.setTimeout(() => {\r\n                                TJ.Common.Component.Manager.AddComponent(Ads).DoInit();\r\n                            }, 1000);\r\n                        }\r\n                    }\r\n                    UC.Manager = Manager;\r\n                    class Ads extends AppRt.API.AdPoly.IAdPoly {\r\n                        OnInit() {\r\n                            this.banner = new Banner();\r\n                            this.banner.Init();\r\n                            this.video = new Video();\r\n                            this.video.Init();\r\n                        }\r\n                        ADReady(param, grade) {\r\n                            switch (grade) {\r\n                                case AppRt.API.AdPoly.Grade.banner:\r\n                                    if (this.banner != null) {\r\n                                        return true;\r\n                                    }\r\n                                    break;\r\n                                case AppRt.API.AdPoly.Grade.normal:\r\n                                    break;\r\n                                case AppRt.API.AdPoly.Grade.reward:\r\n                                    if (this.video != null && this.video.Ready()) {\r\n                                        return true;\r\n                                    }\r\n                                    break;\r\n                            }\r\n                            return false;\r\n                        }\r\n                        ShowAD(param, grade) {\r\n                            switch (grade) {\r\n                                case AppRt.API.AdPoly.Grade.banner:\r\n                                    this.banner.Show(param);\r\n                                    if (param.cbi != null) {\r\n                                        param.cbi.Run(TJ.Define.Event.Expose);\r\n                                    }\r\n                                    break;\r\n                                case AppRt.API.AdPoly.Grade.normal:\r\n                                    break;\r\n                                case AppRt.API.AdPoly.Grade.reward:\r\n                                    param.cbi.Add(TJ.Define.Event.Complete, () => { param.cbi.Run(TJ.Define.Event.Reward); });\r\n                                    this.video.Show(param);\r\n                                    break;\r\n                            }\r\n                        }\r\n                        RemoveAD(param, grade) {\r\n                            switch (grade) {\r\n                                case AppRt.API.AdPoly.Grade.banner:\r\n                                    this.banner.Remove();\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }\r\n                    class Banner {\r\n                        Init(...args) {\r\n                        }\r\n                        async Show(param) {\r\n                            this.param = param;\r\n                            let ws = TJ.Engine.RuntimeInfo.windowSize;\r\n                            let style = new AppRt.Extern.UC.BannerAdStyle();\r\n                            style.width = ws.width;\r\n                            style.left = 0;\r\n                            style.right = 0;\r\n                            style.top = 0;\r\n                            style.bottom = 0;\r\n                            if (this.param != null && (this.param.place & 0b100000) > 0) {\r\n                                style.gravity = 1;\r\n                            }\r\n                            else {\r\n                                style.gravity = 7;\r\n                            }\r\n                            this.bannerAd = AppRt.Extern.UC.CreateBannerAd(style);\r\n                            this.bannerAd.OnLoad((res) => {\r\n                                console.log(\"UC.Banner.OnLoad \" + JSON.stringify(res));\r\n                                this.bannerAd.Show();\r\n                            });\r\n                            this.bannerAd.OnError((res) => {\r\n                                console.log(\"UC.Banner.OnError \" + JSON.stringify(res));\r\n                            });\r\n                        }\r\n                        Remove() {\r\n                            this.bannerAd.Hide();\r\n                        }\r\n                    }\r\n                    class Video {\r\n                        constructor() {\r\n                            this.loaded = false;\r\n                            this.loadHandle = 0;\r\n                        }\r\n                        Init(...args) {\r\n                            this.videoAd = AppRt.Extern.UC.CreateRewardVideoAd();\r\n                            this.videoAd.OnLoad((res) => {\r\n                                console.log(\"UC.Video.OnLoad \" + JSON.stringify(res));\r\n                                this.loaded = true;\r\n                            });\r\n                            this.videoAd.OnClose((res) => {\r\n                                console.log(\"UC.Video.OnClose \" + JSON.stringify(res));\r\n                                this.loaded = false;\r\n                                this.Load(1000);\r\n                                if (res.isEnded) {\r\n                                    this.param.cbi.Run(TJ.Define.Event.Complete);\r\n                                }\r\n                                this.param.cbi.Run(TJ.Define.Event.Close);\r\n                            });\r\n                            this.videoAd.OnError((res) => {\r\n                                console.log(\"UC.Video.OnError \" + JSON.stringify(res));\r\n                                this.Load(5000);\r\n                            });\r\n                        }\r\n                        Load(delay) {\r\n                            clearTimeout(this.loadHandle);\r\n                            this.loadHandle = window.setTimeout(() => {\r\n                                this.videoAd.Load();\r\n                            }, delay);\r\n                        }\r\n                        Ready() {\r\n                            return this.loaded;\r\n                        }\r\n                        Show(param) {\r\n                            this.param = param;\r\n                            this.videoAd.Show();\r\n                        }\r\n                    }\r\n                })(UC = SDK.UC || (SDK.UC = {}));\r\n            })(SDK = AppRt.SDK || (AppRt.SDK = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var SDK;\r\n            (function (SDK) {\r\n                var VIVO;\r\n                (function (VIVO) {\r\n                    var QG;\r\n                    (function (QG) {\r\n                        TJ.Common.PriorityInit.Add(0, () => {\r\n                            if (TJ.Engine.RuntimeInfo.platform != TJ.Define.Platform.AppRt)\r\n                                return;\r\n                            switch (DP.Basic.channel) {\r\n                                case TJ.Define.Channel.AppRt.VIVO_AppRt:\r\n                                    TJ.Common.Component.Manager.AddComponent(AppInfo).DoInit();\r\n                                    break;\r\n                            }\r\n                        });\r\n                        TJ.Common.PriorityInit.Add(0, () => {\r\n                            if (TJ.Engine.RuntimeInfo.platform != TJ.Define.Platform.AppRt)\r\n                                return;\r\n                            switch (DP.Basic.channel) {\r\n                                case TJ.Define.Channel.AppRt.VIVO_AppRt:\r\n                                    TJ.Common.Component.Manager.AddComponent(Manager).DoInit();\r\n                                    break;\r\n                            }\r\n                        });\r\n                        class AppInfo extends TJ.API.AppInfo.IAppInfo {\r\n                            Channel() {\r\n                                if (AppRt.Extern.VIVO.QG.Exist()) {\r\n                                    return DP.Basic.channel;\r\n                                }\r\n                                return null;\r\n                            }\r\n                        }\r\n                        class Manager extends TJ.Common.Component.Interface {\r\n                            OnInit() {\r\n                                if (!AppRt.Extern.VIVO.QG.Exist())\r\n                                    return;\r\n                                TJ.Common.Component.Manager.AddComponent(Ads).DoInit();\r\n                            }\r\n                        }\r\n                        QG.Manager = Manager;\r\n                        class Ads extends AppRt.API.AdPoly.IAdPoly {\r\n                            constructor() {\r\n                                super(...arguments);\r\n                                this.insertType = 0;\r\n                            }\r\n                            OnInit() {\r\n                                if (DP.VIVO.QG.bannerId != null) {\r\n                                    this.banner = new Banner();\r\n                                    this.banner.Init(DP.VIVO.QG.bannerId);\r\n                                }\r\n                                if (DP.VIVO.QG.insertId != null) {\r\n                                    this.insert = new Insert();\r\n                                    this.insert.Init(DP.VIVO.QG.insertId);\r\n                                }\r\n                                if (DP.VIVO.QG.videoId != null) {\r\n                                    this.video = new Video();\r\n                                    this.video.Init(DP.VIVO.QG.videoId);\r\n                                }\r\n                                if (DP.VIVO.QG.nativeCustomInsert != null) {\r\n                                    this.customInsert = new CustomInsert();\r\n                                    this.customInsert.Init(DP.VIVO.QG.nativeCustomInsert);\r\n                                }\r\n                                if (DP.VIVO.QG.nativeId != null) {\r\n                                    window.setTimeout(() => {\r\n                                        TJ.Common.Component.Manager.AddComponent(NativeAd).DoInit();\r\n                                    }, 1000);\r\n                                }\r\n                            }\r\n                            ADReady(param, grade) {\r\n                                switch (grade) {\r\n                                    case AppRt.API.AdPoly.Grade.banner:\r\n                                        if (this.banner != null) {\r\n                                            return true;\r\n                                        }\r\n                                        break;\r\n                                    case AppRt.API.AdPoly.Grade.normal:\r\n                                        if (this.customInsert != null && this.customInsert.Ready(param)) {\r\n                                            this.insertType = 2;\r\n                                            return true;\r\n                                        }\r\n                                        if (this.insert != null && this.insert.Ready()) {\r\n                                            this.insertType = 1;\r\n                                            return true;\r\n                                        }\r\n                                        break;\r\n                                    case AppRt.API.AdPoly.Grade.reward:\r\n                                        if (this.video != null && this.video.Ready()) {\r\n                                            return true;\r\n                                        }\r\n                                        break;\r\n                                }\r\n                                return false;\r\n                            }\r\n                            ShowAD(param, grade) {\r\n                                switch (grade) {\r\n                                    case AppRt.API.AdPoly.Grade.banner:\r\n                                        this.banner.Show(param);\r\n                                        if (param.cbi != null) {\r\n                                            param.cbi.Run(TJ.Define.Event.Expose);\r\n                                        }\r\n                                        break;\r\n                                    case AppRt.API.AdPoly.Grade.normal:\r\n                                        switch (this.insertType) {\r\n                                            case 1:\r\n                                                this.insert.Show(param);\r\n                                                break;\r\n                                            case 2:\r\n                                                this.customInsert.Show(param);\r\n                                                break;\r\n                                        }\r\n                                        break;\r\n                                    case AppRt.API.AdPoly.Grade.reward:\r\n                                        param.cbi.Add(TJ.Define.Event.Complete, () => { param.cbi.Run(TJ.Define.Event.Reward); });\r\n                                        this.video.Show(param);\r\n                                        break;\r\n                                }\r\n                            }\r\n                            RemoveAD(param, grade) {\r\n                                switch (grade) {\r\n                                    case AppRt.API.AdPoly.Grade.banner:\r\n                                        this.banner.Remove();\r\n                                        break;\r\n                                }\r\n                            }\r\n                        }\r\n                        class Banner {\r\n                            Init(...args) {\r\n                                this.posId = args[0];\r\n                            }\r\n                            Show(param) {\r\n                                this.bannerAd = AppRt.Extern.VIVO.QG.CreateBannerAd(this.posId);\r\n                                this.bannerAd.OnLoad((res) => {\r\n                                    console.log(\"VIVO.QG.Banner.OnLoad \" + JSON.stringify(res));\r\n                                    this.bannerAd.Show();\r\n                                });\r\n                                this.bannerAd.OnSize((res) => {\r\n                                    console.log(\"VIVO.QG.Banner.OnSize \" + JSON.stringify(res));\r\n                                });\r\n                                this.bannerAd.OnClose((res) => {\r\n                                    console.log(\"VIVO.QG.Banner.OnClose \" + JSON.stringify(res));\r\n                                });\r\n                                this.bannerAd.OnError((res) => {\r\n                                    console.log(\"VIVO.QG.Banner.OnError \" + JSON.stringify(res));\r\n                                });\r\n                            }\r\n                            Remove() {\r\n                                this.bannerAd.Hide();\r\n                            }\r\n                        }\r\n                        class Insert {\r\n                            constructor() {\r\n                                this.loaded = false;\r\n                                this.loadHandle = 0;\r\n                            }\r\n                            Init(...args) {\r\n                                this.posId = args[0];\r\n                                this.Load(1000);\r\n                            }\r\n                            Load(delay) {\r\n                                clearTimeout(this.loadHandle);\r\n                                this.loadHandle = window.setTimeout(() => {\r\n                                    this.insertAd = AppRt.Extern.VIVO.QG.CreateInterstitialAd(this.posId);\r\n                                    this.insertAd.OnLoad((res) => {\r\n                                        console.log(\"VIVO.QG.Insert.OnLoad \" + JSON.stringify(res));\r\n                                        this.loaded = true;\r\n                                    });\r\n                                    this.insertAd.OnClose((res) => {\r\n                                        console.log(\"VIVO.QG.Insert.OnClose \" + JSON.stringify(res));\r\n                                        this.loaded = false;\r\n                                        this.Load(1000);\r\n                                        this.param.cbi.Run(TJ.Define.Event.Expose);\r\n                                    });\r\n                                    this.insertAd.OnError((res) => {\r\n                                        console.log(\"VIVO.QG.Insert.OnError \" + JSON.stringify(res));\r\n                                        this.Load(5000);\r\n                                    });\r\n                                }, delay);\r\n                            }\r\n                            Ready() {\r\n                                return this.loaded;\r\n                            }\r\n                            Show(param) {\r\n                                this.param = param;\r\n                                this.insertAd.Show();\r\n                            }\r\n                        }\r\n                        class Video {\r\n                            constructor() {\r\n                                this.loaded = false;\r\n                                this.loadHandle = 0;\r\n                            }\r\n                            Init(...args) {\r\n                                this.posId = args[0];\r\n                                this.videoAd = AppRt.Extern.VIVO.QG.CreateRewardedVideoAd(this.posId);\r\n                                this.videoAd.OnLoad((res) => {\r\n                                    console.log(\"VIVO.QG.Video.OnLoad \" + JSON.stringify(res));\r\n                                    this.loaded = true;\r\n                                });\r\n                                this.videoAd.OnClose((res) => {\r\n                                    console.log(\"VIVO.QG.Video.OnClose \" + JSON.stringify(res));\r\n                                    this.loaded = false;\r\n                                    this.Load(60000);\r\n                                    if (res.isEnded) {\r\n                                        this.param.cbi.Run(TJ.Define.Event.Complete);\r\n                                    }\r\n                                    this.param.cbi.Run(TJ.Define.Event.Close);\r\n                                });\r\n                                this.videoAd.OnError((res) => {\r\n                                    console.log(\"VIVO.QG.Video.OnError \" + JSON.stringify(res));\r\n                                    this.Load(60000);\r\n                                });\r\n                            }\r\n                            Load(delay) {\r\n                                clearTimeout(this.loadHandle);\r\n                                this.loadHandle = window.setTimeout(() => {\r\n                                    this.videoAd.Load();\r\n                                }, delay);\r\n                            }\r\n                            Ready() {\r\n                                return this.loaded;\r\n                            }\r\n                            Show(param) {\r\n                                this.param = param;\r\n                                this.videoAd.Show();\r\n                            }\r\n                        }\r\n                        class CustomInsert {\r\n                            Init(...args) {\r\n                                this.posId = args[0];\r\n                                this.nad = new NativeAdHelper(this.posId);\r\n                            }\r\n                            Ready(param) {\r\n                                return this.nad.Peek() != null && param.onNative != null;\r\n                            }\r\n                            Show(param) {\r\n                                let data = this.nad.Pop();\r\n                                param.onNative(data);\r\n                            }\r\n                        }\r\n                        class NativeAd extends TJ.API.AdService.IAdService {\r\n                            OnInit() {\r\n                                this.nad = new NativeAdHelper(DP.VIVO.QG.nativeId);\r\n                            }\r\n                            LoadNative(param) {\r\n                                return this.nad.Pop();\r\n                            }\r\n                        }\r\n                        class NativeAdHelper {\r\n                            constructor(posId) {\r\n                                this.list = [];\r\n                                this.loadHandle = 0;\r\n                                this.nativeAd = AppRt.Extern.VIVO.QG.CreateNativeAd(posId);\r\n                                this.nativeAd.OnLoad((res) => {\r\n                                    for (let data of res.adList) {\r\n                                        let item = new TJ.API.AdService.NativeItem();\r\n                                        let adId = data.adId;\r\n                                        item.OnShow = () => {\r\n                                            this.nativeAd.ReportAdShow(adId);\r\n                                        };\r\n                                        item.OnClick = () => {\r\n                                            this.nativeAd.ReportAdClick(adId);\r\n                                        };\r\n                                        item.title = data.title;\r\n                                        item.desc = data.desc;\r\n                                        item.logoUrl = data.logoUrl;\r\n                                        item.iconUrl = data.icon;\r\n                                        if (data.imgUrlList != null && data.imgUrlList.length > 0) {\r\n                                            item.imgUrl = data.imgUrlList[0];\r\n                                        }\r\n                                        this.list.push(item);\r\n                                    }\r\n                                    this.Load(15000);\r\n                                });\r\n                                this.nativeAd.OnError((res) => {\r\n                                    console.log(\"VIVO.QG.NativeAd.OnError \" + JSON.stringify(res));\r\n                                    this.Load(15000);\r\n                                });\r\n                                this.Load(0);\r\n                            }\r\n                            Load(delay) {\r\n                                clearTimeout(this.loadHandle);\r\n                                this.loadHandle = window.setTimeout(() => {\r\n                                    if (this.list.length < 1) {\r\n                                        this.nativeAd.Load();\r\n                                    }\r\n                                }, delay);\r\n                            }\r\n                            Peek() {\r\n                                if (this.list.length > 0) {\r\n                                    return this.list[0];\r\n                                }\r\n                                return null;\r\n                            }\r\n                            Pop() {\r\n                                let item = this.Peek();\r\n                                if (item != null) {\r\n                                    this.list.splice(0, 1);\r\n                                    this.Load(15000);\r\n                                }\r\n                                return item;\r\n                            }\r\n                        }\r\n                    })(QG = VIVO.QG || (VIVO.QG = {}));\r\n                })(VIVO = SDK.VIVO || (SDK.VIVO = {}));\r\n            })(SDK = AppRt.SDK || (AppRt.SDK = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var SDK;\r\n            (function (SDK) {\r\n                var WX;\r\n                (function (WX) {\r\n                    TJ.Common.PriorityInit.Add(0, () => {\r\n                        if (TJ.Engine.RuntimeInfo.platform != TJ.Define.Platform.AppRt)\r\n                            return;\r\n                        switch (DP.Basic.channel) {\r\n                            case TJ.Define.Channel.AppRt.WX_AppRt:\r\n                                TJ.Common.Component.Manager.AddComponent(AppInfo).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    TJ.Common.PriorityInit.Add(10, () => {\r\n                        if (TJ.Engine.RuntimeInfo.platform != TJ.Define.Platform.AppRt)\r\n                            return;\r\n                        switch (DP.Basic.channel) {\r\n                            case TJ.Define.Channel.AppRt.WX_AppRt:\r\n                                TJ.Common.Component.Manager.AddComponent(Manager).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    class AppInfo extends TJ.API.AppInfo.IAppInfo {\r\n                        Channel() {\r\n                            if (AppRt.Extern.WX.Exist()) {\r\n                                return DP.Basic.channel;\r\n                            }\r\n                            return null;\r\n                        }\r\n                    }\r\n                    class Manager extends TJ.Common.Component.Interface {\r\n                        OnInit() {\r\n                            if (!AppRt.Extern.WX.Exist())\r\n                                return;\r\n                            TJ.Common.Component.Manager.AddComponent(Ads).DoInit();\r\n                            TJ.Common.Component.Manager.AddComponent(Promo).DoInit();\r\n                            TJ.Common.Component.Manager.AddComponent(Vibrate).DoInit();\r\n                            {\r\n                                AppRt.Extern.WX.OnShow(() => { TJ.Common.SystemInfo.foreground = true; });\r\n                                AppRt.Extern.WX.OnHide(() => { TJ.Common.SystemInfo.foreground = false; });\r\n                            }\r\n                            {\r\n                                let options = AppRt.Extern.WX.GetLaunchOptionsSync();\r\n                                AppRt.Develop.TA.LaunchOptions(options);\r\n                                console.log(\"WX.GetLaunchOptionsSync \" + JSON.stringify(options));\r\n                            }\r\n                        }\r\n                    }\r\n                    WX.Manager = Manager;\r\n                    class Vibrate extends TJ.API.Vibrate.IVibrate {\r\n                        Short() {\r\n                            AppRt.Extern.WX.VibrateShort(new AppRt.Extern.WX.CallbackParam());\r\n                        }\r\n                        Long() {\r\n                            AppRt.Extern.WX.VibrateLong(new AppRt.Extern.WX.CallbackParam());\r\n                        }\r\n                        Time(seconds) {\r\n                            if (seconds < 0.1) {\r\n                                this.Short();\r\n                            }\r\n                            else {\r\n                                this.Long();\r\n                            }\r\n                        }\r\n                    }\r\n                    class Promo extends TJ.API.Promo.IPromo {\r\n                        Pop(param) {\r\n                            let p = new AppRt.Extern.WX.NavigateToMiniProgramParam();\r\n                            p.appId = param.appId;\r\n                            p.extraData = param.extraData;\r\n                            p.success = (res) => {\r\n                                param.cbi.Run(TJ.Define.Event.Success);\r\n                            };\r\n                            p.complete = (res) => {\r\n                                console.log(\"WX.NavigateToMiniProgram complete\", JSON.stringify(res));\r\n                            };\r\n                            AppRt.Extern.WX.NavigateToMiniProgram(p);\r\n                        }\r\n                    }\r\n                    class Ads extends AppRt.API.AdPoly.IAdPoly {\r\n                        OnInit() {\r\n                            if (DP.WX.bannerId != null) {\r\n                                this.banner = new Banner();\r\n                                this.banner.Init(DP.WX.bannerId);\r\n                            }\r\n                            if (DP.WX.insertId != null) {\r\n                                this.insert = new Insert();\r\n                                this.insert.Init(DP.WX.insertId);\r\n                            }\r\n                            if (DP.WX.videoId != null) {\r\n                                this.video = new Video();\r\n                                this.video.Init(DP.WX.videoId);\r\n                            }\r\n                        }\r\n                        ADReady(param, grade) {\r\n                            switch (grade) {\r\n                                case AppRt.API.AdPoly.Grade.banner:\r\n                                    if (this.banner != null) {\r\n                                        return true;\r\n                                    }\r\n                                    break;\r\n                                case AppRt.API.AdPoly.Grade.normal:\r\n                                    if (this.insert != null && this.insert.Ready()) {\r\n                                        return true;\r\n                                    }\r\n                                    break;\r\n                                case AppRt.API.AdPoly.Grade.reward:\r\n                                    if (this.video != null && this.video.Ready()) {\r\n                                        return true;\r\n                                    }\r\n                                    break;\r\n                            }\r\n                            return false;\r\n                        }\r\n                        ShowAD(param, grade) {\r\n                            switch (grade) {\r\n                                case AppRt.API.AdPoly.Grade.banner:\r\n                                    this.banner.Show(param);\r\n                                    if (param.cbi != null) {\r\n                                        param.cbi.Run(TJ.Define.Event.Expose);\r\n                                    }\r\n                                    break;\r\n                                case AppRt.API.AdPoly.Grade.normal:\r\n                                    this.insert.Show(param);\r\n                                    break;\r\n                                case AppRt.API.AdPoly.Grade.reward:\r\n                                    param.cbi.Add(TJ.Define.Event.Complete, () => { param.cbi.Run(TJ.Define.Event.Reward); });\r\n                                    this.video.Show(param);\r\n                                    break;\r\n                            }\r\n                        }\r\n                        RemoveAD(param, grade) {\r\n                            switch (grade) {\r\n                                case AppRt.API.AdPoly.Grade.banner:\r\n                                    this.banner.Remove();\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }\r\n                    class Banner {\r\n                        Init(...args) {\r\n                            this.posId = args[0];\r\n                        }\r\n                        Show(param) {\r\n                            let ws = TJ.Engine.RuntimeInfo.windowSize;\r\n                            let style = new AppRt.Extern.WX.BannerAdStyle();\r\n                            style.width = ws.width;\r\n                            style.height = style.width * .35;\r\n                            style.left = (ws.width - style.width) / 2;\r\n                            if ((param.place & 0b100000) > 0) {\r\n                                style.top = 0;\r\n                            }\r\n                            else {\r\n                                style.top = ws.height - style.height;\r\n                            }\r\n                            this.bannerAd = AppRt.Extern.WX.CreateBannerAd(this.posId, style, 30);\r\n                            this.bannerAd.OnLoad((res) => {\r\n                                console.log(\"WX.Banner.OnLoad \" + JSON.stringify(res));\r\n                                this.bannerAd.Show();\r\n                            });\r\n                            this.bannerAd.OnResize((res) => {\r\n                                console.log(\"WX.Banner.OnResize \" + JSON.stringify(res));\r\n                                if (res.width > 0 && res.height > 0) {\r\n                                    style.width = res.width;\r\n                                    style.height = res.height;\r\n                                    style.left = (ws.width - style.width) / 2;\r\n                                    if ((param.place & 0b100000) > 0) {\r\n                                        style.top = 0;\r\n                                    }\r\n                                    else {\r\n                                        style.top = ws.height - style.height;\r\n                                    }\r\n                                    if (this.bannerAd.style.left != style.left) {\r\n                                        this.bannerAd.style.left = style.left;\r\n                                    }\r\n                                    if (this.bannerAd.style.top != style.top) {\r\n                                        this.bannerAd.style.top = style.top;\r\n                                    }\r\n                                }\r\n                            });\r\n                            this.bannerAd.OnError((res) => {\r\n                                console.log(\"WX.Banner.OnError \" + JSON.stringify(res));\r\n                            });\r\n                        }\r\n                        Remove() {\r\n                            this.bannerAd.Destroy();\r\n                        }\r\n                    }\r\n                    class Insert {\r\n                        constructor() {\r\n                            this.loaded = false;\r\n                            this.loadHandle = 0;\r\n                        }\r\n                        Init(...args) {\r\n                            this.posId = args[0];\r\n                            this.insertAd = AppRt.Extern.WX.CreateInterstitialAd(this.posId);\r\n                            this.insertAd.OnLoad((res) => {\r\n                                console.log(\"WX.Insert.OnLoad \" + JSON.stringify(res));\r\n                                this.loaded = true;\r\n                            });\r\n                            this.insertAd.OnClose((res) => {\r\n                                console.log(\"WX.Insert.OnShow \" + JSON.stringify(res));\r\n                                this.loaded = false;\r\n                                this.Load(1000);\r\n                                this.param.cbi.Run(TJ.Define.Event.Expose);\r\n                            });\r\n                            this.insertAd.OnError((res) => {\r\n                                console.log(\"WX.Insert.OnError \" + JSON.stringify(res));\r\n                                this.Load(5000);\r\n                            });\r\n                            this.Load(1000);\r\n                        }\r\n                        Load(delay) {\r\n                            clearTimeout(this.loadHandle);\r\n                            this.loadHandle = window.setTimeout(() => {\r\n                                this.insertAd.Load();\r\n                            }, delay);\r\n                        }\r\n                        Ready() {\r\n                            return this.loaded;\r\n                        }\r\n                        Show(param) {\r\n                            this.param = param;\r\n                            this.insertAd.Show();\r\n                        }\r\n                    }\r\n                    class Video {\r\n                        constructor() {\r\n                            this.loaded = false;\r\n                            this.loadHandle = 0;\r\n                        }\r\n                        Init(...args) {\r\n                            this.posId = args[0];\r\n                            this.videoAd = AppRt.Extern.WX.CreateRewardedVideoAd(this.posId);\r\n                            this.videoAd.OnLoad((res) => {\r\n                                console.log(\"WX.Video.OnLoad \" + JSON.stringify(res));\r\n                                this.loaded = true;\r\n                            });\r\n                            this.videoAd.OnError((res) => {\r\n                                console.log(\"WX.Video.OnError \" + JSON.stringify(res));\r\n                                this.Load(5000);\r\n                            });\r\n                            this.videoAd.OnClose((res) => {\r\n                                console.log(\"WX.Video.OnClose \" + JSON.stringify(res));\r\n                                this.loaded = false;\r\n                                this.Load(1000);\r\n                                if (res.isEnded) {\r\n                                    this.param.cbi.Run(TJ.Define.Event.Complete);\r\n                                }\r\n                                this.param.cbi.Run(TJ.Define.Event.Close);\r\n                            });\r\n                            this.Load(1000);\r\n                        }\r\n                        Load(delay) {\r\n                            clearTimeout(this.loadHandle);\r\n                            this.loadHandle = window.setTimeout(() => {\r\n                                this.videoAd.Load();\r\n                            }, delay);\r\n                        }\r\n                        Ready() {\r\n                            return this.loaded;\r\n                        }\r\n                        Show(param) {\r\n                            this.param = param;\r\n                            this.videoAd.Show();\r\n                        }\r\n                    }\r\n                })(WX = SDK.WX || (SDK.WX = {}));\r\n            })(SDK = AppRt.SDK || (AppRt.SDK = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var AppRt;\r\n        (function (AppRt) {\r\n            var SDK;\r\n            (function (SDK) {\r\n                var XIAOMI;\r\n                (function (XIAOMI) {\r\n                    let QG;\r\n                    (function (QG) {\r\n                        TJ.Common.PriorityInit.Add(0, () => {\r\n                            if (TJ.Engine.RuntimeInfo.platform != TJ.Define.Platform.AppRt)\r\n                                return;\r\n                            switch (DP.Basic.channel) {\r\n                                case TJ.Define.Channel.AppRt.XIAOMI_AppRt:\r\n                                    TJ.Common.Component.Manager.AddComponent(AppInfo).DoInit();\r\n                                    break;\r\n                            }\r\n                        });\r\n                        TJ.Common.PriorityInit.Add(10, () => {\r\n                            if (TJ.Engine.RuntimeInfo.platform != TJ.Define.Platform.AppRt)\r\n                                return;\r\n                            switch (DP.Basic.channel) {\r\n                                case TJ.Define.Channel.AppRt.XIAOMI_AppRt:\r\n                                    TJ.Common.Component.Manager.AddComponent(Manager).DoInit();\r\n                                    break;\r\n                            }\r\n                        });\r\n                        class AppInfo extends TJ.API.AppInfo.IAppInfo {\r\n                            Channel() {\r\n                                if (AppRt.Extern.XIAOMI.QG.Exist()) {\r\n                                    return DP.Basic.channel;\r\n                                }\r\n                                return null;\r\n                            }\r\n                        }\r\n                        class Manager extends TJ.Common.Component.Interface {\r\n                            OnInit() {\r\n                                if (!AppRt.Extern.XIAOMI.QG.Exist())\r\n                                    return;\r\n                                TJ.Common.Component.Manager.AddComponent(Ads).DoInit();\r\n                            }\r\n                        }\r\n                        QG.Manager = Manager;\r\n                        class Ads extends AppRt.API.AdPoly.IAdPoly {\r\n                            OnInit() {\r\n                                if (DP.XIAOMI.QG.insertId != null) {\r\n                                    this.insert = new Insert();\r\n                                    this.insert.Init(DP.XIAOMI.QG.insertId);\r\n                                }\r\n                                if (DP.XIAOMI.QG.videoId != null) {\r\n                                    this.video = new Video();\r\n                                    this.video.Init(DP.XIAOMI.QG.videoId);\r\n                                }\r\n                            }\r\n                            ADReady(param, grade) {\r\n                                switch (grade) {\r\n                                    case AppRt.API.AdPoly.Grade.normal:\r\n                                        if (this.insert != null) {\r\n                                            return true;\r\n                                        }\r\n                                        break;\r\n                                    case AppRt.API.AdPoly.Grade.reward:\r\n                                        if (this.video != null && this.video.Ready()) {\r\n                                            return true;\r\n                                        }\r\n                                        break;\r\n                                }\r\n                                return false;\r\n                            }\r\n                            ShowAD(param, grade) {\r\n                                switch (grade) {\r\n                                    case AppRt.API.AdPoly.Grade.normal:\r\n                                        this.insert.Show(param);\r\n                                        break;\r\n                                    case AppRt.API.AdPoly.Grade.reward:\r\n                                        param.cbi.Add(TJ.Define.Event.Complete, () => { param.cbi.Run(TJ.Define.Event.Reward); });\r\n                                        this.video.Show(param);\r\n                                        break;\r\n                                }\r\n                            }\r\n                        }\r\n                        class Insert {\r\n                            Init(...args) {\r\n                                this.posId = args[0];\r\n                            }\r\n                            Show(param) {\r\n                                this.insertAd = AppRt.Extern.XIAOMI.QG.CreateInsertAd(this.posId);\r\n                                this.insertAd.OnLoad((res) => {\r\n                                    console.log(\"XIAOMI.QG.Insert.OnLoad = \" + JSON.stringify(res));\r\n                                    this.insertAd.Show();\r\n                                });\r\n                                this.insertAd.OnError((res) => {\r\n                                    console.log(\"XIAOMI.QG.Insert.OnError = \" + JSON.stringify(res));\r\n                                });\r\n                                this.insertAd.OnClose((res) => {\r\n                                    console.log(\"XIAOMI.QG.Insert.OnClose = \" + JSON.stringify(res));\r\n                                });\r\n                            }\r\n                        }\r\n                        class Video {\r\n                            constructor() {\r\n                                this.loaded = false;\r\n                                this.loadHandle = 0;\r\n                            }\r\n                            Init(...args) {\r\n                                this.posId = args[0];\r\n                                this.videoAd = AppRt.Extern.XIAOMI.QG.CreateRewardedVideoAd(this.posId);\r\n                                this.videoAd.OnLoad((res) => {\r\n                                    console.log(\"XIAOMI.QG.Video.OnLoad = \" + JSON.stringify(res));\r\n                                    this.loaded = true;\r\n                                });\r\n                                this.videoAd.OnError((res) => {\r\n                                    console.log(\"XIAOMI.QG.Video.OnError = \" + JSON.stringify(res));\r\n                                    this.loaded = false;\r\n                                    this.Load(5000);\r\n                                });\r\n                                this.videoAd.OnClose((res) => {\r\n                                    console.log(\"XIAOMI.QG.Video.OnClose = \" + JSON.stringify(res));\r\n                                    this.loaded = false;\r\n                                    this.Load(1000);\r\n                                    if (res && res.isEnded) {\r\n                                        this.param.cbi.Run(TJ.Define.Event.Complete);\r\n                                    }\r\n                                    this.param.cbi.Run(TJ.Define.Event.Close);\r\n                                });\r\n                                this.Load(1000);\r\n                            }\r\n                            Load(delay) {\r\n                                clearTimeout(this.loadHandle);\r\n                                this.loadHandle = window.setTimeout(() => {\r\n                                    this.videoAd.Load();\r\n                                }, delay);\r\n                            }\r\n                            Ready() {\r\n                                return this.loaded;\r\n                            }\r\n                            Show(param) {\r\n                                this.param = param;\r\n                                this.videoAd.Show();\r\n                            }\r\n                        }\r\n                    })(QG = XIAOMI.QG || (XIAOMI.QG = {}));\r\n                })(XIAOMI = SDK.XIAOMI || (SDK.XIAOMI = {}));\r\n            })(SDK = AppRt.SDK || (AppRt.SDK = {}));\r\n        })(AppRt = Platform.AppRt || (Platform.AppRt = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var iOS;\r\n        (function (iOS) {\r\n            var Extern;\r\n            (function (Extern) {\r\n                var ADS;\r\n                (function (ADS) {\r\n                    class ExApi {\r\n                        static Debug(fn, ...ps) {\r\n                            console.log(\"call TJ.iOS.ADS.ExApi.\" + fn + \" -> \" + ps);\r\n                        }\r\n                        static ShowBanner(json) {\r\n                            this.Debug(\"ShowBanner\", json);\r\n                            this.sc.CallStatic(\"ShowBanner:\", new TJ.Common.String_(json));\r\n                        }\r\n                        static RemoveBanner(json) {\r\n                            this.Debug(\"RemoveBanner\", json);\r\n                            this.sc.CallStatic(\"RemoveBanner:\", new TJ.Common.String_(json));\r\n                        }\r\n                        static NormalReady(json) {\r\n                            this.Debug(\"NormalReady\", json);\r\n                            return this.sc.CallStatic(TJ.Common.Bool_, \"NormalReady:\", new TJ.Common.String_(json)).value;\r\n                        }\r\n                        static ShowNormal(json) {\r\n                            this.Debug(\"ShowNormal\", json);\r\n                            this.sc.CallStatic(\"ShowNormal:\", new TJ.Common.String_(json));\r\n                        }\r\n                        static RewardReady(json) {\r\n                            this.Debug(\"RewardReady\", json);\r\n                            return this.sc.CallStatic(TJ.Common.Bool_, \"RewardReady:\", new TJ.Common.String_(json)).value;\r\n                        }\r\n                        static ShowReward(json) {\r\n                            this.Debug(\"ShowReward\", json);\r\n                            this.sc.CallStatic(\"ShowReward:\", new TJ.Common.String_(json));\r\n                        }\r\n                    }\r\n                    ExApi.sc = new TJ.Common.iOS.SwiftClass(\"TJ_ADS_ExApi\");\r\n                    ADS.ExApi = ExApi;\r\n                })(ADS = Extern.ADS || (Extern.ADS = {}));\r\n            })(Extern = iOS.Extern || (iOS.Extern = {}));\r\n        })(iOS = Platform.iOS || (Platform.iOS = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var iOS;\r\n        (function (iOS) {\r\n            var Extern;\r\n            (function (Extern) {\r\n                var APP;\r\n                (function (APP) {\r\n                    class Api {\r\n                        static Debug(fn, ...ps) {\r\n                            console.log(\"call TJ.iOS.APP.Api.\" + fn + \" -> \" + ps);\r\n                        }\r\n                        static AppGuid() {\r\n                            this.Debug(\"AppGuid\");\r\n                            return this.sc.CallStatic(TJ.Common.String_, \"AppGuid\").value;\r\n                        }\r\n                    }\r\n                    Api.sc = new TJ.Common.iOS.SwiftClass(\"TJ_APP_Api\");\r\n                    APP.Api = Api;\r\n                })(APP = Extern.APP || (Extern.APP = {}));\r\n            })(Extern = iOS.Extern || (iOS.Extern = {}));\r\n        })(iOS = Platform.iOS || (Platform.iOS = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var iOS;\r\n        (function (iOS) {\r\n            var Extern;\r\n            (function (Extern) {\r\n                var GSA;\r\n                (function (GSA) {\r\n                    class ExApi {\r\n                        static Debug(fn, ...ps) {\r\n                            console.log(\"call TJ.iOS.GSA.ExApi.\" + fn + \" -> \" + ps);\r\n                        }\r\n                        static Event(json) {\r\n                            this.Debug(\"Event\", json);\r\n                            this.sc.CallStatic(\"Event:\", new TJ.Common.String_(json));\r\n                        }\r\n                    }\r\n                    ExApi.sc = new TJ.Common.iOS.SwiftClass(\"TJ_GSA_ExApi\");\r\n                    GSA.ExApi = ExApi;\r\n                })(GSA = Extern.GSA || (Extern.GSA = {}));\r\n            })(Extern = iOS.Extern || (iOS.Extern = {}));\r\n        })(iOS = Platform.iOS || (Platform.iOS = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var iOS;\r\n        (function (iOS) {\r\n            var Extern;\r\n            (function (Extern) {\r\n                var IAP;\r\n                (function (IAP) {\r\n                    class ExApi {\r\n                        static Debug(fn, ...ps) {\r\n                            console.log(\"call TJ.iOS.IAP.ExApi.\" + fn + \" -> \" + ps);\r\n                        }\r\n                    }\r\n                    IAP.ExApi = ExApi;\r\n                })(IAP = Extern.IAP || (Extern.IAP = {}));\r\n            })(Extern = iOS.Extern || (iOS.Extern = {}));\r\n        })(iOS = Platform.iOS || (Platform.iOS = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var iOS;\r\n        (function (iOS) {\r\n            var Extern;\r\n            (function (Extern) {\r\n                var Tools;\r\n                (function (Tools) {\r\n                    class StoreKitHelper {\r\n                        static Debug(fn, ...ps) {\r\n                            console.log(\"call TJ.iOS.Tools.StoreKitHelper.\" + fn + \" -> \" + ps);\r\n                        }\r\n                        static ReviewApp() {\r\n                            this.Debug(\"ReviewApp\");\r\n                            this.sc.CallStatic(\"ReviewApp\");\r\n                        }\r\n                        static PopApp(appId) {\r\n                            this.Debug(\"PopApp\");\r\n                            this.sc.CallStatic(\"PopApp:\", new TJ.Common.String_(appId));\r\n                        }\r\n                    }\r\n                    StoreKitHelper.sc = new TJ.Common.iOS.SwiftClass(\"TJ_Tools_StoreKitHelper\");\r\n                    Tools.StoreKitHelper = StoreKitHelper;\r\n                    class VibrateHelper {\r\n                        static Debug(fn, ...ps) {\r\n                            console.log(\"call TJ.iOS.Tools.VibrateHelper.\" + fn + \" -> \" + ps);\r\n                        }\r\n                        static Short() {\r\n                            this.Debug(\"Short\");\r\n                            this.sc.CallStatic(\"Short\");\r\n                        }\r\n                        static Long() {\r\n                            this.Debug(\"Long\");\r\n                            this.sc.CallStatic(\"Long\");\r\n                        }\r\n                    }\r\n                    VibrateHelper.sc = new TJ.Common.iOS.SwiftClass(\"TJ_Tools_VibrateHelper\");\r\n                    Tools.VibrateHelper = VibrateHelper;\r\n                })(Tools = Extern.Tools || (Extern.Tools = {}));\r\n            })(Extern = iOS.Extern || (iOS.Extern = {}));\r\n        })(iOS = Platform.iOS || (Platform.iOS = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var iOS;\r\n        (function (iOS) {\r\n            var SDK;\r\n            (function (SDK) {\r\n                var AdService;\r\n                (function (AdService) {\r\n                    TJ.Common.PriorityInit.Add(0, () => {\r\n                        switch (TJ.Engine.RuntimeInfo.platform) {\r\n                            case TJ.Define.Platform.iOS:\r\n                                TJ.Common.Component.Manager.AddComponent(OAdService).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    class OAdService extends TJ.API.AdService.IAdService {\r\n                        ShowBanner(param) {\r\n                            iOS.Extern.ADS.ExApi.ShowBanner(param.ToJson());\r\n                        }\r\n                        RemoveBanner(param) {\r\n                            iOS.Extern.ADS.ExApi.RemoveBanner(param.ToJson());\r\n                        }\r\n                        NormalReady(param) {\r\n                            return iOS.Extern.ADS.ExApi.NormalReady(param.ToJson());\r\n                        }\r\n                        ShowNormal(param) {\r\n                            iOS.Extern.ADS.ExApi.ShowNormal(param.ToJson());\r\n                        }\r\n                        RewardReady(param) {\r\n                            return iOS.Extern.ADS.ExApi.RewardReady(param.ToJson());\r\n                        }\r\n                        ShowReward(param) {\r\n                            iOS.Extern.ADS.ExApi.ShowReward(param.ToJson());\r\n                        }\r\n                        Exist() {\r\n                            return true;\r\n                        }\r\n                    }\r\n                })(AdService = SDK.AdService || (SDK.AdService = {}));\r\n            })(SDK = iOS.SDK || (iOS.SDK = {}));\r\n        })(iOS = Platform.iOS || (Platform.iOS = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var iOS;\r\n        (function (iOS) {\r\n            var SDK;\r\n            (function (SDK) {\r\n                var Analytics;\r\n                (function (Analytics) {\r\n                    TJ.Common.PriorityInit.Add(0, () => {\r\n                        switch (TJ.Engine.RuntimeInfo.platform) {\r\n                            case TJ.Define.Platform.iOS:\r\n                                TJ.Common.Component.Manager.AddComponent(OAnalytics).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    class OAnalytics extends TJ.API.Analytics.IAnalytics {\r\n                        Event(param) {\r\n                            iOS.Extern.GSA.ExApi.Event(param.ToJson());\r\n                        }\r\n                    }\r\n                })(Analytics = SDK.Analytics || (SDK.Analytics = {}));\r\n            })(SDK = iOS.SDK || (iOS.SDK = {}));\r\n        })(iOS = Platform.iOS || (Platform.iOS = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var iOS;\r\n        (function (iOS) {\r\n            var SDK;\r\n            (function (SDK) {\r\n                var AppCtl;\r\n                (function (AppCtl) {\r\n                    TJ.Common.PriorityInit.Add(0, () => {\r\n                        switch (TJ.Engine.RuntimeInfo.platform) {\r\n                            case TJ.Define.Platform.iOS:\r\n                                TJ.Common.Component.Manager.AddComponent(OAppCtl).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    class OAppCtl extends TJ.API.AppCtl.IAppCtl {\r\n                        Review() {\r\n                            iOS.Extern.Tools.StoreKitHelper.ReviewApp();\r\n                        }\r\n                    }\r\n                })(AppCtl = SDK.AppCtl || (SDK.AppCtl = {}));\r\n            })(SDK = iOS.SDK || (iOS.SDK = {}));\r\n        })(iOS = Platform.iOS || (Platform.iOS = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var iOS;\r\n        (function (iOS) {\r\n            var SDK;\r\n            (function (SDK) {\r\n                var AppInfo;\r\n                (function (AppInfo) {\r\n                    TJ.Common.PriorityInit.Add(0, () => {\r\n                        switch (TJ.Engine.RuntimeInfo.platform) {\r\n                            case TJ.Define.Platform.iOS:\r\n                                TJ.Common.Component.Manager.AddComponent(OAppInfo).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    class OAppInfo extends TJ.API.AppInfo.IAppInfo {\r\n                        AppGuid() {\r\n                            return iOS.Extern.APP.Api.AppGuid();\r\n                        }\r\n                        Channel() {\r\n                            return TJ.Define.Channel.iOS.AppStore_iOS;\r\n                        }\r\n                    }\r\n                })(AppInfo = SDK.AppInfo || (SDK.AppInfo = {}));\r\n            })(SDK = iOS.SDK || (iOS.SDK = {}));\r\n        })(iOS = Platform.iOS || (Platform.iOS = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var iOS;\r\n        (function (iOS) {\r\n            var SDK;\r\n            (function (SDK) {\r\n                var Promo;\r\n                (function (Promo) {\r\n                    TJ.Common.PriorityInit.Add(0, () => {\r\n                        switch (TJ.Engine.RuntimeInfo.platform) {\r\n                            case TJ.Define.Platform.iOS:\r\n                                TJ.Common.Component.Manager.AddComponent(OPromo).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    class OPromo extends TJ.API.Promo.IPromo {\r\n                        Pop(param) {\r\n                            iOS.Extern.Tools.StoreKitHelper.PopApp(param.appId);\r\n                        }\r\n                    }\r\n                })(Promo = SDK.Promo || (SDK.Promo = {}));\r\n            })(SDK = iOS.SDK || (iOS.SDK = {}));\r\n        })(iOS = Platform.iOS || (Platform.iOS = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var Platform;\r\n    (function (Platform) {\r\n        var iOS;\r\n        (function (iOS) {\r\n            var SDK;\r\n            (function (SDK) {\r\n                var Vibrate;\r\n                (function (Vibrate) {\r\n                    TJ.Common.PriorityInit.Add(0, () => {\r\n                        switch (TJ.Engine.RuntimeInfo.platform) {\r\n                            case TJ.Define.Platform.iOS:\r\n                                TJ.Common.Component.Manager.AddComponent(OVibrate).DoInit();\r\n                                break;\r\n                        }\r\n                    });\r\n                    class OVibrate extends TJ.API.Vibrate.IVibrate {\r\n                        Short() {\r\n                            iOS.Extern.Tools.VibrateHelper.Short();\r\n                        }\r\n                        Long() {\r\n                            iOS.Extern.Tools.VibrateHelper.Long();\r\n                        }\r\n                    }\r\n                })(Vibrate = SDK.Vibrate || (SDK.Vibrate = {}));\r\n            })(SDK = iOS.SDK || (iOS.SDK = {}));\r\n        })(iOS = Platform.iOS || (Platform.iOS = {}));\r\n    })(Platform = TJ.Platform || (TJ.Platform = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var ADS;\r\n    (function (ADS) {\r\n        class Param extends TJ.API.AdService.Param {\r\n        }\r\n        ADS.Param = Param;\r\n        let Place;\r\n        (function (Place) {\r\n            Place[Place[\"LEFT\"] = 3] = \"LEFT\";\r\n            Place[Place[\"RIGHT\"] = 5] = \"RIGHT\";\r\n            Place[Place[\"CENTER\"] = 17] = \"CENTER\";\r\n            Place[Place[\"TOP\"] = 48] = \"TOP\";\r\n            Place[Place[\"BOTTOM\"] = 80] = \"BOTTOM\";\r\n        })(Place = ADS.Place || (ADS.Place = {}));\r\n        class Api {\r\n            static ShowBanner(param) {\r\n                TJ.API.AdService.ShowBanner(param);\r\n            }\r\n            static RemoveBanner(param) {\r\n                TJ.API.AdService.RemoveBanner(param);\r\n            }\r\n            static NormalReady(param) {\r\n                return TJ.API.AdService.NormalReady(param);\r\n            }\r\n            static ShowNormal(param) {\r\n                TJ.API.AdService.ShowNormal(param);\r\n            }\r\n            static RewardReady(param) {\r\n                return TJ.API.AdService.RewardReady(param);\r\n            }\r\n            static ShowReward(param) {\r\n                TJ.API.AdService.ShowReward(param);\r\n            }\r\n            static get exist() {\r\n                return TJ.API.AdService.Exist();\r\n            }\r\n        }\r\n        ADS.Api = Api;\r\n    })(ADS = TJ.ADS || (TJ.ADS = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var APP;\r\n    (function (APP) {\r\n        class Api {\r\n            static Quit() {\r\n                TJ.API.AppCtl.Quit();\r\n            }\r\n            static get appGuid() {\r\n                return TJ.API.AppInfo.AppGuid();\r\n            }\r\n            static get productName() {\r\n                return TJ.API.AppInfo.ProductName();\r\n            }\r\n            static get packageName() {\r\n                return TJ.API.AppInfo.PackageName();\r\n            }\r\n            static get versionName() {\r\n                return TJ.API.AppInfo.VersionName();\r\n            }\r\n            static get versionCode() {\r\n                return TJ.API.AppInfo.VersionCode();\r\n            }\r\n            static get channel() {\r\n                return TJ.API.AppInfo.Channel();\r\n            }\r\n            static UserAgreement() {\r\n                TJ.API.AppCtl.UserAgreement();\r\n            }\r\n            static PrivacyPolicy() {\r\n                TJ.API.AppCtl.PrivacyPolicy();\r\n            }\r\n        }\r\n        APP.Api = Api;\r\n    })(APP = TJ.APP || (TJ.APP = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var GSA;\r\n    (function (GSA) {\r\n        class Param extends TJ.API.Analytics.Param {\r\n        }\r\n        GSA.Param = Param;\r\n        class Api {\r\n            static Event(param) {\r\n                TJ.API.Analytics.Event(param);\r\n            }\r\n            static EventBegin(param) {\r\n                TJ.API.Analytics.EventBegin(param);\r\n            }\r\n            static EventEnd(param) {\r\n                TJ.API.Analytics.EventEnd(param);\r\n            }\r\n            static PageBegin(param) {\r\n                TJ.API.Analytics.PageBegin(param);\r\n            }\r\n            static PageEnd(param) {\r\n                TJ.API.Analytics.PageEnd(param);\r\n            }\r\n            static LevelStart(param) {\r\n                TJ.API.Analytics.LevelStart(param);\r\n            }\r\n            static LevelFinish(param) {\r\n                TJ.API.Analytics.LevelFinish(param);\r\n            }\r\n            static LevelFail(param) {\r\n                TJ.API.Analytics.LevelFail(param);\r\n            }\r\n            static Pay(param) {\r\n                TJ.API.Analytics.Pay(param);\r\n            }\r\n            static Buy(param) {\r\n                TJ.API.Analytics.Buy(param);\r\n            }\r\n            static Use(param) {\r\n                TJ.API.Analytics.Use(param);\r\n            }\r\n            static Bonus(param) {\r\n                TJ.API.Analytics.Bonus(param);\r\n            }\r\n        }\r\n        GSA.Api = Api;\r\n    })(GSA = TJ.GSA || (TJ.GSA = {}));\r\n})(TJ || (TJ = {}));\r\n(function (TJ) {\r\n    var IAP;\r\n    (function (IAP) {\r\n        class Param extends TJ.API.Billing.Param {\r\n        }\r\n        IAP.Param = Param;\r\n        class Api {\r\n            static Purchase(param) {\r\n                TJ.API.Billing.Purchase(param);\r\n            }\r\n            static QueryAll(param) {\r\n                TJ.API.Billing.QueryAll(param);\r\n            }\r\n            static Consume(param) {\r\n                TJ.API.Billing.Consume(param);\r\n            }\r\n            static get exist() {\r\n                return TJ.API.Billing.Exist();\r\n            }\r\n        }\r\n        IAP.Api = Api;\r\n    })(IAP = TJ.IAP || (TJ.IAP = {}));\r\n})(TJ || (TJ = {}));\r\nwindow[\"TJ\"] = TJ;\r\n",
  "references": []
}
