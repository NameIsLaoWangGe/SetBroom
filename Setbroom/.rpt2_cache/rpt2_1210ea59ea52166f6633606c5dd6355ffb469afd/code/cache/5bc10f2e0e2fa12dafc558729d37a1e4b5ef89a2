{
  "code": "export var lwg;\r\n(function (lwg) {\r\n    let Global;\r\n    (function (Global) {\r\n        Global._gameStart = false;\r\n        Global._timeLineSwitch = false;\r\n        Global._gameTimeLine = 0;\r\n        Global._goldNum = 0;\r\n        Global._taskContentArray = [];\r\n        Global._taskPrePoint = new Laya.Point();\r\n        Global._firstConnect = false;\r\n        Global._connectState = false;\r\n        Global._voiceSwitch = true;\r\n        Global._shakeSwitch = true;\r\n        Global._havePifu = ['01_xiaofu'];\r\n        Global._allPifu = ['01_xiaofu', '02_konglong', '03_xueren', '04_qipao', '05_qianxun', '06_lvyifu', '07_maozi', '08_lufei', '09_chaoren'];\r\n        function levelInformation() {\r\n            let data = lwg.Global._levelsData;\r\n            let levelData = data[lwg.Global._gameLevel - 1];\r\n            lwg.Global._taskContentArray = [];\r\n            for (let index = 0; index < levelData['type'].length; index++) {\r\n                let taskobj = {};\r\n                const type = levelData['type'][index];\r\n                taskobj['type'] = type;\r\n                const time = levelData['time'][index];\r\n                taskobj['time'] = time;\r\n                const dec = levelData['dec'][index];\r\n                taskobj['dec'] = dec;\r\n                lwg.Global._taskContentArray.push(taskobj);\r\n            }\r\n            console.log(lwg.Global._taskContentArray);\r\n            lwg.Global._taskPreNum = 1;\r\n        }\r\n        Global.levelInformation = levelInformation;\r\n        function openInterface(openName, cloesScene, func) {\r\n            Laya.Scene.load('sys/' + openName + '.json', Laya.Handler.create(this, function (scene) {\r\n                Laya.stage.addChild(scene);\r\n                let background = scene.getChildByName('background');\r\n                if (background) {\r\n                    background.width = Laya.stage.width;\r\n                    background.height = Laya.stage.height;\r\n                }\r\n                switch (openName) {\r\n                    case 'UIVictory':\r\n                        console.log('本关胜利');\r\n                        break;\r\n                    case 'UIDefeated':\r\n                        console.log('本关失败');\r\n                        break;\r\n                    case 'UITask':\r\n                        Global.UITask = scene;\r\n                        console.log('任务界面');\r\n                        break;\r\n                    case 'UIStart':\r\n                        Global.UIStart = scene;\r\n                        console.log('开始界面');\r\n                        break;\r\n                    case 'UISet':\r\n                        console.log('设置界面');\r\n                        Global.UISet = scene;\r\n                        break;\r\n                    case 'UILoding':\r\n                        console.log('加载界面');\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                if (cloesScene) {\r\n                    cloesScene.close();\r\n                }\r\n                if (func) {\r\n                    func();\r\n                }\r\n            }));\r\n        }\r\n        Global.openInterface = openInterface;\r\n        function getDisplayScene(sceneName) {\r\n            let scene = Laya.stage.getChildByName(sceneName);\r\n            if (scene) {\r\n                return scene;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        Global.getDisplayScene = getDisplayScene;\r\n    })(Global = lwg.Global || (lwg.Global = {}));\r\n    let Enum;\r\n    (function (Enum) {\r\n        let ClickType;\r\n        (function (ClickType) {\r\n            ClickType[\"noEffect\"] = \"noEffect\";\r\n            ClickType[\"largen\"] = \"largen\";\r\n            ClickType[\"balloon\"] = \"balloon\";\r\n            ClickType[\"beetle\"] = \"beetle\";\r\n        })(ClickType = Enum.ClickType || (Enum.ClickType = {}));\r\n        let voiceUrl;\r\n        (function (voiceUrl) {\r\n            voiceUrl[\"btn\"] = \"voice/btn.wav\";\r\n            voiceUrl[\"bgm\"] = \"voice/bgm.mp3\";\r\n        })(voiceUrl = Enum.voiceUrl || (Enum.voiceUrl = {}));\r\n        let PifuAllName;\r\n        (function (PifuAllName) {\r\n            PifuAllName[PifuAllName[\"01_xiaofu\"] = 0] = \"01_xiaofu\";\r\n            PifuAllName[PifuAllName[\"02_konglong\"] = 1] = \"02_konglong\";\r\n            PifuAllName[PifuAllName[\"03_xueren\"] = 2] = \"03_xueren\";\r\n            PifuAllName[PifuAllName[\"04_qipao\"] = 3] = \"04_qipao\";\r\n            PifuAllName[PifuAllName[\"05_qianxun\"] = 4] = \"05_qianxun\";\r\n            PifuAllName[PifuAllName[\"06_lvyifu\"] = 5] = \"06_lvyifu\";\r\n            PifuAllName[PifuAllName[\"07_maozi\"] = 6] = \"07_maozi\";\r\n            PifuAllName[PifuAllName[\"08_lufei\"] = 7] = \"08_lufei\";\r\n            PifuAllName[PifuAllName[\"09_chaoren\"] = 8] = \"09_chaoren\";\r\n        })(PifuAllName = Enum.PifuAllName || (Enum.PifuAllName = {}));\r\n        let PifuAllName_Ch;\r\n        (function (PifuAllName_Ch) {\r\n            PifuAllName_Ch[PifuAllName_Ch[\"\\u540C\\u684C\"] = 0] = \"\\u540C\\u684C\";\r\n            PifuAllName_Ch[PifuAllName_Ch[\"\\u5C0F\\u6050\\u9F99\"] = 1] = \"\\u5C0F\\u6050\\u9F99\";\r\n            PifuAllName_Ch[PifuAllName_Ch[\"\\u96EA\\u4EBA\"] = 2] = \"\\u96EA\\u4EBA\";\r\n            PifuAllName_Ch[PifuAllName_Ch[\"\\u557E\\u557E\"] = 3] = \"\\u557E\\u557E\";\r\n            PifuAllName_Ch[PifuAllName_Ch[\"\\u5C0F\\u828A\"] = 4] = \"\\u5C0F\\u828A\";\r\n            PifuAllName_Ch[PifuAllName_Ch[\"\\u9EA6\\u5C14\"] = 5] = \"\\u9EA6\\u5C14\";\r\n            PifuAllName_Ch[PifuAllName_Ch[\"\\u68D2\\u7403\\u5C0F\\u5B50\"] = 6] = \"\\u68D2\\u7403\\u5C0F\\u5B50\";\r\n            PifuAllName_Ch[PifuAllName_Ch[\"\\u9646\\u80A5\"] = 7] = \"\\u9646\\u80A5\";\r\n            PifuAllName_Ch[PifuAllName_Ch[\"\\u82F1\\u96C4\"] = 8] = \"\\u82F1\\u96C4\";\r\n        })(PifuAllName_Ch = Enum.PifuAllName_Ch || (Enum.PifuAllName_Ch = {}));\r\n        let PifuSkin;\r\n        (function (PifuSkin) {\r\n            PifuSkin[PifuSkin[\"pifu/pifu_01_xiaofu.png\"] = 0] = \"pifu/pifu_01_xiaofu.png\";\r\n            PifuSkin[PifuSkin[\"pifu/pifu_02_konglong.png\"] = 1] = \"pifu/pifu_02_konglong.png\";\r\n            PifuSkin[PifuSkin[\"pifu/pifu_03_xueren.png\"] = 2] = \"pifu/pifu_03_xueren.png\";\r\n            PifuSkin[PifuSkin[\"pifu/pifu_04_qipao.png\"] = 3] = \"pifu/pifu_04_qipao.png\";\r\n            PifuSkin[PifuSkin[\"pifu/pifu_05_qianxun.png\"] = 4] = \"pifu/pifu_05_qianxun.png\";\r\n            PifuSkin[PifuSkin[\"pifu/pifu_06_lvyifu.png\"] = 5] = \"pifu/pifu_06_lvyifu.png\";\r\n            PifuSkin[PifuSkin[\"pifu/pifu_07_maozi.png\"] = 6] = \"pifu/pifu_07_maozi.png\";\r\n            PifuSkin[PifuSkin[\"pifu/pifu_08_lufei.png\"] = 7] = \"pifu/pifu_08_lufei.png\";\r\n            PifuSkin[PifuSkin[\"pifu/pifu_09_chaoren.png\"] = 8] = \"pifu/pifu_09_chaoren.png\";\r\n        })(PifuSkin = Enum.PifuSkin || (Enum.PifuSkin = {}));\r\n        let PifuSkin_No;\r\n        (function (PifuSkin_No) {\r\n            PifuSkin_No[PifuSkin_No[\"pifu/pifu_01_xiaofu_h.png\"] = 0] = \"pifu/pifu_01_xiaofu_h.png\";\r\n            PifuSkin_No[PifuSkin_No[\"pifu/pifu_02_konglong_h.png\"] = 1] = \"pifu/pifu_02_konglong_h.png\";\r\n            PifuSkin_No[PifuSkin_No[\"pifu/pifu_03_xueren_h.png\"] = 2] = \"pifu/pifu_03_xueren_h.png\";\r\n            PifuSkin_No[PifuSkin_No[\"pifu/pifu_04_qipao_h.png\"] = 3] = \"pifu/pifu_04_qipao_h.png\";\r\n            PifuSkin_No[PifuSkin_No[\"pifu/pifu_05_qianxun_h.png\"] = 4] = \"pifu/pifu_05_qianxun_h.png\";\r\n            PifuSkin_No[PifuSkin_No[\"pifu/pifu_06_lvyifu_h.png\"] = 5] = \"pifu/pifu_06_lvyifu_h.png\";\r\n            PifuSkin_No[PifuSkin_No[\"pifu/pifu_07_maozi_h.png\"] = 6] = \"pifu/pifu_07_maozi_h.png\";\r\n            PifuSkin_No[PifuSkin_No[\"pifu/pifu_08_lufei_h.png\"] = 7] = \"pifu/pifu_08_lufei_h.png\";\r\n            PifuSkin_No[PifuSkin_No[\"pifu/pifu_09_chaoren_h.png\"] = 8] = \"pifu/pifu_09_chaoren_h.png\";\r\n        })(PifuSkin_No = Enum.PifuSkin_No || (Enum.PifuSkin_No = {}));\r\n        let TaskType;\r\n        (function (TaskType) {\r\n            TaskType[\"topUp\"] = \"topUp\";\r\n            TaskType[\"move\"] = \"move\";\r\n            TaskType[\"continue\"] = \"continue\";\r\n            TaskType[\"gold\"] = \"gold\";\r\n        })(TaskType = Enum.TaskType || (Enum.TaskType = {}));\r\n        let SceneName;\r\n        (function (SceneName) {\r\n            SceneName[\"UILoding\"] = \"UILoding\";\r\n            SceneName[\"UIMain\"] = \"UIMain\";\r\n            SceneName[\"UIStart\"] = \"UIStart\";\r\n            SceneName[\"UITask\"] = \"UITask\";\r\n            SceneName[\"UIVictory\"] = \"UIVictory\";\r\n            SceneName[\"UIDefeated\"] = \"UIDefeated\";\r\n        })(SceneName = Enum.SceneName || (Enum.SceneName = {}));\r\n    })(Enum = lwg.Enum || (lwg.Enum = {}));\r\n    let Click;\r\n    (function (Click) {\r\n        function on(effect, audioUrl, target, caller, down, move, up, out) {\r\n            let btnEffect;\r\n            if (audioUrl) {\r\n                Click.audioUrl = audioUrl;\r\n            }\r\n            else {\r\n                Click.audioUrl = Enum.voiceUrl.btn;\r\n            }\r\n            switch (effect) {\r\n                case 'noEffect':\r\n                    btnEffect = new Btn_NoEffect();\r\n                    break;\r\n                case 'largen':\r\n                    btnEffect = new Btn_LargenEffect();\r\n                    break;\r\n                case 'balloon':\r\n                    btnEffect = new Btn_Balloon();\r\n                    break;\r\n                case 'beetle':\r\n                    btnEffect = new Btn_Beetle();\r\n                    break;\r\n                default:\r\n                    btnEffect = new Btn_LargenEffect();\r\n                    break;\r\n            }\r\n            target.on(Laya.Event.MOUSE_DOWN, caller, down === null ? btnEffect.down : down);\r\n            target.on(Laya.Event.MOUSE_MOVE, caller, move === null ? btnEffect.move : move);\r\n            target.on(Laya.Event.MOUSE_UP, caller, up === null ? btnEffect.up : up);\r\n            target.on(Laya.Event.MOUSE_OUT, caller, out === null ? btnEffect.out : out);\r\n        }\r\n        Click.on = on;\r\n        function off(effect, target, caller, down, move, up, out) {\r\n            let btnEffect;\r\n            switch (effect) {\r\n                case 'largen':\r\n                    btnEffect = new Btn_LargenEffect();\r\n                    break;\r\n                case 'balloon':\r\n                    btnEffect = new Btn_Balloon();\r\n                    break;\r\n                case 'beetle':\r\n                    btnEffect = new Btn_Beetle();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            target.off(Laya.Event.MOUSE_DOWN, caller, down === null ? btnEffect.down : down);\r\n            target.off(Laya.Event.MOUSE_MOVE, caller, move === null ? btnEffect.move : move);\r\n            target.off(Laya.Event.MOUSE_UP, caller, up === null ? btnEffect.up : up);\r\n            target.off(Laya.Event.MOUSE_OUT, caller, out === null ? btnEffect.out : out);\r\n        }\r\n        Click.off = off;\r\n    })(Click = lwg.Click || (lwg.Click = {}));\r\n    class Btn_NoEffect {\r\n        constructor() {\r\n        }\r\n        down(event) {\r\n            console.log('防止穿透！');\r\n        }\r\n        move(event) {\r\n        }\r\n        up(event) {\r\n        }\r\n        out(event) {\r\n        }\r\n    }\r\n    lwg.Btn_NoEffect = Btn_NoEffect;\r\n    class Btn_LargenEffect {\r\n        constructor() {\r\n        }\r\n        down(event) {\r\n            event.currentTarget.scale(1.1, 1.1);\r\n            if (lwg.Global._voiceSwitch) {\r\n                Laya.SoundManager.playSound(Click.audioUrl, 1, Laya.Handler.create(this, function () { }));\r\n            }\r\n        }\r\n        move(event) {\r\n            event.currentTarget.scale(1, 1);\r\n        }\r\n        up(event) {\r\n            event.currentTarget.scale(1, 1);\r\n        }\r\n        out(event) {\r\n            event.currentTarget.scale(1, 1);\r\n        }\r\n    }\r\n    lwg.Btn_LargenEffect = Btn_LargenEffect;\r\n    class Btn_Balloon {\r\n        constructor() {\r\n        }\r\n        down(event) {\r\n            event.currentTarget.scale(Click.balloonScale + 0.06, Click.balloonScale + 0.06);\r\n            Laya.SoundManager.playSound(Click.audioUrl, 1, Laya.Handler.create(this, function () { }));\r\n        }\r\n        up(event) {\r\n            event.currentTarget.scale(Click.balloonScale, Click.balloonScale);\r\n        }\r\n        move(event) {\r\n            event.currentTarget.scale(Click.balloonScale, Click.balloonScale);\r\n        }\r\n        out(event) {\r\n            event.currentTarget.scale(Click.balloonScale, Click.balloonScale);\r\n        }\r\n    }\r\n    lwg.Btn_Balloon = Btn_Balloon;\r\n    class Btn_Beetle {\r\n        constructor() {\r\n        }\r\n        down(event) {\r\n            event.currentTarget.scale(Click.beetleScale + 0.06, Click.beetleScale + 0.06);\r\n            Laya.SoundManager.playSound(Click.audioUrl, 1, Laya.Handler.create(this, function () { }));\r\n        }\r\n        up(event) {\r\n            event.currentTarget.scale(Click.beetleScale, Click.beetleScale);\r\n        }\r\n        move(event) {\r\n            event.currentTarget.scale(Click.beetleScale, Click.beetleScale);\r\n        }\r\n        out(event) {\r\n            event.currentTarget.scale(Click.beetleScale, Click.beetleScale);\r\n        }\r\n    }\r\n    lwg.Btn_Beetle = Btn_Beetle;\r\n    let PalyAudio;\r\n    (function (PalyAudio) {\r\n        function playSound(url, number) {\r\n            Laya.SoundManager.playSound(url, number, Laya.Handler.create(this, function () { }));\r\n        }\r\n        PalyAudio.playSound = playSound;\r\n        function playMusic(url, number, deley) {\r\n            Laya.SoundManager.playMusic(url, number, Laya.Handler.create(this, function () { }), deley);\r\n        }\r\n        PalyAudio.playMusic = playMusic;\r\n        function stopMusic() {\r\n            Laya.SoundManager.stopMusic();\r\n        }\r\n        PalyAudio.stopMusic = stopMusic;\r\n    })(PalyAudio = lwg.PalyAudio || (lwg.PalyAudio = {}));\r\n    let Tools;\r\n    (function (Tools) {\r\n        function drawPieMask(parent, startAngle, endAngle) {\r\n            parent.cacheAs = \"bitmap\";\r\n            let drawPieSpt = new Laya.Sprite();\r\n            drawPieSpt.blendMode = \"destination-out\";\r\n            parent.addChild(drawPieSpt);\r\n            let drawPie = drawPieSpt.graphics.drawPie(parent.width / 2, parent.height / 2, parent.width / 2 + 10, startAngle, endAngle, \"#000000\");\r\n            return drawPie;\r\n        }\r\n        Tools.drawPieMask = drawPieMask;\r\n        function transitionScreenPointfor3D(v3, camera) {\r\n            let ScreenV3 = new Laya.Vector3();\r\n            camera.viewport.project(v3, camera.projectionViewMatrix, ScreenV3);\r\n            let point = new Laya.Vector2();\r\n            point.x = ScreenV3.x;\r\n            point.y = ScreenV3.y;\r\n            return point;\r\n        }\r\n        Tools.transitionScreenPointfor3D = transitionScreenPointfor3D;\r\n        function random(n, m) {\r\n            m = m || 10;\r\n            const c = m - n + 1;\r\n            return Math.floor(Math.random() * c + n);\r\n        }\r\n        Tools.random = random;\r\n        function getRandomArrayElements(arr, count) {\r\n            var shuffled = arr.slice(0), i = arr.length, min = i - count, temp, index;\r\n            while (i-- > min) {\r\n                index = Math.floor((i + 1) * Math.random());\r\n                temp = shuffled[index];\r\n                shuffled[index] = shuffled[i];\r\n                shuffled[i] = temp;\r\n            }\r\n            return shuffled.slice(min);\r\n        }\r\n        Tools.getRandomArrayElements = getRandomArrayElements;\r\n        function getArrayDifElements(arr, count) {\r\n            const result = [];\r\n            let i = 0;\r\n            for (i; i < count; i++) {\r\n                const temp = getDiffEle(arr.slice(), result, i);\r\n                result.push(temp);\r\n            }\r\n            return result;\r\n        }\r\n        Tools.getArrayDifElements = getArrayDifElements;\r\n        function getDiffEle(arr, result, place) {\r\n            let indexArr = [];\r\n            let i = 0;\r\n            for (i; i < arr.length - place; i++) {\r\n                indexArr.push(i);\r\n            }\r\n            const ranIndex = Math.floor(Math.random() * indexArr.length);\r\n            if (result.indexOf(arr[ranIndex]) === -1) {\r\n                const backNum = arr[ranIndex];\r\n                arr[ranIndex] = arr[indexArr.length - 1];\r\n                return backNum;\r\n            }\r\n            else {\r\n                arr.splice(ranIndex, 1);\r\n                return getDiffEle(arr, result, place);\r\n            }\r\n        }\r\n        Tools.getDiffEle = getDiffEle;\r\n        Tools.roleDragCan = false;\r\n        function copydata(obj) {\r\n            const ret = {};\r\n            Object.getOwnPropertyNames(obj).forEach(name => {\r\n                ret[name] = obj[name];\r\n            });\r\n            return ret;\r\n        }\r\n        Tools.copydata = copydata;\r\n        function fillArray(value, len) {\r\n            var arr = [];\r\n            for (var i = 0; i < len; i++) {\r\n                arr.push(value);\r\n            }\r\n            return arr;\r\n        }\r\n        Tools.fillArray = fillArray;\r\n        function speedByAngle(angle, XY) {\r\n            if (angle % 90 === 0 || !angle) {\r\n                console.error(\"计算的角度异常,需要查看：\", angle);\r\n                return;\r\n            }\r\n            let speedXY = { x: 0, y: 0 };\r\n            speedXY.y = XY.y;\r\n            speedXY.x = speedXY.y / Math.tan(angle * Math.PI / 180);\r\n            return speedXY;\r\n        }\r\n        Tools.speedByAngle = speedByAngle;\r\n        function speedXYByAngle(angle, speed) {\r\n            if (angle % 90 === 0 || !angle) {\r\n            }\r\n            const speedXY = { x: 0, y: 0 };\r\n            speedXY.x = speed * Math.cos(angle * Math.PI / 180);\r\n            speedXY.y = speed * Math.sin(angle * Math.PI / 180);\r\n            return speedXY;\r\n        }\r\n        Tools.speedXYByAngle = speedXYByAngle;\r\n        function speedLabelByAngle(angle, speed, speedBate) {\r\n            const speedXY = { x: 0, y: 0 };\r\n            const selfAngle = angle;\r\n            const defaultSpeed = speed;\r\n            const bate = speedBate || 1;\r\n            if (selfAngle % 90 === 0) {\r\n                if (selfAngle === 0 || selfAngle === 360) {\r\n                    speedXY.x = Math.abs(defaultSpeed) * bate;\r\n                }\r\n                else if (selfAngle === 90) {\r\n                    speedXY.y = Math.abs(defaultSpeed) * bate;\r\n                }\r\n                else if (selfAngle === 180) {\r\n                    speedXY.x = -Math.abs(defaultSpeed) * bate;\r\n                }\r\n                else {\r\n                    speedXY.y = -Math.abs(defaultSpeed) * bate;\r\n                }\r\n            }\r\n            else {\r\n                const tempXY = Tools.speedXYByAngle(selfAngle, defaultSpeed);\r\n                speedXY.x = tempXY.x;\r\n                speedXY.y = tempXY.y;\r\n                if (selfAngle > 0 && selfAngle < 180) {\r\n                    speedXY.y = Math.abs(speedXY.y) * bate;\r\n                }\r\n                else {\r\n                    speedXY.y = -Math.abs(speedXY.y) * bate;\r\n                }\r\n                if (selfAngle > 90 && selfAngle < 270) {\r\n                    speedXY.x = -Math.abs(speedXY.x) * bate;\r\n                }\r\n                else {\r\n                    speedXY.x = Math.abs(speedXY.x) * bate;\r\n                }\r\n            }\r\n            return speedXY;\r\n        }\r\n        Tools.speedLabelByAngle = speedLabelByAngle;\r\n        function getRad(degree) {\r\n            return degree / 180 * Math.PI;\r\n        }\r\n        Tools.getRad = getRad;\r\n        function getRoundPos(angle, radius, centPos) {\r\n            var center = centPos;\r\n            var radius = radius;\r\n            var hudu = (2 * Math.PI / 360) * angle;\r\n            var X = center.x + Math.sin(hudu) * radius;\r\n            var Y = center.y - Math.cos(hudu) * radius;\r\n            return { x: X, y: Y };\r\n        }\r\n        Tools.getRoundPos = getRoundPos;\r\n        function converteNum(num) {\r\n            if (typeof (num) !== \"number\") {\r\n                console.warn(\"要转化的数字并不为number\");\r\n                return num;\r\n            }\r\n            let backNum;\r\n            if (num < 1000) {\r\n                backNum = \"\" + num;\r\n            }\r\n            else if (num < 1000000) {\r\n                backNum = \"\" + (num / 1000).toFixed(1) + \"k\";\r\n            }\r\n            else if (num < 10e8) {\r\n                backNum = \"\" + (num / 1000000).toFixed(1) + \"m\";\r\n            }\r\n            else {\r\n                backNum = \"\" + num;\r\n            }\r\n            return backNum;\r\n        }\r\n        Tools.converteNum = converteNum;\r\n    })(Tools = lwg.Tools || (lwg.Tools = {}));\r\n})(lwg || (lwg = {}));\r\nexport default lwg;\r\n",
  "references": []
}
