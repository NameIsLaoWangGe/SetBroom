{
  "code": "import UIMain_Person from './UIMain_Person';\r\nimport UIMain_Besom from './UIMain_Besom';\r\nimport UIMain_Hand from './UIMain_Hand';\r\nimport { lwg } from '../Lwg_Template/lwg';\r\nexport default class UIMain extends Laya.Script {\r\n    constructor() {\r\n        super();\r\n        this.outs = new Array();\r\n        this.moveSwitch = false;\r\n    }\r\n    onEnable() {\r\n        this.gameScene = this.owner;\r\n        this.camera = this.gameScene.getChildAt(0);\r\n        this.person = this.gameScene.getChildAt(2);\r\n        this.person.addComponent(UIMain_Person);\r\n        this.rightHand = this.gameScene.getChildAt(3);\r\n        this.rightHand.addComponent(UIMain_Hand);\r\n        this.leftHand = this.gameScene.getChildAt(4);\r\n        this.leftHand.addComponent(UIMain_Hand);\r\n        this.besom = this.gameScene.getChildAt(5);\r\n        this.besom.addComponent(UIMain_Besom);\r\n        this.besomRig = this.besom.getComponent(Laya.Rigidbody3D);\r\n        this.goldParent = this.gameScene.getChildByName('goldParent');\r\n        this.goldTem = this.goldParent.getChildByName('goldTem');\r\n        this.goldTem.removeSelf();\r\n        console.log(this.goldTem);\r\n        this._ray = new Laya.Ray(new Laya.Vector3(0, 0, 0), new Laya.Vector3(0, 0, 0));\r\n        this.addMouseEvent();\r\n        Laya.MouseManager.multiTouchEnabled = false;\r\n        this.gameScene['UIMain'] = this;\r\n    }\r\n    addMouseEvent() {\r\n        Laya.stage.on(Laya.Event.MOUSE_DOWN, this, this.onMouseDown);\r\n        Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this.onMouseMove);\r\n        Laya.stage.on(Laya.Event.MOUSE_UP, this, this.onMouseUp);\r\n        Laya.stage.on(Laya.Event.MOUSE_OUT, this, this.onMouseOut);\r\n    }\r\n    onMouseDown() {\r\n        if (!lwg.Global._gameStart) {\r\n            return;\r\n        }\r\n        this.firstX = Laya.MouseManager.instance.mouseX;\r\n        this.firstY = Laya.MouseManager.instance.mouseY;\r\n        this.camera.viewportPointToRay(new Laya.Vector2(this.firstX, this.firstY), this._ray);\r\n        this.gameScene.physicsSimulation.rayCastAll(this._ray, this.outs);\r\n        if (this.outs.length != 0) {\r\n            for (var i = 0; i < this.outs.length; i++) {\r\n                let hitResult = this.outs[i].collider.owner;\r\n                if (hitResult.name === 'screen') {\r\n                    this.moveSwitch = true;\r\n                    let stageWidth = Laya.stage.width;\r\n                    if (this.firstX > stageWidth / 2) {\r\n                        this.targetHand = this.rightHand;\r\n                        this.leftHand['UIMain_Hand'].firstState();\r\n                    }\r\n                    else {\r\n                        this.targetHand = this.leftHand;\r\n                        this.rightHand['UIMain_Hand'].firstState();\r\n                    }\r\n                    let x = this.outs[i].point.x;\r\n                    let y = this.outs[i].point.y;\r\n                    let z = this.outs[i].point.z;\r\n                    this.targetHand.transform.localPositionX = x;\r\n                    this.targetHand.transform.localPositionY = y + 0.1;\r\n                    this.targetHand.transform.localPositionZ = z;\r\n                    let e = this.targetHand['UIMain_Hand'].palm.transform.localRotationEuler;\r\n                    e.x = 90;\r\n                    this.targetHand['UIMain_Hand'].palm.transform.localRotationEuler = e;\r\n                    this.targetHand['UIMain_Hand'].lopState = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    onMouseMove() {\r\n        if (!this.moveSwitch) {\r\n            return;\r\n        }\r\n        let x = Laya.MouseManager.instance.mouseX;\r\n        let y = Laya.MouseManager.instance.mouseY;\r\n        let differenceX;\r\n        let differenceY;\r\n        if (this.firstX && this.firstY) {\r\n            differenceX = this.firstX - x;\r\n            differenceY = this.firstY - y;\r\n        }\r\n        else {\r\n            this.firstX = Laya.MouseManager.instance.mouseX;\r\n            this.firstY = Laya.MouseManager.instance.mouseY;\r\n            return;\r\n        }\r\n        let moveX = differenceX / 900;\r\n        let moveY = differenceY / 900;\r\n        this.firstX = x;\r\n        this.firstY = y;\r\n        let handPosition = new Laya.Vector3(moveX, moveY, 0);\r\n        this.targetHand.transform.translate(handPosition);\r\n        let connectSWicth = this.targetHand['UIMain_Hand'].connectSWicth;\r\n        if (connectSWicth) {\r\n            let handX = this.targetHand.transform.localPositionX;\r\n            let besomX = this.besom.transform.localPositionX;\r\n            if (moveX > 0) {\r\n                this.besomRig.angularVelocity = (new Laya.Vector3(0, 0, -0.4));\r\n                this.besomRig.gravity = new Laya.Vector3(0.1, -2, 0);\r\n            }\r\n            else if (moveX < 0) {\r\n                this.besomRig.angularVelocity = (new Laya.Vector3(0, 0, 0.4));\r\n                this.besomRig.gravity = new Laya.Vector3(-0.1, -2, 0);\r\n            }\r\n            else if (moveX === 0) {\r\n                this.besomRig.angularVelocity = new Laya.Vector3(0, 0, 0);\r\n                this.besomRig.gravity = new Laya.Vector3(0, -2, 0);\r\n            }\r\n        }\r\n    }\r\n    onMouseUp() {\r\n        this.moveSwitch = false;\r\n    }\r\n    onMouseOut() {\r\n        this.moveSwitch = false;\r\n    }\r\n    taskcheck() {\r\n        let type = lwg.Global._taskPreType;\r\n        switch (type) {\r\n            case lwg.Enum.TaskType.continue:\r\n                if (lwg.Global._gameTimeLine % 60 == 0) {\r\n                    lwg.Global._taskPreTime = Number(lwg.Global._taskPreTime.substring(0, lwg.Global._taskPreTime.length - 1)) - 1 + 's';\r\n                    if (lwg.Global._taskPreTime === '0s') {\r\n                        console.log('坚持时间任务完成!');\r\n                        this.taskSwitch();\r\n                    }\r\n                }\r\n                break;\r\n            case lwg.Enum.TaskType.topUp:\r\n                let besomScreenY = lwg.Tools.transitionScreenPointfor3D(this.besom.transform.localPosition, this.camera).y;\r\n                if (besomScreenY < lwg.Global._taskPreTopY) {\r\n                    console.log('颠起任务完成！');\r\n                    this.taskSwitch();\r\n                }\r\n                break;\r\n            case lwg.Enum.TaskType.move:\r\n                let besomHeadP = this.besom.getChildAt(0).transform.position;\r\n                let besomHeadScreenP = lwg.Tools.transitionScreenPointfor3D(besomHeadP, this.camera);\r\n                let difX = besomHeadScreenP.x - lwg.Global._taskPrePoint.x;\r\n                let difY = besomHeadScreenP.y - lwg.Global._taskPrePoint.y;\r\n                if (Math.abs(difX) < 50 && Math.abs(difY) < 50) {\r\n                    console.log('移动任务完成！');\r\n                    this.taskSwitch();\r\n                }\r\n                break;\r\n            case lwg.Enum.TaskType.gold:\r\n                if (lwg.Global._gameTimeLine % 60 === 0) {\r\n                    lwg.Global._taskPreTime = Number(lwg.Global._taskPreTime.substring(0, lwg.Global._taskPreTime.length - 1)) - 1 + 's';\r\n                    if (lwg.Global._taskPreTime === '0s') {\r\n                        console.log('吃金币任务完成！');\r\n                        this.taskSwitch();\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    taskSwitch() {\r\n        lwg.Global._taskPreNum += 1;\r\n        let sum = lwg.Global._taskContentArray.length;\r\n        let num = lwg.Global._taskPreNum;\r\n        if (num > sum) {\r\n            lwg.Global._gameStart = false;\r\n            lwg.Global.openInterface('UIVictory', null, null);\r\n        }\r\n        else {\r\n            let UITask = lwg.Global.getDisplayScene('UITask');\r\n            UITask['UITask'].sontentSet();\r\n        }\r\n    }\r\n    defeatedDecide() {\r\n        this.moveSwitch = false;\r\n        this.targetHand = null;\r\n        lwg.Global._gameStart = false;\r\n        lwg.Global._gameTimeLine = 0;\r\n    }\r\n    goldLevelSet() {\r\n        let level = lwg.Global._gameLevel;\r\n        if (level === 3 || (level + 1) % 4 === 0) {\r\n            for (let i = 0; i < 4; i++) {\r\n                for (let j = 0; j < 10; j++) {\r\n                    let gold = this.goldTem.clone();\r\n                    this.goldParent.addChild(gold);\r\n                    gold.transform.localPositionX = this.goldTem.transform.localPositionX - j * 0.074;\r\n                    gold.transform.localPositionY = this.goldTem.transform.localPositionY - i * 0.074;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    onUpdate() {\r\n        if (lwg.Global._gameStart) {\r\n            if (lwg.Global._gameTimeLine === 0) {\r\n                lwg.Global.openInterface('UITask', null, null);\r\n                this.besom['UIMain_Besom'].initProperty();\r\n                this.connectionNum = null;\r\n                this.goldLevelSet();\r\n            }\r\n            lwg.Global._gameTimeLine++;\r\n            if (this.connectionNum) {\r\n                this.taskcheck();\r\n            }\r\n            let absZ = Math.abs(this.besom.transform.localRotationEulerZ);\r\n            let posY = this.besom.transform.localPositionY;\r\n            if (absZ > 60 || posY < -3.2) {\r\n                this.defeatedDecide();\r\n                lwg.Global.openInterface('UIDefeated', null, null);\r\n            }\r\n        }\r\n    }\r\n    onDisable() {\r\n    }\r\n}\r\n",
  "references": [
    "D:/Game/project/SetBroom/Setbroom/src/script/Game/UIMain_Person.ts",
    "D:/Game/project/SetBroom/Setbroom/src/script/Game/UIMain_Besom.ts",
    "D:/Game/project/SetBroom/Setbroom/src/script/Game/UIMain_Hand.ts",
    "D:/Game/project/SetBroom/Setbroom/src/script/Lwg_Template/lwg.ts"
  ]
}
